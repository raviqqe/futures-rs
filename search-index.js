var searchIndex = {};
searchIndex["either"] = {"doc":"The enum [`Either`] with variants `Left` and `Right` is a general purpose sum type with two cases.","items":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_left","","Return true if the value is the `Left` variant.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_right","","Return true if the value is the `Right` variant.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",0,{"inputs":[{"name":"self"},{"name":"f"},{"name":"g"}],"output":{"name":"t"}}],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",0,{"inputs":[{"name":"self"},{"name":"ctx"},{"name":"f"},{"name":"g"}],"output":{"name":"t"}}],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"into_iter","","Convert the inner value to an iterator.",0,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,null],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,null],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"from","","",0,{"inputs":[{"name":"result"}],"output":{"name":"self"}}],[11,"into","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"extend","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"fold","","",0,{"inputs":[{"name":"self"},{"name":"acc"},{"name":"g"}],"output":{"name":"acc"}}],[11,"count","","",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"last","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"nth","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"collect","","",0,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"all","","",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"bool"}}],[11,"next_back","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"read","","",0,null],[11,"read_to_end","","",0,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["usize"],"name":"result"}}],[11,"fill_buf","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"consume","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"as_ref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"target"}}],[11,"as_mut","","",0,{"inputs":[{"name":"self"}],"output":{"name":"target"}}],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which fails early with the opposite side. Can only be used in functions that return `Either` because of the early return of `Right` that it provides.",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more information.",null,null]],"paths":[[4,"Either"]]};
searchIndex["futures"] = {"doc":"Abstractions for asynchronous programming.","items":[[8,"Future","futures","A future represents an asychronous computation that may fail.",null,null],[16,"Item","","A successful value",0,null],[16,"Error","","An error",0,null],[10,"poll","","Attempt to resolve the future to a final value, registering the current task for wakeup if the value is not yet available.",0,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[8,"IntoFuture","","Types that can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",1,null],[16,"Item","","The item that the future may resolve with.",1,null],[16,"Error","","The error that the future may resolve with.",1,null],[10,"into_future","","Consumes this object and produces a future.",1,null],[8,"FutureExt","","An extension trait for `Future`s that provides a variety of convenient combinator functions.",null,null],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"err_into","","Map this future's error to a new error type using the `Into` trait.",2,{"inputs":[{"name":"self"}],"output":{"name":"errinto"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"select","","Waits for either one of two differently-typed futures to complete.",2,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",2,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"join"}}],[11,"join3","","Same as `join`, but with more futures.",2,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"}],"output":{"name":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",2,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"}],"output":{"name":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",2,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"}],"output":{"name":"join5"}}],[11,"left","","Wrap this future in an `Either` future, making it the left-hand variant of that `Either`.",2,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"right","","Wrap this future in an `Either` future, making it the right-hand variant of that `Either`.",2,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"into_stream","","Convert this future into a single element stream.",2,{"inputs":[{"name":"self"}],"output":{"name":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",2,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",2,{"inputs":[{"name":"self"}],"output":{"name":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",2,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",2,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",2,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[11,"recover","","Handle errors generated by this future by converting them into `Self::Item`.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"recover"}}],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",3,null],[16,"Error","","Errors yielded by the stream.",3,null],[10,"poll_next","","Attempt to pull out the next value of this stream, registering the current task for wakeup if the value is not yet available, and returning `None` if the stream is exhausted.",3,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety of convenient combinator functions.",null,null],[11,"next","","Converts this stream into a `Future`.",4,{"inputs":[{"name":"self"}],"output":{"name":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",4,{"inputs":[{"name":"self"}],"output":{"name":"collect"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",4,{"inputs":[{"name":"self"}],"output":{"name":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",4,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",4,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"foreach"}}],[11,"err_into","","Map this stream's error to a different type using the `Into` trait.",4,{"inputs":[{"name":"self"}],"output":{"name":"errinto"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",4,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",4,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",4,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",4,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferunordered"}}],[11,"zip","","An adapter for zipping two streams together.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"zip"}}],[11,"chain","","Adapter for chaining two stream.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",4,{"inputs":[{"name":"self"}],"output":{"name":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",4,null],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"inspect_err","","Do something with the error of this stream, afterwards passing it on.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspecterr"}}],[11,"recover","","Handle errors generated by this stream by converting them into `Option<Self::Item>`, such that a `None` value terminates the stream.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"recover"}}],[11,"left","","Wrap this stream in an `Either` stream, making it the left-hand variant of that `Either`.",4,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"right","","Wrap this stream in an `Either` stream, making it the right-hand variant of that `Either`.",4,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",5,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",5,null],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",5,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[10,"start_send","","Begin the process of sending a value to the sink. Each call to this function must be proceeded by a successful call to `poll_ready` which returned `Ok(Async::Ready(()))`.",5,null],[10,"poll_flush","","Flush any remaining output from this sink.",5,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[10,"poll_close","","Flush any remaining output and close this sink, if necessary.",5,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[8,"SinkExt","","An extension trait for `Sink`s that provides a variety of convenient combinator functions.",null,null],[11,"with","","Composes a function in front of the sink.",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"with"}}],[11,"with_flat_map","","Composes a function in front of the sink.",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"withflatmap"}}],[11,"sink_map_err","","Transforms the error returned by the sink.",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"sinkmaperr"}}],[11,"sink_err_into","","Map this sink's error to a different error type using the `Into` trait.",6,{"inputs":[{"name":"self"}],"output":{"name":"sinkerrinto"}}],[11,"buffer","","Adds a fixed-size buffer to the current sink.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"fanout","","Fanout items to multiple sinks.",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"fanout"}}],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",6,null],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"sendall"}}],[4,"Async","","Indicates whether a value is available, or if the current task has been scheduled for later wake-up instead.",null,null],[13,"Ready","","Represents that a value is immediately ready.",7,null],[13,"Pending","","Represents that a value is not ready yet.",7,null],[6,"Poll","","A convenience wrapper for `Result<Async<T>, E>`.",null,null],[4,"Never","","A type with no possible values.",null,null],[0,"channel","","Cross-task communication.",null,null],[0,"oneshot","futures::channel","A channel for sending a single message between asynchronous tasks.",null,null],[3,"Receiver","futures::channel::oneshot","A future for a value that will be provided by another asynchronous task.",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[5,"channel","","Creates a new one-shot channel for sending values across asynchronous tasks.",null,null],[3,"Canceled","","Error returned from a `Receiver` when the corresponding `Sender` is dropped.",null,null],[0,"mpsc","futures::channel","A multi-producer, single-consumer queue for sending values across asynchronous tasks.",null,null],[3,"Sender","futures::channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for `Sender`s used as `Sink`s.",null,null],[3,"TrySendError","","The error type returned from `try_send`.",null,null],[3,"TryRecvError","","The error type returned from `try_next`.",null,null],[5,"channel","","Creates a bounded mpsc channel for communicating between asynchronous tasks.",null,null],[5,"unbounded","","Creates an unbounded mpsc channel for communicating between asynchronous tasks.",null,null],[0,"executor","futures","Task execution.",null,null],[3,"Enter","futures::executor","Represents an executor context.",null,null],[3,"EnterError","","An error returned by `enter` if an execution scope has already been entered.",null,null],[3,"LocalExecutor","","A handle to a `LocalPool` that implements `Executor`.",null,null],[3,"LocalPool","","A single-threaded task pool.",null,null],[3,"Spawn","","A future representing the completion of task spawning.",null,null],[3,"SpawnWithHandle","","A future representing the completion of task spawning, yielding a `JoinHandle` to the spawned task.",null,null],[3,"ThreadPool","","A general-purpose thread pool for scheduling asynchronous tasks.",null,null],[3,"ThreadPoolBuilder","","Thread pool configuration object.",null,null],[3,"JoinHandle","","The type of future returned from the `ThreadPool::spawn` function, which proxies the futures running on the thread pool.",null,null],[5,"block_on","","Run a future to completion on the current thread.",null,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[5,"enter","","Marks the current thread as being within the dynamic extent of an executor.",null,{"inputs":[],"output":{"generics":["enter","entererror"],"name":"result"}}],[5,"spawn","","Spawn a task onto the default executor.",null,{"inputs":[{"name":"f"}],"output":{"name":"spawn"}}],[5,"spawn_with_handle","","Spawn a task onto the default executor, yielding a `JoinHandle` to the spawned task.",null,{"inputs":[{"name":"f"}],"output":{"name":"spawnwithhandle"}}],[3,"SpawnError","","Provides the reason that an executor was unable to spawn.",null,null],[8,"Executor","","A task executor.",null,null],[10,"spawn","","Spawn the given task, polling it until completion.",8,{"inputs":[{"name":"self"},{"generics":["future"],"name":"box"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"status","","Determine whether the executor is able to spawn new tasks.",8,{"inputs":[{"name":"self"}],"output":{"generics":["spawnerror"],"name":"result"}}],[0,"future","futures","Asynchronous values.",null,null],[3,"FutureOption","futures::future","A future representing a value which may or may not be present.",null,null],[3,"FutureResult","","A future representing a value that is immediately ready.",null,null],[8,"Future","","A future represents an asychronous computation that may fail.",null,null],[16,"Item","","A successful value",0,null],[16,"Error","","An error",0,null],[10,"poll","","Attempt to resolve the future to a final value, registering the current task for wakeup if the value is not yet available.",0,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[8,"IntoFuture","","Types that can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",1,null],[16,"Item","","The item that the future may resolve with.",1,null],[16,"Error","","The error that the future may resolve with.",1,null],[10,"into_future","","Consumes this object and produces a future.",1,null],[5,"err","","Creates a new future that will immediately fail with the given error.",null,{"inputs":[{"name":"e"}],"output":{"name":"futureresult"}}],[5,"ok","","Creates a new future that will immediately resolve successfully to the given value.",null,{"inputs":[{"name":"t"}],"output":{"name":"futureresult"}}],[5,"result","","Creates a new future that will immediate resolve with the given result.",null,{"inputs":[{"name":"result"}],"output":{"name":"futureresult"}}],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",null,null],[3,"Empty","","A future which is never resolved.",null,null],[3,"Flatten","","Future for the `flatten` combinator.",null,null],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",null,null],[3,"ErrInto","","Future for the `err_into` combinator, changing the error type of a future.",null,null],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",null,null],[3,"Inspect","","Do something with the item of a future, passing it on.",null,null],[3,"IntoStream","","A type which converts a `Future` into a `Stream` containing a single element.",null,null],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",null,null],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",null,null],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",null,null],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",null,null],[3,"Lazy","","A future which defers creation of the actual future until the future is `poll`ed.",null,null],[3,"LoopFn","","A future implementing a tail-recursive loop.",null,null],[3,"Map","","Future for the `map` combinator, changing the type of a future.",null,null],[3,"MapErr","","Future for the `map_err` combinator, changing the error type of a future.",null,null],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",null,null],[3,"PollFn","","A future which adapts a function returning `Poll`.",null,null],[3,"Select","","Future for the `select` combinator, waiting for one of two differently-typed futures to complete.",null,null],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",null,null],[4,"Either","","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",null,null],[13,"Left","","A value of type `L`.",9,null],[13,"Right","","A value of type `R`.",9,null],[4,"Loop","","An enum describing whether to `break` or `continue` a `loop_fn` loop.",null,null],[13,"Break","","Indicates that the loop has completed with output `T`.",10,null],[13,"Continue","","Indicates that the loop function should be called again with input state `S`.",10,null],[8,"FutureExt","","An extension trait for `Future`s that provides a variety of convenient combinator functions.",null,null],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"err_into","","Map this future's error to a new error type using the `Into` trait.",2,{"inputs":[{"name":"self"}],"output":{"name":"errinto"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"select","","Waits for either one of two differently-typed futures to complete.",2,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",2,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"join"}}],[11,"join3","","Same as `join`, but with more futures.",2,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"}],"output":{"name":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",2,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"}],"output":{"name":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",2,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"}],"output":{"name":"join5"}}],[11,"left","","Wrap this future in an `Either` future, making it the left-hand variant of that `Either`.",2,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"right","","Wrap this future in an `Either` future, making it the right-hand variant of that `Either`.",2,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"into_stream","","Convert this future into a single element stream.",2,{"inputs":[{"name":"self"}],"output":{"name":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",2,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",2,{"inputs":[{"name":"self"}],"output":{"name":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",2,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",2,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",2,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[11,"recover","","Handle errors generated by this future by converting them into `Self::Item`.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"recover"}}],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"lazy","","Creates a new future which will eventually be the same as the one created by the closure provided.",null,{"inputs":[{"name":"f"}],"output":{"name":"lazy"}}],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"loopfn"}}],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",null,null],[3,"JoinAll","","A future which takes a list of futures and resolves with a vector of the completed values.",null,null],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of any of a list of futures to complete.",null,null],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of any of a list of futures to successfully complete. Unlike `select_all`, this future ignores all but the last error, if there are any.",null,null],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use `Future::shared()` method to convert any future into a `Shared` future.",null,null],[3,"SharedError","","A wrapped error of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"SharedItem","","A wrapped item of the original future that is cloneable and implements Deref for ease of use.",null,null],[5,"join_all","","Creates a future which represents a collection of the results of the futures given.",null,{"inputs":[{"name":"i"}],"output":{"name":"joinall"}}],[5,"select_all","","Creates a new future which will select over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectall"}}],[5,"select_ok","","Creates a new future which will select the first successful future over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectok"}}],[0,"io","futures","Asynchronous I/O.",null,null],[3,"Error","futures::io","The error type for I/O operations of the [`Read`], [`Write`], [`Seek`], and associated traits.",null,null],[3,"Initializer","","A type used to conditionally initialize buffers passed to `AsyncRead` methods, modeled after `std`.",null,null],[3,"IoVec","","A specialized byte slice type for performing vectored I/O operations.",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",11,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",11,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",11,null],[13,"ConnectionReset","","The connection was reset by the remote server.",11,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote server.",11,null],[13,"NotConnected","","The network operation failed because it was not connected yet.",11,null],[13,"AddrInUse","","A socket address could not be bound because the address is already in use elsewhere.",11,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested address was not local.",11,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",11,null],[13,"AlreadyExists","","An entity already exists, often a file.",11,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking operation was requested to not occur.",11,null],[13,"InvalidInput","","A parameter was incorrect.",11,null],[13,"InvalidData","","Data not valid for the operation were encountered.",11,null],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be canceled.",11,null],[13,"WriteZero","","An error returned when an operation could not be completed because a call to [`write`] returned [`Ok(0)`].",11,null],[13,"Interrupted","","This operation was interrupted.",11,null],[13,"Other","","Any I/O error not part of this list.",11,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed because an \"end of file\" was reached prematurely.",11,null],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[11,"initializer","","Determines if this `AsyncRead`er can work with buffers of uninitialized memory.",12,{"inputs":[{"name":"self"}],"output":{"name":"initializer"}}],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",12,null],[11,"poll_vectored_read","","Attempt to read from the `AsyncRead` into `vec` using vectored IO operations.",12,null],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",13,null],[11,"poll_vectored_write","","Attempt to write bytes from `vec` into the object using vectored IO operations.",13,null],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered data reach their destination.",13,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[10,"poll_close","","Attempt to close the object.",13,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[6,"Result","","A specialized `Result` type for I/O operations.",null,null],[8,"AsyncReadExt","","An extension trait which adds utility methods to `AsyncRead` types.",null,null],[11,"copy_into","","Creates a future which copies all the bytes from one object to another.",14,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"copyinto"}}],[11,"read","","Tries to read some bytes directly into the given `buf` in asynchronous manner, returning a future type.",14,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"read"}}],[11,"read_exact","","Creates a future which will read exactly enough bytes to fill `buf`, returning an error if EOF is hit sooner.",14,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"readexact"}}],[11,"read_to_end","","Creates a future which will read all the bytes from this `AsyncRead`.",14,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":{"name":"readtoend"}}],[11,"split","","Helper method for splitting this read/write object into two halves.",14,null],[8,"AsyncWriteExt","","An extension trait which adds utility methods to `AsyncWrite` types.",null,null],[11,"flush","","Creates a future which will entirely flush this `AsyncWrite` and then return `self`.",15,{"inputs":[{"name":"self"}],"output":{"name":"flush"}}],[11,"close","","Creates a future which will entirely close this `AsyncWrite` and then return `self`.",15,{"inputs":[{"name":"self"}],"output":{"name":"close"}}],[11,"write_all","","Write a `Buf` into this value, returning how many bytes were written. Creates a future that will write the entire contents of the buffer `buf` into this `AsyncWrite`.",15,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"writeall"}}],[3,"AllowStdIo","","A simple wrapper type which allows types which implement only implement `std::io::Read` or `std::io::Write` to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.",null,null],[3,"Close","","A future used to fully close an I/O object.",null,null],[3,"CopyInto","","A future which will copy all data from a reader into a writer.",null,null],[3,"Flush","","A future used to fully flush an I/O object.",null,null],[3,"Read","","A future which can be used to easily read available number of bytes to fill a buffer.",null,null],[3,"ReadExact","","A future which can be used to easily read exactly enough bytes to fill a buffer.",null,null],[3,"ReadHalf","","The readable half of an object returned from `AsyncRead::split`.",null,null],[3,"ReadToEnd","","A future which can be used to easily read the entire contents of a stream into a vector.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"WriteAll","","A future used to write the entire contents of some data to a stream.",null,null],[3,"WriteHalf","","The writable half of an object returned from `AsyncRead::split`.",null,null],[0,"never","futures","This module contains the `Never` type.",null,null],[0,"prelude","","A \"prelude\" for crates using the `futures` crate.",null,null],[8,"Future","futures::prelude","A future represents an asychronous computation that may fail.",null,null],[16,"Item","","A successful value",0,null],[16,"Error","","An error",0,null],[10,"poll","","Attempt to resolve the future to a final value, registering the current task for wakeup if the value is not yet available.",0,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[8,"IntoFuture","","Types that can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",1,null],[16,"Item","","The item that the future may resolve with.",1,null],[16,"Error","","The error that the future may resolve with.",1,null],[10,"into_future","","Consumes this object and produces a future.",1,null],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",3,null],[16,"Error","","Errors yielded by the stream.",3,null],[10,"poll_next","","Attempt to pull out the next value of this stream, registering the current task for wakeup if the value is not yet available, and returning `None` if the stream is exhausted.",3,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[4,"Async","","Indicates whether a value is available, or if the current task has been scheduled for later wake-up instead.",null,null],[13,"Ready","","Represents that a value is immediately ready.",7,null],[13,"Pending","","Represents that a value is not ready yet.",7,null],[6,"Poll","","A convenience wrapper for `Result<Async<T>, E>`.",null,null],[4,"Never","","A type with no possible values.",null,null],[0,"task","","Task notification.",null,null],[3,"LocalMap","futures::prelude::task","A map storing task-local data.",null,null],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying its executor that it is ready to be run.",null,null],[3,"Context","","Information about the currently-running task.",null,null],[8,"Wake","","A way of waking up a specific task.",null,null],[10,"wake","","Indicates that the associated task is ready to make progress and should be `poll`ed.",16,null],[3,"LocalKey","","A key for task-local data stored in a future's task.",null,null],[8,"UnsafeWake","","An unsafe trait for implementing custom memory management for a `Waker`.",null,null],[10,"clone_raw","","Creates a new `Waker` from this instance of `UnsafeWake`.",17,{"inputs":[{"name":"self"}],"output":{"name":"waker"}}],[10,"drop_raw","","Drops this instance of `UnsafeWake`, deallocating resources associated with it.",17,null],[10,"wake","","Indicates that the associated task is ready to make progress and should be `poll`ed.",17,null],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[8,"Executor","futures::prelude","A task executor.",null,null],[10,"spawn","","Spawn the given task, polling it until completion.",8,{"inputs":[{"name":"self"},{"generics":["future"],"name":"box"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"status","","Determine whether the executor is able to spawn new tasks.",8,{"inputs":[{"name":"self"}],"output":{"generics":["spawnerror"],"name":"result"}}],[8,"Sink","","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",5,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",5,null],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",5,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[10,"start_send","","Begin the process of sending a value to the sink. Each call to this function must be proceeded by a successful call to `poll_ready` which returned `Ok(Async::Ready(()))`.",5,null],[10,"poll_flush","","Flush any remaining output from this sink.",5,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[10,"poll_close","","Flush any remaining output and close this sink, if necessary.",5,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[11,"initializer","","Determines if this `AsyncRead`er can work with buffers of uninitialized memory.",12,{"inputs":[{"name":"self"}],"output":{"name":"initializer"}}],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",12,null],[11,"poll_vectored_read","","Attempt to read from the `AsyncRead` into `vec` using vectored IO operations.",12,null],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",13,null],[11,"poll_vectored_write","","Attempt to write bytes from `vec` into the object using vectored IO operations.",13,null],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered data reach their destination.",13,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[10,"poll_close","","Attempt to close the object.",13,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[8,"FutureExt","","An extension trait for `Future`s that provides a variety of convenient combinator functions.",null,null],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"err_into","","Map this future's error to a new error type using the `Into` trait.",2,{"inputs":[{"name":"self"}],"output":{"name":"errinto"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"select","","Waits for either one of two differently-typed futures to complete.",2,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",2,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"join"}}],[11,"join3","","Same as `join`, but with more futures.",2,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"}],"output":{"name":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",2,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"}],"output":{"name":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",2,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"}],"output":{"name":"join5"}}],[11,"left","","Wrap this future in an `Either` future, making it the left-hand variant of that `Either`.",2,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"right","","Wrap this future in an `Either` future, making it the right-hand variant of that `Either`.",2,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"into_stream","","Convert this future into a single element stream.",2,{"inputs":[{"name":"self"}],"output":{"name":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",2,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",2,{"inputs":[{"name":"self"}],"output":{"name":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",2,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",2,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",2,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[11,"recover","","Handle errors generated by this future by converting them into `Self::Item`.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"recover"}}],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety of convenient combinator functions.",null,null],[11,"next","","Converts this stream into a `Future`.",4,{"inputs":[{"name":"self"}],"output":{"name":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",4,{"inputs":[{"name":"self"}],"output":{"name":"collect"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",4,{"inputs":[{"name":"self"}],"output":{"name":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",4,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",4,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"foreach"}}],[11,"err_into","","Map this stream's error to a different type using the `Into` trait.",4,{"inputs":[{"name":"self"}],"output":{"name":"errinto"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",4,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",4,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",4,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",4,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferunordered"}}],[11,"zip","","An adapter for zipping two streams together.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"zip"}}],[11,"chain","","Adapter for chaining two stream.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",4,{"inputs":[{"name":"self"}],"output":{"name":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",4,null],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"inspect_err","","Do something with the error of this stream, afterwards passing it on.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspecterr"}}],[11,"recover","","Handle errors generated by this stream by converting them into `Option<Self::Item>`, such that a `None` value terminates the stream.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"recover"}}],[11,"left","","Wrap this stream in an `Either` stream, making it the left-hand variant of that `Either`.",4,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"right","","Wrap this stream in an `Either` stream, making it the right-hand variant of that `Either`.",4,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[8,"SinkExt","","An extension trait for `Sink`s that provides a variety of convenient combinator functions.",null,null],[11,"with","","Composes a function in front of the sink.",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"with"}}],[11,"with_flat_map","","Composes a function in front of the sink.",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"withflatmap"}}],[11,"sink_map_err","","Transforms the error returned by the sink.",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"sinkmaperr"}}],[11,"sink_err_into","","Map this sink's error to a different error type using the `Into` trait.",6,{"inputs":[{"name":"self"}],"output":{"name":"sinkerrinto"}}],[11,"buffer","","Adds a fixed-size buffer to the current sink.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"fanout","","Fanout items to multiple sinks.",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"fanout"}}],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",6,null],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"sendall"}}],[8,"AsyncReadExt","","An extension trait which adds utility methods to `AsyncRead` types.",null,null],[11,"copy_into","","Creates a future which copies all the bytes from one object to another.",14,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"copyinto"}}],[11,"read","","Tries to read some bytes directly into the given `buf` in asynchronous manner, returning a future type.",14,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"read"}}],[11,"read_exact","","Creates a future which will read exactly enough bytes to fill `buf`, returning an error if EOF is hit sooner.",14,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"readexact"}}],[11,"read_to_end","","Creates a future which will read all the bytes from this `AsyncRead`.",14,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":{"name":"readtoend"}}],[11,"split","","Helper method for splitting this read/write object into two halves.",14,null],[8,"AsyncWriteExt","","An extension trait which adds utility methods to `AsyncWrite` types.",null,null],[11,"flush","","Creates a future which will entirely flush this `AsyncWrite` and then return `self`.",15,{"inputs":[{"name":"self"}],"output":{"name":"flush"}}],[11,"close","","Creates a future which will entirely close this `AsyncWrite` and then return `self`.",15,{"inputs":[{"name":"self"}],"output":{"name":"close"}}],[11,"write_all","","Write a `Buf` into this value, returning how many bytes were written. Creates a future that will write the entire contents of the buffer `buf` into this `AsyncWrite`.",15,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"writeall"}}],[0,"sink","futures","Asynchronous sinks.",null,null],[8,"Sink","futures::sink","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",5,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",5,null],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",5,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[10,"start_send","","Begin the process of sending a value to the sink. Each call to this function must be proceeded by a successful call to `poll_ready` which returned `Ok(Async::Ready(()))`.",5,null],[10,"poll_flush","","Flush any remaining output from this sink.",5,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[10,"poll_close","","Flush any remaining output and close this sink, if necessary.",5,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[3,"Close","","Future for the `close` combinator, which polls the sink until all data has been closeed.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two sinks at the same time.",null,null],[3,"Flush","","Future for the `flush` combinator, which polls the sink until all data has been flushed.",null,null],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and then waits until the sink has fully flushed.",null,null],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"SinkErrInto","","A sink combinator to change the error type of a sink.",null,null],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",null,null],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run prior to pushing a value into the underlying sink.",null,null],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator to run prior to pushing a value into the underlying sink",null,null],[8,"SinkExt","","An extension trait for `Sink`s that provides a variety of convenient combinator functions.",null,null],[11,"with","","Composes a function in front of the sink.",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"with"}}],[11,"with_flat_map","","Composes a function in front of the sink.",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"withflatmap"}}],[11,"sink_map_err","","Transforms the error returned by the sink.",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"sinkmaperr"}}],[11,"sink_err_into","","Map this sink's error to a different error type using the `Into` trait.",6,{"inputs":[{"name":"self"}],"output":{"name":"sinkerrinto"}}],[11,"buffer","","Adds a fixed-size buffer to the current sink.",6,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"fanout","","Fanout items to multiple sinks.",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"fanout"}}],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",6,null],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",6,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"sendall"}}],[5,"close","","A future that completes when the sink has finished closing.",null,{"inputs":[{"name":"s"}],"output":{"name":"close"}}],[5,"flush","","A future that completes when the sink has finished processing all pending requests.",null,{"inputs":[{"name":"s"}],"output":{"name":"flush"}}],[3,"Buffer","","Sink for the `Sink::buffer` combinator, which buffers up to some fixed number of values when the underlying sink is unable to accept them.",null,null],[0,"stream","futures","Asynchronous streams.",null,null],[8,"Stream","futures::stream","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",3,null],[16,"Error","","Errors yielded by the stream.",3,null],[10,"poll_next","","Attempt to pull out the next value of this stream, registering the current task for wakeup if the value is not yet available, and returning `None` if the stream is exhausted.",3,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[3,"AndThen","","A stream combinator which chains a computation onto values produced by a stream.",null,null],[3,"Chain","","An adapter for chaining the output of two streams.",null,null],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",null,null],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",null,null],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",null,null],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",null,null],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"ErrInto","","A stream combinator to change the error type of a stream.",null,null],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",null,null],[3,"Inspect","","Do something with the items of a stream, passing it on.",null,null],[3,"InspectErr","","Do something with the error of a stream, passing it on.",null,null],[3,"IterOk","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterResult","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",null,null],[3,"MapErr","","A stream combinator which will change the error type of a stream from one type to another.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"OrElse","","A stream combinator which chains a computation onto errors produced by a stream.",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"PollFn","","A stream which adapts a function returning `Poll`.",null,null],[3,"Repeat","","Stream that produces the same element repeatedly.",null,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",null,null],[3,"Take","","A stream combinator which returns a maximum number of elements.",null,null],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",null,null],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",null,null],[3,"Unfold","","A stream which creates futures, polls them and return their result",null,null],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety of convenient combinator functions.",null,null],[11,"next","","Converts this stream into a `Future`.",4,{"inputs":[{"name":"self"}],"output":{"name":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",4,{"inputs":[{"name":"self"}],"output":{"name":"collect"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",4,{"inputs":[{"name":"self"}],"output":{"name":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",4,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",4,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"foreach"}}],[11,"err_into","","Map this stream's error to a different type using the `Into` trait.",4,{"inputs":[{"name":"self"}],"output":{"name":"errinto"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",4,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",4,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",4,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",4,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferunordered"}}],[11,"zip","","An adapter for zipping two streams together.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"zip"}}],[11,"chain","","Adapter for chaining two stream.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",4,{"inputs":[{"name":"self"}],"output":{"name":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",4,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",4,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",4,null],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"inspect_err","","Do something with the error of this stream, afterwards passing it on.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspecterr"}}],[11,"recover","","Handle errors generated by this stream by converting them into `Option<Self::Item>`, such that a `None` value terminates the stream.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"recover"}}],[11,"left","","Wrap this stream in an `Either` stream, making it the left-hand variant of that `Either`.",4,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"right","","Wrap this stream in an `Either` stream, making it the right-hand variant of that `Either`.",4,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[5,"empty","","Creates a stream which contains no elements.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"i"}],"output":{"name":"iterok"}}],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"j"}],"output":{"name":"iterresult"}}],[5,"once","","Creates a stream of single element",null,{"inputs":[{"name":"f"}],"output":{"name":"once"}}],[5,"poll_fn","","Creates a new stream wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,{"inputs":[{"name":"t"}],"output":{"name":"repeat"}}],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",null,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"unfold"}}],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresunordered"}}],[5,"select_all","","Convert a list of streams into a `Stream` of results from the streams.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectall"}}],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Collect","","A future which collects all of the values of a stream into a vector.",null,null],[3,"FuturesUnordered","","A set of `Future`s which may complete in any order.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves of a `Stream + Split`, and thus could not be `reunite`d.",null,null],[12,"0","","",18,null],[12,"1","","",18,null],[3,"SelectAll","","An unbounded set of streams",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresordered"}}],[0,"task","futures","Tools for working with tasks.",null,null],[3,"Context","futures::task","Information about the currently-running task.",null,null],[3,"LocalMap","","A map storing task-local data.",null,null],[3,"Waker","","A `Waker` is a handle for waking up a task by notifying its executor that it is ready to be run.",null,null],[8,"UnsafeWake","","An unsafe trait for implementing custom memory management for a `Waker`.",null,null],[10,"clone_raw","","Creates a new `Waker` from this instance of `UnsafeWake`.",17,{"inputs":[{"name":"self"}],"output":{"name":"waker"}}],[10,"drop_raw","","Drops this instance of `UnsafeWake`, deallocating resources associated with it.",17,null],[10,"wake","","Indicates that the associated task is ready to make progress and should be `poll`ed.",17,null],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[3,"LocalKey","","A key for task-local data stored in a future's task.",null,null],[8,"Wake","","A way of waking up a specific task.",null,null],[10,"wake","","Indicates that the associated task is ready to make progress and should be `poll`ed.",16,null],[14,"try_ready","futures","A macro for extracting the successful type of a `Poll<T, E>`.",null,null],[14,"task_local","","A macro to create a `static` of type `LocalKey`.",null,null],[11,"fmt","futures::io","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"cmp","","",11,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"ordering"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"description","","",19,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"hash","","",11,null],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",19,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"from","","",19,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"from","","",19,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"fmt","futures::prelude","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::task","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::executor","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::task","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::prelude","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::task","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","futures::prelude","",20,{"inputs":[{"name":"self"},{"name":"never"}],"output":{"name":"bool"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"cmp","","",20,{"inputs":[{"name":"self"},{"name":"never"}],"output":{"name":"ordering"}}],[11,"poll","futures::future","",22,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::prelude","",20,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","never"],"name":"result"}}],[11,"poll","futures::future","",9,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",21,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"partial_cmp","futures::prelude","",20,{"inputs":[{"name":"self"},{"name":"never"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","futures::task","",26,{"inputs":[{"name":"self"}],"output":{"name":"waker"}}],[11,"clone","futures::prelude","",20,{"inputs":[{"name":"self"}],"output":{"name":"never"}}],[11,"clone","futures::future","",22,{"inputs":[{"name":"self"}],"output":{"name":"futureoption"}}],[11,"clone","futures::prelude","",7,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"clone","futures::future","",21,{"inputs":[{"name":"self"}],"output":{"name":"futureresult"}}],[11,"from","futures::task","",26,{"inputs":[{"name":"arc"}],"output":{"name":"waker"}}],[11,"from","futures::future","",22,{"inputs":[{"name":"option"}],"output":{"name":"futureoption"}}],[11,"from","","",21,{"inputs":[{"name":"result"}],"output":{"name":"futureresult"}}],[11,"from","futures::prelude","",7,{"inputs":[{"name":"t"}],"output":{"name":"async"}}],[11,"poll_next","","",20,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","never"],"name":"result"}}],[11,"poll_next","futures::future","",9,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"default","futures::task","",23,{"inputs":[],"output":{"name":"atomicwaker"}}],[11,"drop","","",26,null],[11,"next","futures::future","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",9,null],[11,"fold","","",9,{"inputs":[{"name":"self"},{"name":"acc"},{"name":"g"}],"output":{"name":"acc"}}],[11,"count","","",9,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"last","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"nth","","",9,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"collect","","",9,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"all","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"bool"}}],[11,"as_ref","","",9,{"inputs":[{"name":"self"}],"output":{"name":"target"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"from","","",9,{"inputs":[{"name":"result"}],"output":{"name":"either"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"into","","",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"extend","","",9,null],[11,"cmp","","",9,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"ordering"}}],[11,"deref_mut","","",9,null],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"write","","",9,null],[11,"flush","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"hash","","",9,null],[11,"read","","",9,null],[11,"read_to_end","","",9,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["usize","error"],"name":"result"}}],[11,"description","","",9,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"deref","","",9,null],[11,"next_back","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fill_buf","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"consume","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"as_mut","","",9,{"inputs":[{"name":"self"}],"output":{"name":"target"}}],[11,"fmt","futures::channel::mpsc","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::channel::oneshot","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::channel::mpsc","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","futures::channel::oneshot","",30,{"inputs":[{"name":"self"},{"name":"canceled"}],"output":{"name":"bool"}}],[11,"eq","futures::channel::mpsc","",29,{"inputs":[{"name":"self"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"description","futures::channel::oneshot","",30,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","futures::channel::mpsc","",31,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","","",29,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","","",32,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"poll_next","","",33,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",34,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"trysenderror"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"sender"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"senderror"}}],[11,"clone","futures::channel::oneshot","",30,{"inputs":[{"name":"self"}],"output":{"name":"canceled"}}],[11,"clone","futures::channel::mpsc","",36,{"inputs":[{"name":"self"}],"output":{"name":"unboundedsender"}}],[11,"poll","futures::channel::oneshot","",37,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","canceled"],"name":"result"}}],[11,"drop","","",38,null],[11,"drop","","",37,null],[11,"drop","futures::channel::mpsc","",33,null],[11,"drop","","",35,null],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::channel::oneshot","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::channel::mpsc","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::channel::oneshot","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::channel::mpsc","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::channel::oneshot","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::channel::mpsc","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"spawn","futures::executor","",39,{"inputs":[{"name":"self"},{"generics":["future"],"name":"box"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"status","","",39,{"inputs":[{"name":"self"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"spawn","","",40,{"inputs":[{"name":"self"},{"generics":["future"],"name":"box"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"localexecutor"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"threadpool"}}],[11,"poll","","",41,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","never"],"name":"result"}}],[11,"poll","","",42,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",43,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","never"],"name":"result"}}],[11,"drop","","",40,null],[11,"drop","","",44,null],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"deref","futures::future","",47,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"deref","","",48,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"cmp","futures::io","",49,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"ordering"}}],[11,"poll_write","","",50,null],[11,"poll_vectored_write","","",50,null],[11,"poll_flush","","",50,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[11,"poll_close","","",50,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[11,"poll_write","","",49,null],[11,"poll_flush","","",49,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[11,"poll_close","","",49,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[11,"poll_ready","futures::stream","",51,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",51,null],[11,"poll_flush","","",51,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",51,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",52,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",52,null],[11,"poll_flush","","",52,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",52,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",53,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",53,null],[11,"poll_flush","","",53,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",53,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",54,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",54,null],[11,"poll_flush","","",54,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",54,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",55,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",55,null],[11,"poll_flush","","",55,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",55,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",56,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",56,null],[11,"poll_flush","","",56,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",56,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",57,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",57,null],[11,"poll_flush","","",57,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",57,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",58,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",58,null],[11,"poll_flush","","",58,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",58,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",59,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",59,null],[11,"poll_flush","","",59,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",59,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",60,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",60,null],[11,"poll_flush","","",60,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",60,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",61,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",61,null],[11,"poll_flush","","",61,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",61,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","futures::sink","",62,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",62,null],[11,"poll_flush","","",62,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",62,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",63,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",63,null],[11,"poll_flush","","",63,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",63,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",64,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",64,null],[11,"poll_flush","","",64,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",64,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","futures::stream","",65,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",65,null],[11,"poll_flush","","",65,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",65,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",66,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",66,null],[11,"poll_flush","","",66,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",66,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",67,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",67,null],[11,"poll_flush","","",67,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",67,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",68,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",68,null],[11,"poll_flush","","",68,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",68,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",69,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",69,null],[11,"poll_flush","","",69,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",69,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",70,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",70,null],[11,"poll_flush","","",70,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",70,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","futures::sink","",71,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",71,null],[11,"poll_flush","","",71,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",71,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","futures::stream","",72,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",72,null],[11,"poll_flush","","",72,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",72,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",73,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",73,null],[11,"poll_flush","","",73,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",73,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",74,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",74,null],[11,"poll_flush","","",74,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",74,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","futures::sink","",75,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",75,null],[11,"poll_flush","","",75,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",75,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","futures::stream","",76,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",76,null],[11,"poll_flush","","",76,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",76,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","futures::sink","",77,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",77,null],[11,"poll_flush","","",77,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",77,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"clone","futures::future","",47,{"inputs":[{"name":"self"}],"output":{"name":"sharederror"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"shareditem"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[11,"clone","futures::io","",49,{"inputs":[{"name":"self"}],"output":{"name":"allowstdio"}}],[11,"read","","",49,null],[11,"read_to_end","","",49,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["usize","error"],"name":"result"}}],[11,"read_to_string","","",49,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["usize","error"],"name":"result"}}],[11,"read_exact","","",49,null],[11,"fmt","futures::future","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::sink","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::sink","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::io","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::sink","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::io","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::sink","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::io","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::io","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::io","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::io","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::sink","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::io","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::sink","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::sink","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::io","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::io","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::future","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::stream","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","futures::sink","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"poll_read","futures::io","",49,null],[11,"poll_read","","",127,null],[11,"poll_vectored_read","","",127,null],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"hash","","",49,null],[11,"poll","futures::stream","",85,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::future","",109,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",87,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",95,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::io","",105,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[11,"poll","","",102,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[11,"poll","futures::stream","",123,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::future","",125,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::io","",89,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[11,"poll","futures::future","",97,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",98,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",94,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",112,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::stream","",91,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::future","",81,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::sink","",120,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::future","",99,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::sink","",90,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::io","",126,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[11,"poll","futures::future","",110,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",119,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",84,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",106,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::io","",117,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[11,"poll","futures::future","",113,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",118,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",93,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",103,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::stream","",82,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::future","",122,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",132,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::stream","",128,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::io","",108,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[11,"poll","futures::sink","",124,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::stream","",107,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::sink","",136,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","futures::io","",129,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[11,"poll","futures::future","",78,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",79,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll","","",116,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"partial_cmp","futures::io","",49,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",49,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"le","","",49,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"gt","","",49,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"ge","","",49,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"write","","",49,null],[11,"flush","","",49,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"write_all","","",49,null],[11,"write_fmt","","",49,{"inputs":[{"name":"self"},{"name":"arguments"}],"output":{"generics":["error"],"name":"result"}}],[11,"description","futures::stream","",18,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"description","futures::future","",47,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",47,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"as_ref","futures::io","",121,null],[11,"from_iter","futures::stream","",114,{"inputs":[{"name":"t"}],"output":{"name":"futuresunordered"}}],[11,"from_iter","futures::future","",116,{"inputs":[{"name":"t"}],"output":{"name":"joinall"}}],[11,"from_iter","futures::stream","",83,{"inputs":[{"name":"t"}],"output":{"name":"futuresordered"}}],[11,"as_mut","futures::io","",121,null],[11,"poll_next","futures::stream","",101,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",57,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::future","",133,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::stream","",104,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::sink","",71,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::stream","",92,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",56,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",70,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",135,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",96,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",66,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",54,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",76,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",130,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",61,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::sink","",63,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::stream","",115,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::sink","",75,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::stream","",80,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",58,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",111,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",65,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::sink","",64,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::stream","",74,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",60,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::sink","",62,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::future","",86,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","futures::stream","",114,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",55,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",67,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",53,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",134,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",59,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",51,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",88,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",72,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",100,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",83,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",52,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",69,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",131,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",68,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"drop","","",114,null],[11,"drop","futures::future","",78,null],[11,"fmt","futures::io","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"deref_mut","","",138,null],[11,"deref","","",138,null],[11,"poll_ready","futures::channel::mpsc","",36,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",36,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_flush","","",36,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",36,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_ready","","",35,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"start_send","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_flush","","",35,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_close","","",35,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"map","futures::prelude","Change the success value of this `Async` with the closure provided",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"async"}}],[11,"is_ready","","Returns whether this is `Async::Ready`",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_pending","","Returns whether this is `Async::Pending`",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"never_into","","Convert the `Never` type into any other type.",20,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"close","futures::channel::oneshot","Gracefully close this receiver, preventing any subsequent attempts to send to it.",37,null],[11,"send","","Completes this oneshot with a successful result.",38,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether its associated `Receiver` with has been dropped.",38,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","never"],"name":"result"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has been dropped.",38,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"try_send","futures::channel::mpsc","Attempts to send a message on this `Sender`, returning the message if there was an error.",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["trysenderror"],"name":"result"}}],[11,"start_send","","Send a message on the channel.",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"result"}}],[11,"poll_ready","","Polls the channel to determine if there is guaranteed capacity to send at least one item without waiting.",35,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","senderror"],"name":"result"}}],[11,"is_closed","","Returns whether this channel is closed without needing a context.",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"close_channel","","Closes this channel from the sender side, preventing any new messages.",35,null],[11,"poll_ready","","Check if the channel is ready to receive a message.",36,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","senderror"],"name":"result"}}],[11,"is_closed","","Returns whether this channel is closed without needing a context.",36,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"close_channel","","Closes this channel from the sender side, preventing any new messages.",36,null],[11,"start_send","","Send a message on the channel.",36,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"result"}}],[11,"unbounded_send","","Sends a message along this channel.",36,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["trysenderror"],"name":"result"}}],[11,"close","","Closes the receiving half of a channel, without dropping it.",33,null],[11,"try_next","","Tries to receive the next message without notifying a context if empty.",33,{"inputs":[{"name":"self"}],"output":{"generics":["option","tryrecverror"],"name":"result"}}],[11,"close","","Closes the receiving half of the channel, without dropping it.",34,null],[11,"try_next","","Tries to receive the next message without notifying a context if empty.",34,{"inputs":[{"name":"self"}],"output":{"generics":["option","tryrecverror"],"name":"result"}}],[11,"is_full","","Returns true if this error is a result of the channel being full.",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped.",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_full","","Returns true if this error is a result of the channel being full.",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped.",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",29,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_send_error","","Drops the message and converts into a `SendError`.",29,{"inputs":[{"name":"self"}],"output":{"name":"senderror"}}],[11,"spawn_local","futures::executor","Spawn a non-`Send` future onto the associated `LocalPool`.",39,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"new","","Create a new, empty pool of tasks.",139,{"inputs":[],"output":{"name":"localpool"}}],[11,"executor","","Get a clonable handle to the pool as an executor.",139,{"inputs":[{"name":"self"}],"output":{"name":"localexecutor"}}],[11,"run","","Run all tasks in the pool to completion.",139,null],[11,"run_until","","Runs all the tasks in the pool until the given future completes.",139,{"inputs":[{"name":"self"},{"name":"f"},{"name":"executor"}],"output":{"name":"result"}}],[11,"new","","Creates a new thread pool with the default configuration.",40,{"inputs":[],"output":{"name":"threadpool"}}],[11,"builder","","Create a default thread pool configuration, which can then be customized.",40,{"inputs":[],"output":{"name":"threadpoolbuilder"}}],[11,"run","","Runs the given future with this thread pool as the default executor for spawning tasks.",40,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"new","","Create a default thread pool configuration.",46,{"inputs":[],"output":{"name":"threadpoolbuilder"}}],[11,"pool_size","","Set size of a future ThreadPool",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"threadpoolbuilder"}}],[11,"stack_size","","Set stack size of threads in the pool.",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"threadpoolbuilder"}}],[11,"name_prefix","","Set thread name prefix of a future ThreadPool.",46,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"threadpoolbuilder"}}],[11,"after_start","","Execute the closure `f` immediately after each worker thread is started, but before running any tasks on it.",46,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"threadpoolbuilder"}}],[11,"before_stop","","Execute closure `f` just prior to shutting down each worker thread.",46,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"threadpoolbuilder"}}],[11,"create","","Create a `ThreadPool` with the given configuration.",46,{"inputs":[{"name":"self"}],"output":{"name":"threadpool"}}],[11,"forget","","Drop this handle without canceling the underlying future.",42,null],[11,"shutdown","","Spawning is failing because the executor has been shut down.",24,{"inputs":[],"output":{"name":"spawnerror"}}],[11,"is_shutdown","","Check whether this error is the `shutdown` error.",24,{"inputs":[],"output":{"name":"bool"}}],[11,"is_left","futures::future","Return true if the value is the `Left` variant.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_right","","Return true if the value is the `Right` variant.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",9,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",9,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",9,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",9,{"inputs":[{"name":"self"},{"name":"f"},{"name":"g"}],"output":{"name":"t"}}],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",9,{"inputs":[{"name":"self"},{"name":"ctx"},{"name":"f"},{"name":"g"}],"output":{"name":"t"}}],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"into_iter","","Convert the inner value to an iterator.",9,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",9,null],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",9,null],[11,"into_inner","","Extract the value of an either over two equivalent types.",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",78,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"new","futures::io","Creates a new I/O error from a known kind of error as well as an arbitrary error payload.",19,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",19,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",19,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",19,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",19,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error (if any).",19,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",19,{"inputs":[{"name":"self"}],"output":{"generics":["box"],"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",19,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"zeroing","","Returns a new `Initializer` which will zero out buffers.",137,{"inputs":[],"output":{"name":"initializer"}}],[11,"nop","","Returns a new `Initializer` which will not zero out buffers.",137,{"inputs":[],"output":{"name":"initializer"}}],[11,"should_initialize","","Indicates if a buffer should be initialized.",137,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"initialize","","Initializes a buffer if necessary.",137,null],[11,"from_bytes","","",138,null],[11,"from_bytes_mut","","",138,null],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",49,{"inputs":[{"name":"t"}],"output":{"name":"allowstdio"}}],[11,"get_ref","","Returns a reference to the contained IO object.",49,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the contained IO object.",49,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes self and returns the contained IO object.",49,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"new","","Creates a new window around the buffer `t` defaulting to the entire slice.",121,{"inputs":[{"name":"t"}],"output":{"name":"window"}}],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of this `Window`.",121,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside of this `Window`.",121,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",121,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"start","","Returns the starting index of this window into the underlying buffer `T`.",121,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"end","","Returns the end index of this window into the underlying buffer `T`.",121,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_start","","Changes the starting index of this window to the index specified.",121,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"window"}}],[11,"set_end","","Changes the end index of this window to the index specified.",121,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"window"}}],[11,"new","futures::task","Create an empty set of task-local data.",25,{"inputs":[],"output":{"name":"localmap"}}],[11,"new","","Constructs a new `Waker` directly.",26,null],[11,"wake","","Wake up the task associated with this `Waker`.",26,null],[11,"will_wake","","Returns whether or not this `Waker` and `other` awaken the same task.",26,{"inputs":[{"name":"self"},{"name":"waker"}],"output":{"name":"bool"}}],[11,"without_spawn","","Create a new task context without the ability to `spawn`.",28,{"inputs":[{"name":"localmap"},{"name":"waker"}],"output":{"name":"context"}}],[11,"waker","","Get the `Waker` associated with the current task.",28,{"inputs":[{"name":"self"}],"output":{"name":"waker"}}],[11,"with_waker","","Produce a context like the current one, but using the given waker instead.",28,{"inputs":[{"name":"self"},{"name":"waker"}],"output":{"name":"context"}}],[11,"with_locals","","Produce a context like the current one, but using the given task locals instead.",28,{"inputs":[{"name":"self"},{"name":"localmap"}],"output":{"name":"context"}}],[11,"new","","Create a new task context.",28,{"inputs":[{"name":"localmap"},{"name":"waker"},{"name":"executor"}],"output":{"name":"context"}}],[11,"executor","","Get the default executor associated with this task, if any",28,{"inputs":[{"name":"self"}],"output":{"generics":["executor"],"name":"option"}}],[11,"spawn","","Spawn a future onto the default executor.",28,null],[11,"get_mut","","Access this task-local key.",27,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"t"}}],[11,"new","","Create an `AtomicWaker`.",23,{"inputs":[],"output":{"name":"atomicwaker"}}],[11,"register","","Registers the waker to be notified on calls to `wake`.",23,null],[11,"wake","","Calls `wake` on the last `Waker` passed to `register`.",23,null],[11,"get_ref","futures::sink","Get a shared reference to the inner sink. Returns `None` if the sink has already been closeed.",124,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the inner sink. Returns `None` if the sink has already been closeed.",124,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_inner","","Consume the `Close` and return the inner sink. Returns `None` if the sink has already been closeed.",124,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",77,null],[11,"get_ref","","Get a shared reference to the inner sink. Returns `None` if the sink has already been flushed.",90,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the inner sink. Returns `None` if the sink has already been flushed.",90,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_inner","","Consume the `Flush` and return the inner sink. Returns `None` if the sink has already been flushed.",90,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_ref","","Get a shared reference to the inner sink.",120,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",120,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_ref","","Get a shared reference to the inner sink.",64,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",64,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",64,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Get a shared reference to the inner sink.",63,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",63,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",63,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Get a shared reference to the inner sink.",75,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",75,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",75,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Get a shared reference to the inner sink.",71,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",71,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",71,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Get a shared reference to the inner sink.",62,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",62,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",62,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","futures::stream","Acquires a reference to the underlying stream that this combinator is pulling from.",66,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",66,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",66,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",54,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",54,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",54,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"sink_ref","","Get a shared reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",91,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"sink_mut","","Get a mutable reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",91,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"stream_ref","","Get a shared reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",91,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"stream_mut","","Get a mutable reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",91,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",53,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",53,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",53,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"is_done","","Returns whether the underlying stream has finished or not.",68,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",51,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",74,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",74,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",74,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"peek","","Peek retrieves a reference to the next item in the stream.",52,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",56,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",82,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",82,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",82,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",58,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",58,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",58,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",72,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",72,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",72,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",61,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",61,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",61,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",57,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",57,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",57,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"new","","Constructs a new, empty `FuturesUnordered`",114,{"inputs":[],"output":{"name":"futuresunordered"}}],[11,"len","","Returns the number of futures contained in the set.",114,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the set contains no futures",114,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the set.",114,null],[11,"iter_mut","","Returns an iterator that allows modifying each future in the set.",114,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"new","","Constructs a new, empty `FuturesOrdered`",83,{"inputs":[],"output":{"name":"futuresordered"}}],[11,"len","","Returns the number of futures contained in the queue.",83,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the queue contains no futures",83,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the queue.",83,null],[11,"new","","Constructs a new, empty `SelectAll`",100,{"inputs":[],"output":{"name":"selectall"}}],[11,"len","","Returns the number of streams contained in the set.",100,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the set contains no streams",100,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a stream into the set.",100,null],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",73,{"inputs":[{"name":"self"},{"name":"splitstream"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",131,{"inputs":[{"name":"self"},{"name":"splitsink"}],"output":{"generics":["reuniteerror"],"name":"result"}}]],"paths":[[8,"Future"],[8,"IntoFuture"],[8,"FutureExt"],[8,"Stream"],[8,"StreamExt"],[8,"Sink"],[8,"SinkExt"],[4,"Async"],[8,"Executor"],[4,"Either"],[4,"Loop"],[4,"ErrorKind"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"Wake"],[8,"UnsafeWake"],[3,"ReuniteError"],[3,"Error"],[4,"Never"],[3,"FutureResult"],[3,"FutureOption"],[3,"AtomicWaker"],[3,"SpawnError"],[3,"LocalMap"],[3,"Waker"],[3,"LocalKey"],[3,"Context"],[3,"TrySendError"],[3,"Canceled"],[3,"TryRecvError"],[3,"SendError"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"Sender"],[3,"LocalExecutor"],[3,"ThreadPool"],[3,"Spawn"],[3,"JoinHandle"],[3,"SpawnWithHandle"],[3,"Enter"],[3,"EnterError"],[3,"ThreadPoolBuilder"],[3,"SharedError"],[3,"SharedItem"],[3,"AllowStdIo"],[3,"WriteHalf"],[3,"Map"],[3,"Peekable"],[3,"ErrInto"],[3,"Filter"],[3,"Inspect"],[3,"Skip"],[3,"Chunks"],[3,"Take"],[3,"SkipWhile"],[3,"FilterMap"],[3,"Buffered"],[3,"Buffer"],[3,"SinkMapErr"],[3,"SinkErrInto"],[3,"Then"],[3,"AndThen"],[3,"OrElse"],[3,"Fuse"],[3,"BufferUnordered"],[3,"InspectErr"],[3,"WithFlatMap"],[3,"TakeWhile"],[3,"SplitSink"],[3,"MapErr"],[3,"With"],[3,"Flatten"],[3,"Fanout"],[3,"Shared"],[3,"Lazy"],[3,"Unfold"],[3,"CatchUnwind"],[3,"StreamFuture"],[3,"FuturesOrdered"],[3,"SelectOk"],[3,"Fold"],[3,"FlattenStream"],[3,"Select"],[3,"Zip"],[3,"CopyInto"],[3,"Flush"],[3,"Forward"],[3,"Empty"],[3,"LoopFn"],[3,"PollFn"],[3,"MapErr"],[3,"IterOk"],[3,"AndThen"],[3,"Join4"],[3,"Inspect"],[3,"SelectAll"],[3,"Chain"],[3,"ReadExact"],[3,"Map"],[3,"PollFn"],[3,"ReadToEnd"],[3,"ErrInto"],[3,"ForEach"],[3,"Flush"],[3,"Then"],[3,"Join5"],[3,"Select"],[3,"OrElse"],[3,"SelectAll"],[3,"FuturesUnordered"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"Read"],[3,"Join"],[3,"Empty"],[3,"Send"],[3,"Window"],[3,"Flatten"],[3,"Collect"],[3,"Close"],[3,"Join3"],[3,"Close"],[3,"ReadHalf"],[3,"Concat"],[3,"WriteAll"],[3,"Repeat"],[3,"SplitStream"],[3,"Fuse"],[3,"IntoStream"],[3,"IterResult"],[3,"Once"],[3,"SendAll"],[3,"Initializer"],[3,"IoVec"],[3,"LocalPool"]]};
searchIndex["futures_async_runtime"] = {"doc":"","items":[],"paths":[]};
searchIndex["futures_channel"] = {"doc":"Asynchronous channels.","items":[[0,"mpsc","futures_channel","A multi-producer, single-consumer queue for sending values across asynchronous tasks.",null,null],[3,"Sender","futures_channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for `Sender`s used as `Sink`s.",null,null],[3,"TrySendError","","The error type returned from `try_send`.",null,null],[3,"TryRecvError","","The error type returned from `try_next`.",null,null],[5,"channel","","Creates a bounded mpsc channel for communicating between asynchronous tasks.",null,null],[5,"unbounded","","Creates an unbounded mpsc channel for communicating between asynchronous tasks.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"senderror"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"trysenderror"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_full","","Returns true if this error is a result of the channel being full.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped.",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_full","","Returns true if this error is a result of the channel being full.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_disconnected","","Returns true if this error is a result of the receiver being dropped.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"into_inner","","Returns the message that was attempted to be sent but failed.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_send_error","","Drops the message and converts into a `SendError`.",5,{"inputs":[{"name":"self"}],"output":{"name":"senderror"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"try_send","","Attempts to send a message on this `Sender`, returning the message if there was an error.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["trysenderror"],"name":"result"}}],[11,"start_send","","Send a message on the channel.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"result"}}],[11,"poll_ready","","Polls the channel to determine if there is guaranteed capacity to send at least one item without waiting.",0,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"is_closed","","Returns whether this channel is closed without needing a context.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"close_channel","","Closes this channel from the sender side, preventing any new messages.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"poll_ready","","Check if the channel is ready to receive a message.",1,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["senderror"],"name":"poll"}}],[11,"is_closed","","Returns whether this channel is closed without needing a context.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"close_channel","","Closes this channel from the sender side, preventing any new messages.",1,{"inputs":[{"name":"self"}],"output":null}],[11,"start_send","","Send a message on the channel.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["senderror"],"name":"result"}}],[11,"unbounded_send","","Sends a message along this channel.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["trysenderror"],"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"unboundedsender"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"sender"}}],[11,"drop","","",0,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Closes the receiving half of a channel, without dropping it.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"try_next","","Tries to receive the next message without notifying a context if empty.",2,{"inputs":[{"name":"self"}],"output":{"generics":["option","tryrecverror"],"name":"result"}}],[11,"poll_next","","",2,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"drop","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"close","","Closes the receiving half of the channel, without dropping it.",3,{"inputs":[{"name":"self"}],"output":null}],[11,"try_next","","Tries to receive the next message without notifying a context if empty.",3,{"inputs":[{"name":"self"}],"output":{"generics":["option","tryrecverror"],"name":"result"}}],[11,"poll_next","","",3,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[0,"oneshot","futures_channel","A channel for sending a single message between asynchronous tasks.",null,null],[3,"Receiver","futures_channel::oneshot","A future for a value that will be provided by another asynchronous task.",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[3,"Canceled","","Error returned from a `Receiver` when the corresponding `Sender` is dropped.",null,null],[5,"channel","","Creates a new one-shot channel for sending values across asynchronous tasks.",null,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Completes this oneshot with a successful result.",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"poll_cancel","","Polls this `Sender` half to detect whether its associated `Receiver` with has been dropped.",8,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["never"],"name":"poll"}}],[11,"is_canceled","","Tests to see whether this `Sender`'s corresponding `Receiver` has been dropped.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"drop","","",8,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"canceled"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"canceled"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",9,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"close","","Gracefully close this receiver, preventing any subsequent attempts to send to it.",7,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",7,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["canceled"],"name":"poll"}}],[11,"drop","","",7,{"inputs":[{"name":"self"}],"output":null}]],"paths":[[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"TryRecvError"],[3,"Receiver"],[3,"Sender"],[3,"Canceled"]]};
searchIndex["futures_core"] = {"doc":"Core traits and types for asynchronous operations in Rust.","items":[[4,"Async","futures_core","Indicates whether a value is available, or if the current task has been scheduled for later wake-up instead.",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"Pending","","Represents that a value is not ready yet.",0,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"async"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"async"}],"output":{"name":"bool"}}],[11,"map","","Change the success value of this `Async` with the closure provided",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"async"}}],[11,"is_ready","","Returns whether this is `Async::Ready`",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_pending","","Returns whether this is `Async::Pending`",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"async"}}],[0,"future","","Futures.",null,null],[3,"FutureOption","futures_core::future","A future representing a value which may or may not be present.",null,null],[3,"FutureResult","","A future representing a value that is immediately ready.",null,null],[5,"result","","Creates a new future that will immediate resolve with the given result.",null,{"inputs":[{"name":"result"}],"output":{"name":"futureresult"}}],[5,"ok","","Creates a new future that will immediately resolve successfully to the given value.",null,{"inputs":[{"name":"t"}],"output":{"name":"futureresult"}}],[5,"err","","Creates a new future that will immediately fail with the given error.",null,{"inputs":[{"name":"e"}],"output":{"name":"futureresult"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"futureoption"}}],[11,"poll","","",1,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"from","","",1,{"inputs":[{"name":"option"}],"output":{"name":"self"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"futureresult"}}],[11,"poll","","",2,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"from","","",2,{"inputs":[{"name":"result"}],"output":{"name":"self"}}],[8,"Future","","A future represents an asychronous computation that may fail.",null,null],[16,"Item","","A successful value",3,null],[16,"Error","","An error",3,null],[10,"poll","","Attempt to resolve the future to a final value, registering the current task for wakeup if the value is not yet available.",3,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[8,"IntoFuture","","Types that can be converted into a future.",null,null],[16,"Future","","The future that this type can be converted into.",4,null],[16,"Item","","The item that the future may resolve with.",4,null],[16,"Error","","The error that the future may resolve with.",4,null],[10,"into_future","","Consumes this object and produces a future.",4,null],[0,"stream","futures_core","Asynchronous streams.",null,null],[8,"Stream","futures_core::stream","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",5,null],[16,"Error","","Errors yielded by the stream.",5,null],[10,"poll_next","","Attempt to pull out the next value of this stream, registering the current task for wakeup if the value is not yet available, and returning `None` if the stream is exhausted.",5,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[0,"task","futures_core","Task notification.",null,null],[3,"Waker","futures_core::task","A `Waker` is a handle for waking up a task by notifying its executor that it is ready to be run.",null,null],[3,"Context","","Information about the currently-running task.",null,null],[3,"LocalKey","","A key for task-local data stored in a future's task.",null,null],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[3,"LocalMap","","A map storing task-local data.",null,null],[11,"new","","Constructs a new `Waker` directly.",6,null],[11,"wake","","Wake up the task associated with this `Waker`.",6,{"inputs":[{"name":"self"}],"output":null}],[11,"will_wake","","Returns whether or not this `Waker` and `other` awaken the same task.",6,{"inputs":[{"name":"self"},{"name":"waker"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"from","","",6,{"inputs":[{"name":"arc"}],"output":{"name":"waker"}}],[11,"without_spawn","","Create a new task context without the ability to `spawn`.",7,{"inputs":[{"name":"localmap"},{"name":"waker"}],"output":{"name":"context"}}],[11,"waker","","Get the `Waker` associated with the current task.",7,{"inputs":[{"name":"self"}],"output":{"name":"waker"}}],[11,"with_waker","","Produce a context like the current one, but using the given waker instead.",7,{"inputs":[{"name":"self"},{"name":"waker"}],"output":{"name":"context"}}],[11,"with_locals","","Produce a context like the current one, but using the given task locals instead.",7,{"inputs":[{"name":"self"},{"name":"localmap"}],"output":{"name":"context"}}],[11,"new","","Create a new task context.",7,{"inputs":[{"name":"localmap"},{"name":"waker"},{"name":"executor"}],"output":{"name":"context"}}],[11,"executor","","Get the default executor associated with this task, if any",7,{"inputs":[{"name":"self"}],"output":{"generics":["executor"],"name":"option"}}],[11,"spawn","","Spawn a future onto the default executor.",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_mut","","Access this task-local key.",8,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"t"}}],[11,"new","","Create an `AtomicWaker`.",9,{"inputs":[],"output":{"name":"atomicwaker"}}],[11,"register","","Registers the waker to be notified on calls to `wake`.",9,{"inputs":[{"name":"self"},{"name":"waker"}],"output":null}],[11,"wake","","Calls `wake` on the last `Waker` passed to `register`.",9,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"UnsafeWake","","An unsafe trait for implementing custom memory management for a `Waker`.",null,null],[10,"clone_raw","","Creates a new `Waker` from this instance of `UnsafeWake`.",10,{"inputs":[{"name":"self"}],"output":{"name":"waker"}}],[10,"drop_raw","","Drops this instance of `UnsafeWake`, deallocating resources associated with it.",10,{"inputs":[{"name":"self"}],"output":null}],[10,"wake","","Indicates that the associated task is ready to make progress and should be `poll`ed.",10,{"inputs":[{"name":"self"}],"output":null}],[8,"Wake","","A way of waking up a specific task.",null,null],[10,"wake","","Indicates that the associated task is ready to make progress and should be `poll`ed.",11,{"inputs":[{"name":"arc"}],"output":null}],[11,"new","","Create an empty set of task-local data.",12,{"inputs":[],"output":{"name":"localmap"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"executor","futures_core","Executors.",null,null],[3,"SpawnError","futures_core::executor","Provides the reason that an executor was unable to spawn.",null,null],[8,"Executor","","A task executor.",null,null],[10,"spawn","","Spawn the given task, polling it until completion.",13,{"inputs":[{"name":"self"},{"generics":["future"],"name":"box"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"status","","Determine whether the executor is able to spawn new tasks.",13,{"inputs":[{"name":"self"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"shutdown","","Spawning is failing because the executor has been shut down.",14,{"inputs":[],"output":{"name":"spawnerror"}}],[11,"is_shutdown","","Check whether this error is the `shutdown` error.",14,{"inputs":[],"output":{"name":"bool"}}],[0,"never","futures_core","Definition and trait implementations for the `Never` type, a stand-in for the `!` type until it becomes stable.",null,null],[4,"Never","futures_core::never","A type with no possible values.",null,null],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"never"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"never"}],"output":{"name":"bool"}}],[11,"cmp","","",15,{"inputs":[{"name":"self"},{"name":"never"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"self"},{"name":"never"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"never_into","","Convert the `Never` type into any other type.",15,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",15,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["never","never"],"name":"poll"}}],[11,"poll_next","","",15,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option","never"],"name":"poll"}}],[6,"Poll","futures_core","A convenience wrapper for `Result<Async<T>, E>`.",null,null],[14,"try_ready","","A macro for extracting the successful type of a `Poll<T, E>`.",null,null],[14,"task_local","","A macro to create a `static` of type `LocalKey`",null,null]],"paths":[[4,"Async"],[3,"FutureOption"],[3,"FutureResult"],[8,"Future"],[8,"IntoFuture"],[8,"Stream"],[3,"Waker"],[3,"Context"],[3,"LocalKey"],[3,"AtomicWaker"],[8,"UnsafeWake"],[8,"Wake"],[3,"LocalMap"],[8,"Executor"],[3,"SpawnError"],[4,"Never"]]};
searchIndex["futures_executor"] = {"doc":"Built-in executors and related tools.","items":[[3,"LocalPool","futures_executor","A single-threaded task pool.",null,null],[3,"LocalExecutor","","A handle to a `LocalPool` that implements `Executor`.",null,null],[3,"ThreadPool","","A general-purpose thread pool for scheduling asynchronous tasks.",null,null],[3,"ThreadPoolBuilder","","Thread pool configuration object.",null,null],[3,"Enter","","Represents an executor context.",null,null],[3,"EnterError","","An error returned by `enter` if an execution scope has already been entered.",null,null],[3,"Spawn","","A future representing the completion of task spawning.",null,null],[3,"SpawnWithHandle","","A future representing the completion of task spawning, yielding a `JoinHandle` to the spawned task.",null,null],[3,"JoinHandle","","The type of future returned from the `ThreadPool::spawn` function, which proxies the futures running on the thread pool.",null,null],[5,"block_on","","Run a future to completion on the current thread.",null,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[5,"enter","","Marks the current thread as being within the dynamic extent of an executor.",null,{"inputs":[],"output":{"generics":["enter","entererror"],"name":"result"}}],[5,"spawn","","Spawn a task onto the default executor.",null,{"inputs":[{"name":"f"}],"output":{"name":"spawn"}}],[5,"spawn_with_handle","","Spawn a task onto the default executor, yielding a `JoinHandle` to the spawned task.",null,{"inputs":[{"name":"f"}],"output":{"name":"spawnwithhandle"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"localexecutor"}}],[11,"new","","Create a new, empty pool of tasks.",1,{"inputs":[],"output":{"name":"localpool"}}],[11,"executor","","Get a clonable handle to the pool as an executor.",1,{"inputs":[{"name":"self"}],"output":{"name":"localexecutor"}}],[11,"run","","Run all tasks in the pool to completion.",1,{"inputs":[{"name":"self"},{"name":"executor"}],"output":null}],[11,"run_until","","Runs all the tasks in the pool until the given future completes.",1,{"inputs":[{"name":"self"},{"name":"f"},{"name":"executor"}],"output":{"name":"result"}}],[11,"spawn","","",0,{"inputs":[{"name":"self"},{"generics":["future"],"name":"box"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"status","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"spawn_local","","Spawn a non-`Send` future onto the associated `LocalPool`.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new thread pool with the default configuration.",2,{"inputs":[],"output":{"name":"threadpool"}}],[11,"builder","","Create a default thread pool configuration, which can then be customized.",2,{"inputs":[],"output":{"name":"threadpoolbuilder"}}],[11,"run","","Runs the given future with this thread pool as the default executor for spawning tasks.",2,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"spawn","","",2,{"inputs":[{"name":"self"},{"generics":["future"],"name":"box"}],"output":{"generics":["spawnerror"],"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"threadpool"}}],[11,"drop","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create a default thread pool configuration.",3,{"inputs":[],"output":{"name":"threadpoolbuilder"}}],[11,"pool_size","","Set size of a future ThreadPool",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"stack_size","","Set stack size of threads in the pool.",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"name_prefix","","Set thread name prefix of a future ThreadPool.",3,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"self"}}],[11,"after_start","","Execute the closure `f` immediately after each worker thread is started, but before running any tasks on it.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"before_stop","","Execute closure `f` just prior to shutting down each worker thread.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"create","","Create a `ThreadPool` with the given configuration.",3,{"inputs":[{"name":"self"}],"output":{"name":"threadpool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",6,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["never"],"name":"poll"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",7,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["never"],"name":"poll"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"forget","","Drop this handle without canceling the underlying future.",8,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",8,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}]],"paths":[[3,"LocalExecutor"],[3,"LocalPool"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"EnterError"],[3,"Enter"],[3,"Spawn"],[3,"SpawnWithHandle"],[3,"JoinHandle"]]};
searchIndex["futures_io"] = {"doc":"Asynchronous I/O","items":[[3,"IoVec","futures_io","A specialized byte slice type for performing vectored I/O operations.",null,null],[3,"Error","","The error type for I/O operations of the [`Read`], [`Write`], [`Seek`], and associated traits.",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",0,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",0,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",0,null],[13,"ConnectionReset","","The connection was reset by the remote server.",0,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote server.",0,null],[13,"NotConnected","","The network operation failed because it was not connected yet.",0,null],[13,"AddrInUse","","A socket address could not be bound because the address is already in use elsewhere.",0,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested address was not local.",0,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",0,null],[13,"AlreadyExists","","An entity already exists, often a file.",0,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking operation was requested to not occur.",0,null],[13,"InvalidInput","","A parameter was incorrect.",0,null],[13,"InvalidData","","Data not valid for the operation were encountered.",0,null],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be canceled.",0,null],[13,"WriteZero","","An error returned when an operation could not be completed because a call to [`write`] returned [`Ok(0)`].",0,null],[13,"Interrupted","","This operation was interrupted.",0,null],[13,"Other","","Any I/O error not part of this list.",0,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed because an \"end of file\" was reached prematurely.",0,null],[6,"Result","","A specialized `Result` type for I/O operations.",null,null],[3,"Initializer","","A type used to conditionally initialize buffers passed to `AsyncRead` methods, modeled after `std`.",null,null],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[11,"initializer","","Determines if this `AsyncRead`er can work with buffers of uninitialized memory.",1,{"inputs":[{"name":"self"}],"output":{"name":"initializer"}}],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",1,null],[11,"poll_vectored_read","","Attempt to read from the `AsyncRead` into `vec` using vectored IO operations.",1,null],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",2,null],[11,"poll_vectored_write","","Attempt to write bytes from `vec` into the object using vectored IO operations.",2,null],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered data reach their destination.",2,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[10,"poll_close","","Attempt to close the object.",2,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"zeroing","","Returns a new `Initializer` which will zero out buffers.",3,{"inputs":[],"output":{"name":"initializer"}}],[11,"nop","","Returns a new `Initializer` which will not zero out buffers.",3,{"inputs":[],"output":{"name":"initializer"}}],[11,"should_initialize","","Indicates if a buffer should be initialized.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"initialize","","Initializes a buffer if necessary.",3,null],[11,"from_bytes","","",4,null],[11,"from_bytes_mut","","",4,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"ordering"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"description","","",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"errorkind"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",5,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"from","","",5,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"from","","",5,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"deref_mut","","",4,null],[11,"deref","","",4,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an arbitrary error payload.",5,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",5,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",5,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",5,{"inputs":[{"name":"self"}],"output":{"generics":["i32"],"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",5,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error (if any).",5,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",5,{"inputs":[{"name":"self"}],"output":{"generics":["box"],"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",5,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}]],"paths":[[4,"ErrorKind"],[8,"AsyncRead"],[8,"AsyncWrite"],[3,"Initializer"],[3,"IoVec"],[3,"Error"]]};
searchIndex["futures_macro_async"] = {"doc":"Procedural macro for the `#[async]` attribute.","items":[],"paths":[]};
searchIndex["futures_macro_await"] = {"doc":"","items":[[14,"await","futures_macro_await","Ye Olde Await Macro",null,null],[14,"await_item","","Await an item from the stream Basically it does same as `await` macro, but for streams",null,null],[14,"stream_yield","","",null,null]],"paths":[]};
searchIndex["futures_sink"] = {"doc":"Asynchronous sinks","items":[[8,"Sink","futures_sink","A `Sink` is a value into which other values can be sent, asynchronously.",null,null],[16,"SinkItem","","The type of value that the sink accepts.",0,null],[16,"SinkError","","The type of value produced by the sink when an error occurs.",0,null],[10,"poll_ready","","Attempts to prepare the `Sink` to receive a value.",0,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[10,"start_send","","Begin the process of sending a value to the sink. Each call to this function must be proceeded by a successful call to `poll_ready` which returned `Ok(Async::Ready(()))`.",0,null],[10,"poll_flush","","Flush any remaining output from this sink.",0,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[10,"poll_close","","Flush any remaining output and close this sink, if necessary.",0,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}]],"paths":[[8,"Sink"]]};
searchIndex["futures_stable"] = {"doc":"","items":[],"paths":[]};
searchIndex["futures_util"] = {"doc":"Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s, and the `AsyncRead` and `AsyncWrite` traits.","items":[[0,"lock","futures_util","Futures-powered synchronization primitives.",null,null],[3,"BiLock","futures_util::lock","A type of futures-powered synchronization primitive which is a mutex between two possible owners.",null,null],[3,"ReuniteError","","Error indicating two `BiLock<T>`s were not two halves of a whole, and thus could not be `reunite`d.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"BiLockGuard","","Returned RAII guard from the `poll_lock` method.",null,null],[3,"BiLockAcquire","","Future returned by `BiLock::lock` which will resolve when the lock is acquired.",null,null],[3,"BiLockAcquired","","Resolved value of the `BiLockAcquire<T>` future.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BiLock` protecting the provided data.",1,null],[11,"poll_lock","","Attempt to acquire this lock, returning `Pending` if it can't be acquired.",1,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["bilockguard"],"name":"async"}}],[11,"lock","","Perform a \"blocking lock\" of this lock, consuming this lock handle and returning a future to the acquired lock.",1,{"inputs":[{"name":"self"}],"output":{"name":"bilockacquire"}}],[11,"reunite","","Attempts to put the two \"halves\" of a `BiLock<T>` back together and recover the original value. Succeeds only if the two `BiLock<T>`s originated from the same call to `BiLock::new`.",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",2,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",3,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["bilockacquired"],"name":"poll"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"unlock","","Recovers the original `BiLock<T>`, unlocking this lock.",4,{"inputs":[{"name":"self"}],"output":{"name":"bilock"}}],[11,"deref","","",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"drop","","",4,{"inputs":[{"name":"self"}],"output":null}],[0,"future","futures_util","Futures",null,null],[4,"Either","futures_util::future","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",null,null],[13,"Left","","A value of type `L`.",5,null],[13,"Right","","A value of type `R`.",5,null],[3,"Empty","","A future which is never resolved.",null,null],[3,"Lazy","","A future which defers creation of the actual future until the future is `poll`ed.",null,null],[3,"PollFn","","A future which adapts a function returning `Poll`.",null,null],[3,"LoopFn","","A future implementing a tail-recursive loop.",null,null],[3,"AndThen","","Future for the `and_then` combinator, chaining a computation onto the end of another future which completes successfully.",null,null],[3,"Flatten","","Future for the `flatten` combinator.",null,null],[3,"FlattenStream","","Future for the `flatten_stream` combinator, flattening a future-of-a-stream to get just the result of the final stream as a stream.",null,null],[3,"Fuse","","A future which \"fuses\" a future once it's been resolved.",null,null],[3,"IntoStream","","A type which converts a `Future` into a `Stream` containing a single element.",null,null],[3,"Join","","Future for the `join` combinator, waiting for two futures to complete.",null,null],[3,"Join3","","Future for the `join3` combinator, waiting for three futures to complete.",null,null],[3,"Join4","","Future for the `join4` combinator, waiting for four futures to complete.",null,null],[3,"Join5","","Future for the `join5` combinator, waiting for five futures to complete.",null,null],[3,"Map","","Future for the `map` combinator, changing the type of a future.",null,null],[3,"MapErr","","Future for the `map_err` combinator, changing the error type of a future.",null,null],[3,"ErrInto","","Future for the `err_into` combinator, changing the error type of a future.",null,null],[3,"OrElse","","Future for the `or_else` combinator, chaining a computation onto the end of a future which fails with an error.",null,null],[3,"Select","","Future for the `select` combinator, waiting for one of two differently-typed futures to complete.",null,null],[3,"Then","","Future for the `then` combinator, chaining computations on the end of another future regardless of its outcome.",null,null],[3,"Inspect","","Do something with the item of a future, passing it on.",null,null],[3,"Recover","","Future for the `recover` combinator, handling errors by converting them into an `Item`, compatible with any error type of the caller's choosing.",null,null],[3,"CatchUnwind","","Future for the `catch_unwind` combinator.",null,null],[3,"JoinAll","","A future which takes a list of futures and resolves with a vector of the completed values.",null,null],[3,"SelectAll","","Future for the `select_all` combinator, waiting for one of any of a list of futures to complete.",null,null],[3,"SelectOk","","Future for the `select_ok` combinator, waiting for one of any of a list of futures to successfully complete. Unlike `select_all`, this future ignores all but the last error, if there are any.",null,null],[3,"Shared","","A future that is cloneable and can be polled in multiple threads. Use `Future::shared()` method to convert any future into a `Shared` future.",null,null],[3,"SharedItem","","A wrapped item of the original future that is cloneable and implements Deref for ease of use.",null,null],[3,"SharedError","","A wrapped error of the original future that is cloneable and implements Deref for ease of use.",null,null],[4,"Loop","","An enum describing whether to `break` or `continue` a `loop_fn` loop.",null,null],[13,"Break","","Indicates that the loop has completed with output `T`.",6,null],[13,"Continue","","Indicates that the loop function should be called again with input state `S`.",6,null],[5,"empty","","Creates a future which never resolves, representing a computation that never finishes.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"lazy","","Creates a new future which will eventually be the same as the one created by the closure provided.",null,{"inputs":[{"name":"f"}],"output":{"name":"lazy"}}],[5,"poll_fn","","Creates a new future wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"loop_fn","","Creates a new future implementing a tail-recursive loop.",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"loopfn"}}],[5,"join_all","","Creates a future which represents a collection of the results of the futures given.",null,{"inputs":[{"name":"i"}],"output":{"name":"joinall"}}],[5,"select_all","","Creates a new future which will select over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectall"}}],[5,"select_ok","","Creates a new future which will select the first successful future over a list of futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectok"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",7,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",8,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",9,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",10,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",11,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",12,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",13,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",14,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",15,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",16,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",17,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",18,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",19,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",20,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",21,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",22,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",23,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",24,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",25,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",26,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",27,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",28,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",29,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"from_iter","","",29,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",30,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",31,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"peek","","If any clone of this `Shared` has completed execution, returns its result immediately without blocking. Otherwise, returns None without triggering the work represented by this `Shared`.",32,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"poll","","",32,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"drop","","",32,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"shareditem"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sharederror"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",34,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[8,"FutureExt","","An extension trait for `Future`s that provides a variety of convenient combinator functions.",null,null],[11,"map","","Map this future's result to a different type, returning a new future of the resulting type.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Map this future's error to a different error, returning a new future.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"err_into","","Map this future's error to a new error type using the `Into` trait.",35,{"inputs":[{"name":"self"}],"output":{"name":"errinto"}}],[11,"then","","Chain on a computation for when a future finished, passing the result of the future to the provided closure `f`.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Execute another future after this one has resolved successfully.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Execute another future if this one resolves with an error.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"select","","Waits for either one of two differently-typed futures to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"select"}}],[11,"join","","Joins the result of two futures, waiting for them both to complete.",35,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"join"}}],[11,"join3","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"}],"output":{"name":"join3"}}],[11,"join4","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"}],"output":{"name":"join4"}}],[11,"join5","","Same as `join`, but with more futures.",35,{"inputs":[{"name":"self"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"}],"output":{"name":"join5"}}],[11,"left","","Wrap this future in an `Either` future, making it the left-hand variant of that `Either`.",35,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"right","","Wrap this future in an `Either` future, making it the right-hand variant of that `Either`.",35,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"into_stream","","Convert this future into a single element stream.",35,{"inputs":[{"name":"self"}],"output":{"name":"intostream"}}],[11,"flatten","","Flatten the execution of this future when the successful result of this future is itself another future.",35,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"flatten_stream","","Flatten the execution of this future when the successful result of this future is a stream.",35,{"inputs":[{"name":"self"}],"output":{"name":"flattenstream"}}],[11,"fuse","","Fuse a future such that `poll` will never again be called once it has completed.",35,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"inspect","","Do something with the item of a future, passing it on.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"catch_unwind","","Catches unwinding panics while polling the future.",35,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"shared","","Create a cloneable handle to this future where all handles will resolve to the same result.",35,{"inputs":[{"name":"self"}],"output":{"name":"shared"}}],[11,"recover","","Handle errors generated by this future by converting them into `Self::Item`.",35,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"recover"}}],[0,"io","futures_util","IO",null,null],[8,"AsyncRead","futures_util::io","Read bytes asynchronously.",null,null],[11,"initializer","","Determines if this `AsyncRead`er can work with buffers of uninitialized memory.",36,{"inputs":[{"name":"self"}],"output":{"name":"initializer"}}],[10,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",36,null],[11,"poll_vectored_read","","Attempt to read from the `AsyncRead` into `vec` using vectored IO operations.",36,null],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",37,null],[11,"poll_vectored_write","","Attempt to write bytes from `vec` into the object using vectored IO operations.",37,null],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered data reach their destination.",37,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[10,"poll_close","","Attempt to close the object.",37,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async","error"],"name":"result"}}],[3,"IoVec","","A specialized byte slice type for performing vectored I/O operations.",null,null],[3,"AllowStdIo","","A simple wrapper type which allows types which implement only implement `std::io::Read` or `std::io::Write` to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.",null,null],[3,"CopyInto","","A future which will copy all data from a reader into a writer.",null,null],[3,"Flush","","A future used to fully flush an I/O object.",null,null],[3,"Read","","A future which can be used to easily read available number of bytes to fill a buffer.",null,null],[3,"ReadExact","","A future which can be used to easily read exactly enough bytes to fill a buffer.",null,null],[3,"ReadToEnd","","A future which can be used to easily read the entire contents of a stream into a vector.",null,null],[3,"Close","","A future used to fully close an I/O object.",null,null],[3,"ReadHalf","","The readable half of an object returned from `AsyncRead::split`.",null,null],[3,"WriteHalf","","The writable half of an object returned from `AsyncRead::split`.",null,null],[3,"Window","","A owned window around an underlying buffer.",null,null],[3,"WriteAll","","A future used to write the entire contents of some data to a stream.",null,null],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"allowstdio"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"cmp","","",38,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",38,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",38,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"le","","",38,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"gt","","",38,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"ge","","",38,{"inputs":[{"name":"self"},{"name":"allowstdio"}],"output":{"name":"bool"}}],[11,"hash","","",38,null],[11,"new","","Creates a new `AllowStdIo` from an existing IO object.",38,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"get_ref","","Returns a reference to the contained IO object.",38,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the contained IO object.",38,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes self and returns the contained IO object.",38,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"write","","",38,null],[11,"flush","","",38,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"write_all","","",38,null],[11,"write_fmt","","",38,{"inputs":[{"name":"self"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"poll_write","","",38,null],[11,"poll_flush","","",38,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[11,"poll_close","","",38,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[11,"read","","",38,null],[11,"read_to_end","","",38,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["usize"],"name":"result"}}],[11,"read_to_string","","",38,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["usize"],"name":"result"}}],[11,"read_exact","","",38,null],[11,"poll_read","","",38,null],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",39,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",40,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",41,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",42,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",43,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",44,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_read","","",45,null],[11,"poll_vectored_read","","",45,null],[11,"poll_write","","",46,null],[11,"poll_vectored_write","","",46,null],[11,"poll_flush","","",46,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[11,"poll_close","","",46,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new window around the buffer `t` defaulting to the entire slice.",47,{"inputs":[{"name":"t"}],"output":{"name":"window"}}],[11,"get_ref","","Gets a shared reference to the underlying buffer inside of this `Window`.",47,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying buffer inside of this `Window`.",47,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"into_inner","","Consumes this `Window`, returning the underlying buffer.",47,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"start","","Returns the starting index of this window into the underlying buffer `T`.",47,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"end","","Returns the end index of this window into the underlying buffer `T`.",47,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_start","","Changes the starting index of this window to the index specified.",47,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"window"}}],[11,"set_end","","Changes the end index of this window to the index specified.",47,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"window"}}],[11,"as_ref","","",47,null],[11,"as_mut","","",47,null],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",48,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["error"],"name":"poll"}}],[8,"AsyncReadExt","","An extension trait which adds utility methods to `AsyncRead` types.",null,null],[11,"copy_into","","Creates a future which copies all the bytes from one object to another.",49,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"copyinto"}}],[11,"read","","Tries to read some bytes directly into the given `buf` in asynchronous manner, returning a future type.",49,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"read"}}],[11,"read_exact","","Creates a future which will read exactly enough bytes to fill `buf`, returning an error if EOF is hit sooner.",49,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"readexact"}}],[11,"read_to_end","","Creates a future which will read all the bytes from this `AsyncRead`.",49,{"inputs":[{"name":"self"},{"generics":["u8"],"name":"vec"}],"output":{"name":"readtoend"}}],[11,"split","","Helper method for splitting this read/write object into two halves.",49,null],[8,"AsyncWriteExt","","An extension trait which adds utility methods to `AsyncWrite` types.",null,null],[11,"flush","","Creates a future which will entirely flush this `AsyncWrite` and then return `self`.",50,{"inputs":[{"name":"self"}],"output":{"name":"flush"}}],[11,"close","","Creates a future which will entirely close this `AsyncWrite` and then return `self`.",50,{"inputs":[{"name":"self"}],"output":{"name":"close"}}],[11,"write_all","","Write a `Buf` into this value, returning how many bytes were written. Creates a future that will write the entire contents of the buffer `buf` into this `AsyncWrite`.",50,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"writeall"}}],[0,"stream","futures_util","Streams",null,null],[3,"IterOk","futures_util::stream","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"IterResult","","A stream which is just a shim over an underlying instance of `Iterator`.",null,null],[3,"Repeat","","Stream that produces the same element repeatedly.",null,null],[3,"AndThen","","A stream combinator which chains a computation onto values produced by a stream.",null,null],[3,"Chain","","An adapter for chaining the output of two streams.",null,null],[3,"Concat","","A stream combinator to concatenate the results of a stream into the first yielded item.",null,null],[3,"Empty","","A stream which contains no elements.",null,null],[3,"Filter","","A stream combinator used to filter the results of a stream and only yield some values.",null,null],[3,"FilterMap","","A combinator used to filter the results of a stream and simultaneously map them to a different type.",null,null],[3,"Flatten","","A combinator used to flatten a stream-of-streams into one long stream of elements.",null,null],[3,"Fold","","A future used to collect all the results of a stream into one generic type.",null,null],[3,"ForEach","","A stream combinator which executes a unit closure over each item on a stream.",null,null],[3,"ErrInto","","A stream combinator to change the error type of a stream.",null,null],[3,"Fuse","","A stream which \"fuse\"s a stream once it's terminated.",null,null],[3,"StreamFuture","","A combinator used to temporarily convert a stream into a future.",null,null],[3,"Inspect","","Do something with the items of a stream, passing it on.",null,null],[3,"InspectErr","","Do something with the error of a stream, passing it on.",null,null],[3,"Map","","A stream combinator which will change the type of a stream from one type to another.",null,null],[3,"MapErr","","A stream combinator which will change the error type of a stream from one type to another.",null,null],[3,"Once","","A stream which emits single element and then EOF.",null,null],[3,"OrElse","","A stream combinator which chains a computation onto errors produced by a stream.",null,null],[3,"Peekable","","A `Stream` that implements a `peek` method.",null,null],[3,"PollFn","","A stream which adapts a function returning `Poll`.",null,null],[3,"Select","","An adapter for merging the output of two streams.",null,null],[3,"Skip","","A stream combinator which skips a number of elements before continuing.",null,null],[3,"SkipWhile","","A stream combinator which skips elements of a stream while a predicate holds.",null,null],[3,"Take","","A stream combinator which returns a maximum number of elements.",null,null],[3,"TakeWhile","","A stream combinator which takes elements from a stream while a predicate holds.",null,null],[3,"Then","","A stream combinator which chains a computation onto each item produced by a stream.",null,null],[3,"Unfold","","A stream which creates futures, polls them and return their result",null,null],[3,"Zip","","An adapter for merging the output of two streams.",null,null],[3,"Forward","","Future for the `Stream::forward` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"Recover","","Future for the `recover` combinator, handling errors by converting them into an `Option<Item>`, such that a `None` value terminates the stream. `Recover` is compatible with any error type of the caller's choosing.",null,null],[3,"Buffered","","An adaptor for a stream of futures to execute the futures concurrently, if possible.",null,null],[3,"BufferUnordered","","An adaptor for a stream of futures to execute the futures concurrently, if possible, delivering results as they become available.",null,null],[3,"CatchUnwind","","Stream for the `catch_unwind` combinator.",null,null],[3,"Chunks","","An adaptor that chunks up elements in a vector.",null,null],[3,"Collect","","A future which collects all of the values of a stream into a vector.",null,null],[3,"SelectAll","","An unbounded set of streams",null,null],[3,"SplitStream","","A `Stream` part of the split pair",null,null],[3,"SplitSink","","A `Sink` part of the split pair",null,null],[3,"ReuniteError","","Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves of a `Stream + Split`, and thus could not be `reunite`d.",null,null],[12,"0","","",51,null],[12,"1","","",51,null],[3,"FuturesUnordered","","A set of `Future`s which may complete in any order.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[5,"iter_ok","","Converts an `Iterator` into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"i"}],"output":{"name":"iterok"}}],[5,"iter_result","","Converts an `Iterator` over `Result`s into a `Stream` which is always ready to yield the next value.",null,{"inputs":[{"name":"j"}],"output":{"name":"iterresult"}}],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,{"inputs":[{"name":"t"}],"output":{"name":"repeat"}}],[5,"empty","","Creates a stream which contains no elements.",null,{"inputs":[],"output":{"name":"empty"}}],[5,"once","","Creates a stream of single element",null,{"inputs":[{"name":"f"}],"output":{"name":"once"}}],[5,"poll_fn","","Creates a new stream wrapping around a function returning `Poll`.",null,{"inputs":[{"name":"f"}],"output":{"name":"pollfn"}}],[5,"unfold","","Creates a `Stream` from a seed and a closure returning a `Future`.",null,{"inputs":[{"name":"t"},{"name":"f"}],"output":{"name":"unfold"}}],[5,"select_all","","Convert a list of streams into a `Stream` of results from the streams.",null,{"inputs":[{"name":"i"}],"output":{"name":"selectall"}}],[5,"futures_unordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresunordered"}}],[5,"futures_ordered","","Converts a list of futures into a `Stream` of results from the futures.",null,{"inputs":[{"name":"i"}],"output":{"name":"futuresordered"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",52,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",53,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",54,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",55,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",55,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",55,null],[11,"poll_flush","","",55,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",55,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",55,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",56,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"poll","","",57,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",58,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",59,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",59,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",59,null],[11,"poll_flush","","",59,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",59,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",59,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",60,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",60,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",60,null],[11,"poll_flush","","",60,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",60,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",60,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",61,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",61,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",61,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",61,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",61,null],[11,"poll_flush","","",61,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",61,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",61,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",62,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",63,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",64,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",64,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",64,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_next","","",64,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"poll_ready","","",64,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",64,null],[11,"poll_flush","","",64,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",64,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_ready","","",65,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",65,null],[11,"poll_flush","","",65,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",65,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",65,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"is_done","","Returns whether the underlying stream has finished or not.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",65,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",65,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",65,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll","","",66,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",67,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",67,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",67,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",67,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",67,null],[11,"poll_flush","","",67,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",67,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",67,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",68,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",68,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",68,null],[11,"poll_flush","","",68,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",68,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",68,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",69,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",69,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",69,null],[11,"poll_flush","","",69,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",69,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",69,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",70,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",70,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",70,null],[11,"poll_flush","","",70,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",70,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",70,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",71,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_ready","","",72,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",72,null],[11,"poll_flush","","",72,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",72,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",72,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_ready","","",73,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",73,null],[11,"poll_flush","","",73,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",73,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",73,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"peek","","Peek retrieves a reference to the next item in the stream.",73,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",74,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",75,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",76,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",76,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",76,null],[11,"poll_flush","","",76,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",76,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",76,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",77,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",77,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",77,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",77,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",77,null],[11,"poll_flush","","",77,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",77,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",77,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",78,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",78,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",78,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",78,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",78,null],[11,"poll_flush","","",78,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",78,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",78,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",79,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",79,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",79,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",79,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",79,null],[11,"poll_flush","","",79,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",79,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",79,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_ready","","",80,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",80,null],[11,"poll_flush","","",80,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",80,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",80,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",81,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",82,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sink_ref","","Get a shared reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",83,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"sink_mut","","Get a mutable reference to the inner sink. If this combinator has already been polled to completion, None will be returned.",83,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"stream_ref","","Get a shared reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",83,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"stream_mut","","Get a mutable reference to the inner stream. If this combinator has already been polled to completion, None will be returned.",83,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll","","",83,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",84,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",85,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",85,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",85,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",85,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",85,null],[11,"poll_flush","","",85,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",85,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",85,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",86,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",86,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",86,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_next","","",86,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"poll_ready","","",86,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",86,null],[11,"poll_flush","","",86,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",86,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",87,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_ready","","",88,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",88,null],[11,"poll_flush","","",88,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",88,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"get_ref","","Acquires a reference to the underlying stream that this combinator is pulling from.",88,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream that this combinator is pulling from.",88,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",88,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_next","","",88,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",89,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new, empty `SelectAll`",90,{"inputs":[],"output":{"name":"selectall"}}],[11,"len","","Returns the number of streams contained in the set.",90,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the set contains no streams",90,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a stream into the set.",90,{"inputs":[{"name":"self"},{"name":"s"}],"output":null}],[11,"poll_next","","",90,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",91,{"inputs":[{"name":"self"},{"name":"splitsink"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"poll_next","","",91,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reunite","","Attempts to put the two \"halves\" of a split `Stream + Sink` back together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are a matching pair originating from the same call to `Stream::split`.",92,{"inputs":[{"name":"self"},{"name":"splitstream"}],"output":{"generics":["reuniteerror"],"name":"result"}}],[11,"poll_ready","","",92,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",92,null],[11,"poll_flush","","",92,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",92,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",51,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"new","","Constructs a new, empty `FuturesUnordered`",93,{"inputs":[],"output":{"name":"futuresunordered"}}],[11,"len","","Returns the number of futures contained in the set.",93,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the set contains no futures",93,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the set.",93,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"iter_mut","","Returns an iterator that allows modifying each future in the set.",93,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"poll_next","","",93,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",93,{"inputs":[{"name":"self"}],"output":null}],[11,"from_iter","","",93,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"new","","Constructs a new, empty `FuturesOrdered`",94,{"inputs":[],"output":{"name":"futuresordered"}}],[11,"len","","Returns the number of futures contained in the queue.",94,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the queue contains no futures",94,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Push a future into the queue.",94,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"poll_next","","",94,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",94,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety of convenient combinator functions.",null,null],[11,"next","","Converts this stream into a `Future`.",95,{"inputs":[{"name":"self"}],"output":{"name":"streamfuture"}}],[11,"map","","Converts a stream of type `T` to a stream of type `U`.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"map"}}],[11,"map_err","","Converts a stream of error type `T` to a stream of error type `U`.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"maperr"}}],[11,"filter","","Filters the values produced by this stream according to the provided predicate.",95,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"filter"}}],[11,"filter_map","","Filters the values produced by this stream while simultaneously mapping them to a different type.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"filtermap"}}],[11,"then","","Chain on a computation for when a value is ready, passing the resulting item to the provided closure `f`.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"then"}}],[11,"and_then","","Chain on a computation for when a value is ready, passing the successful results to the provided closure `f`.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"andthen"}}],[11,"or_else","","Chain on a computation for when an error happens, passing the erroneous result to the provided closure `f`.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"orelse"}}],[11,"collect","","Collect all of the values of this stream into a vector, returning a future representing the result of that computation.",95,{"inputs":[{"name":"self"}],"output":{"name":"collect"}}],[11,"concat","","Concatenate all results of a stream into a single extendable destination, returning a future representing the end result.",95,{"inputs":[{"name":"self"}],"output":{"name":"concat"}}],[11,"fold","","Execute an accumulating computation over a stream, collecting all the values into one final result.",95,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f"}],"output":{"name":"fold"}}],[11,"flatten","","Flattens a stream of streams into just one continuous stream.",95,{"inputs":[{"name":"self"}],"output":{"name":"flatten"}}],[11,"skip_while","","Skip elements on this stream while the predicate provided resolves to `true`.",95,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"skipwhile"}}],[11,"take_while","","Take elements from this stream while the predicate provided resolves to `true`.",95,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"takewhile"}}],[11,"for_each","","Runs this stream to completion, executing the provided closure for each element on the stream.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"foreach"}}],[11,"err_into","","Map this stream's error to a different type using the `Into` trait.",95,{"inputs":[{"name":"self"}],"output":{"name":"errinto"}}],[11,"take","","Creates a new stream of at most `amt` items of the underlying stream.",95,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"take"}}],[11,"skip","","Creates a new stream which skips `amt` items of the underlying stream.",95,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"skip"}}],[11,"fuse","","Fuse a stream such that `poll` will never again be called once it has finished.",95,{"inputs":[{"name":"self"}],"output":{"name":"fuse"}}],[11,"by_ref","","Borrows a stream, rather than consuming it.",95,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"catch_unwind","","Catches unwinding panics while polling the stream.",95,{"inputs":[{"name":"self"}],"output":{"name":"catchunwind"}}],[11,"buffered","","An adaptor for creating a buffered list of pending futures.",95,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffered"}}],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending futures (unordered).",95,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bufferunordered"}}],[11,"zip","","An adapter for zipping two streams together.",95,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"zip"}}],[11,"chain","","Adapter for chaining two stream.",95,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"chain"}}],[11,"peekable","","Creates a new stream which exposes a `peek` method.",95,{"inputs":[{"name":"self"}],"output":{"name":"peekable"}}],[11,"chunks","","An adaptor for chunking up items of the stream inside a vector.",95,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"chunks"}}],[11,"select","","Creates a stream that selects the next element from either this stream or the provided one, whichever is ready first.",95,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"select"}}],[11,"forward","","A future that completes after the given stream has been fully processed into the sink, including flushing.",95,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"forward"}}],[11,"split","","Splits this `Stream + Sink` object into separate `Stream` and `Sink` objects.",95,null],[11,"inspect","","Do something with each item of this stream, afterwards passing it on.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"inspect_err","","Do something with the error of this stream, afterwards passing it on.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"inspecterr"}}],[11,"recover","","Handle errors generated by this stream by converting them into `Option<Self::Item>`, such that a `None` value terminates the stream.",95,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"recover"}}],[11,"left","","Wrap this stream in an `Either` stream, making it the left-hand variant of that `Either`.",95,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"right","","Wrap this stream in an `Either` stream, making it the right-hand variant of that `Either`.",95,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[0,"sink","futures_util","Sinks",null,null],[3,"Buffer","futures_util::sink","Sink for the `Sink::buffer` combinator, which buffers up to some fixed number of values when the underlying sink is unable to accept them.",null,null],[3,"Close","","Future for the `close` combinator, which polls the sink until all data has been closeed.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two sinks at the same time.",null,null],[3,"Flush","","Future for the `flush` combinator, which polls the sink until all data has been flushed.",null,null],[3,"SinkErrInto","","A sink combinator to change the error type of a sink.",null,null],[3,"SinkMapErr","","Sink for the `Sink::sink_map_err` combinator.",null,null],[3,"Send","","Future for the `Sink::send` combinator, which sends a value to a sink and then waits until the sink has fully flushed.",null,null],[3,"SendAll","","Future for the `Sink::send_all` combinator, which sends a stream of values to a sink and then waits until the sink has fully flushed those values.",null,null],[3,"With","","Sink for the `Sink::with` combinator, chaining a computation to run prior to pushing a value into the underlying sink.",null,null],[3,"WithFlatMap","","Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator to run prior to pushing a value into the underlying sink",null,null],[5,"close","","A future that completes when the sink has finished closing.",null,{"inputs":[{"name":"s"}],"output":{"name":"close"}}],[5,"flush","","A future that completes when the sink has finished processing all pending requests.",null,{"inputs":[{"name":"s"}],"output":{"name":"flush"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink. Returns `None` if the sink has already been closeed.",96,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the inner sink. Returns `None` if the sink has already been closeed.",96,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_inner","","Consume the `Close` and return the inner sink. Returns `None` if the sink has already been closeed.",96,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll","","",96,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",97,null],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"poll_ready","","",97,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",97,null],[11,"poll_flush","","",97,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",97,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink. Returns `None` if the sink has already been flushed.",98,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the inner sink. Returns `None` if the sink has already been flushed.",98,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_inner","","Consume the `Flush` and return the inner sink. Returns `None` if the sink has already been flushed.",98,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll","","",98,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",99,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",99,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",99,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",99,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",99,null],[11,"poll_flush","","",99,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",99,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",99,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",100,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",100,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",100,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",100,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",100,null],[11,"poll_flush","","",100,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",100,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_next","","",100,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",101,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",101,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"poll","","",101,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",102,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll_next","","",103,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"get_ref","","Get a shared reference to the inner sink.",103,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",103,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",103,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_ready","","",103,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",103,null],[11,"poll_flush","","",103,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",103,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",104,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",104,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",104,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_next","","",104,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"poll_ready","","",104,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",104,null],[11,"poll_flush","","",104,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",104,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_ref","","Get a shared reference to the inner sink.",105,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"get_mut","","Get a mutable reference to the inner sink.",105,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"into_inner","","Consumes this combinator, returning the underlying sink.",105,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"poll_next","","",105,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["option"],"name":"poll"}}],[11,"poll_ready","","",105,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"start_send","","",105,null],[11,"poll_flush","","",105,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[11,"poll_close","","",105,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"name":"poll"}}],[8,"SinkExt","","An extension trait for `Sink`s that provides a variety of convenient combinator functions.",null,null],[11,"with","","Composes a function in front of the sink.",106,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"with"}}],[11,"with_flat_map","","Composes a function in front of the sink.",106,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"withflatmap"}}],[11,"sink_map_err","","Transforms the error returned by the sink.",106,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"sinkmaperr"}}],[11,"sink_err_into","","Map this sink's error to a different error type using the `Into` trait.",106,{"inputs":[{"name":"self"}],"output":{"name":"sinkerrinto"}}],[11,"buffer","","Adds a fixed-size buffer to the current sink.",106,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"buffer"}}],[11,"fanout","","Fanout items to multiple sinks.",106,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"fanout"}}],[11,"send","","A future that completes after the given item has been fully processed into the sink, including flushing.",106,null],[11,"send_all","","A future that completes after the given stream has been fully processed into the sink, including flushing.",106,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"sendall"}}],[0,"prelude","futures_util","Prelude containing the extension traits, which add functionality to existing asynchronous types.",null,null],[11,"is_left","futures_util::future","Return true if the value is the `Left` variant.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_right","","Return true if the value is the `Right` variant.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",5,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",5,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",5,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",5,{"inputs":[{"name":"self"},{"name":"f"},{"name":"g"}],"output":{"name":"t"}}],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",5,{"inputs":[{"name":"self"},{"name":"ctx"},{"name":"f"},{"name":"g"}],"output":{"name":"t"}}],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"either"}}],[11,"into_iter","","Convert the inner value to an iterator.",5,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",5,null],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",5,null],[11,"into_inner","","Extract the value of an either over two equivalent types.",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",5,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"poll_next","","",5,{"inputs":[{"name":"self"},{"name":"context"}],"output":{"generics":["async"],"name":"result"}}],[11,"next","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",5,null],[11,"fold","","",5,{"inputs":[{"name":"self"},{"name":"acc"},{"name":"g"}],"output":{"name":"acc"}}],[11,"count","","",5,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"last","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"nth","","",5,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"collect","","",5,{"inputs":[{"name":"self"}],"output":{"name":"b"}}],[11,"all","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"bool"}}],[11,"as_ref","","",5,{"inputs":[{"name":"self"}],"output":{"name":"target"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"either"}}],[11,"from","","",5,{"inputs":[{"name":"result"}],"output":{"name":"either"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"into","","",5,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"extend","","",5,null],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"ordering"}}],[11,"deref_mut","","",5,null],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"either"}],"output":{"name":"bool"}}],[11,"write","","",5,null],[11,"flush","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"hash","","",5,null],[11,"read","","",5,null],[11,"read_to_end","","",5,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"generics":["usize","error"],"name":"result"}}],[11,"description","","",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"deref","","",5,null],[11,"next_back","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fill_buf","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"result"}}],[11,"consume","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"as_mut","","",5,{"inputs":[{"name":"self"}],"output":{"name":"target"}}],[11,"deref_mut","futures_util::io","",107,null],[11,"deref","","",107,null],[11,"from_bytes","","",107,null],[11,"from_bytes_mut","","",107,null]],"paths":[[3,"ReuniteError"],[3,"BiLock"],[3,"BiLockGuard"],[3,"BiLockAcquire"],[3,"BiLockAcquired"],[4,"Either"],[4,"Loop"],[3,"Empty"],[3,"Lazy"],[3,"PollFn"],[3,"LoopFn"],[3,"AndThen"],[3,"Flatten"],[3,"FlattenStream"],[3,"Fuse"],[3,"IntoStream"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Map"],[3,"MapErr"],[3,"ErrInto"],[3,"OrElse"],[3,"Select"],[3,"Then"],[3,"Inspect"],[3,"Recover"],[3,"CatchUnwind"],[3,"JoinAll"],[3,"SelectAll"],[3,"SelectOk"],[3,"Shared"],[3,"SharedItem"],[3,"SharedError"],[8,"FutureExt"],[8,"AsyncRead"],[8,"AsyncWrite"],[3,"AllowStdIo"],[3,"CopyInto"],[3,"Flush"],[3,"Read"],[3,"ReadExact"],[3,"ReadToEnd"],[3,"Close"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Window"],[3,"WriteAll"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[3,"ReuniteError"],[3,"IterOk"],[3,"IterResult"],[3,"Repeat"],[3,"AndThen"],[3,"Chain"],[3,"Concat"],[3,"Empty"],[3,"Filter"],[3,"FilterMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"ErrInto"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"InspectErr"],[3,"Map"],[3,"MapErr"],[3,"Once"],[3,"OrElse"],[3,"Peekable"],[3,"PollFn"],[3,"Select"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Then"],[3,"Unfold"],[3,"Zip"],[3,"Forward"],[3,"Recover"],[3,"Buffered"],[3,"BufferUnordered"],[3,"CatchUnwind"],[3,"Chunks"],[3,"Collect"],[3,"SelectAll"],[3,"SplitStream"],[3,"SplitSink"],[3,"FuturesUnordered"],[3,"FuturesOrdered"],[8,"StreamExt"],[3,"Close"],[3,"Fanout"],[3,"Flush"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"Send"],[3,"SendAll"],[3,"With"],[3,"WithFlatMap"],[3,"Buffer"],[8,"SinkExt"],[3,"IoVec"]]};
searchIndex["iovec"] = {"doc":"A specialized byte slice type for performing vectored I/O operations.","items":[[3,"IoVec","iovec","A specialized byte slice type for performing vectored I/O operations.",null,null],[0,"unix","","IoVec extensions for Unix platforms.",null,null],[5,"as_os_slice","iovec::unix","Convert a slice of `IoVec` refs to a slice of `libc::iovec`.",null,null],[5,"as_os_slice_mut","","Convert a mutable slice of `IoVec` refs to a mutable slice of `libc::iovec`.",null,null],[17,"MAX_LENGTH","iovec","Max length of an `IoVec` slice.",null,null],[11,"from_bytes","","",0,null],[11,"from_bytes_mut","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null]],"paths":[[3,"IoVec"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",null,{"inputs":[{"name":"t"}],"output":null}],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",null,null],[14,"lazy_static","","",null,null]],"paths":[]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"itimerval","","",null,null],[12,"it_interval","","",16,null],[12,"it_value","","",16,null],[3,"tms","","",null,null],[12,"tms_utime","","",17,null],[12,"tms_stime","","",17,null],[12,"tms_cutime","","",17,null],[12,"tms_cstime","","",17,null],[3,"servent","","",null,null],[12,"s_name","","",18,null],[12,"s_aliases","","",18,null],[12,"s_port","","",18,null],[12,"s_proto","","",18,null],[3,"protoent","","",null,null],[12,"p_name","","",19,null],[12,"p_aliases","","",19,null],[12,"p_proto","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",23,null],[12,"sun_path","","",23,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",24,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",25,null],[12,"ai_family","","",25,null],[12,"ai_socktype","","",25,null],[12,"ai_protocol","","",25,null],[12,"ai_addrlen","","",25,null],[12,"ai_addr","","",25,null],[12,"ai_canonname","","",25,null],[12,"ai_next","","",25,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",26,null],[12,"nl_pid","","",26,null],[12,"nl_groups","","",26,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",27,null],[12,"sll_protocol","","",27,null],[12,"sll_ifindex","","",27,null],[12,"sll_hatype","","",27,null],[12,"sll_pkttype","","",27,null],[12,"sll_halen","","",27,null],[12,"sll_addr","","",27,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",28,null],[12,"tm_min","","",28,null],[12,"tm_hour","","",28,null],[12,"tm_mday","","",28,null],[12,"tm_mon","","",28,null],[12,"tm_year","","",28,null],[12,"tm_wday","","",28,null],[12,"tm_yday","","",28,null],[12,"tm_isdst","","",28,null],[12,"tm_gmtoff","","",28,null],[12,"tm_zone","","",28,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",29,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",30,null],[12,"dli_fbase","","",30,null],[12,"dli_sname","","",30,null],[12,"dli_saddr","","",30,null],[3,"epoll_event","","",null,null],[12,"events","","",31,null],[12,"u64","","",31,null],[3,"utsname","","",null,null],[12,"sysname","","",32,null],[12,"nodename","","",32,null],[12,"release","","",32,null],[12,"version","","",32,null],[12,"machine","","",32,null],[12,"domainname","","",32,null],[3,"lconv","","",null,null],[12,"decimal_point","","",33,null],[12,"thousands_sep","","",33,null],[12,"grouping","","",33,null],[12,"int_curr_symbol","","",33,null],[12,"currency_symbol","","",33,null],[12,"mon_decimal_point","","",33,null],[12,"mon_thousands_sep","","",33,null],[12,"mon_grouping","","",33,null],[12,"positive_sign","","",33,null],[12,"negative_sign","","",33,null],[12,"int_frac_digits","","",33,null],[12,"frac_digits","","",33,null],[12,"p_cs_precedes","","",33,null],[12,"p_sep_by_space","","",33,null],[12,"n_cs_precedes","","",33,null],[12,"n_sep_by_space","","",33,null],[12,"p_sign_posn","","",33,null],[12,"n_sign_posn","","",33,null],[12,"int_p_cs_precedes","","",33,null],[12,"int_p_sep_by_space","","",33,null],[12,"int_n_cs_precedes","","",33,null],[12,"int_n_sep_by_space","","",33,null],[12,"int_p_sign_posn","","",33,null],[12,"int_n_sign_posn","","",33,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",34,null],[12,"sigev_signo","","",34,null],[12,"sigev_notify","","",34,null],[12,"sigev_notify_thread_id","","",34,null],[3,"dirent","","",null,null],[12,"d_ino","","",35,null],[12,"d_off","","",35,null],[12,"d_reclen","","",35,null],[12,"d_type","","",35,null],[12,"d_name","","",35,null],[3,"dirent64","","",null,null],[12,"d_ino","","",36,null],[12,"d_off","","",36,null],[12,"d_reclen","","",36,null],[12,"d_type","","",36,null],[12,"d_name","","",36,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",37,null],[12,"rlim_max","","",37,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",38,null],[12,"gl_pathv","","",38,null],[12,"gl_offs","","",38,null],[12,"gl_flags","","",38,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",39,null],[12,"ifa_name","","",39,null],[12,"ifa_flags","","",39,null],[12,"ifa_addr","","",39,null],[12,"ifa_netmask","","",39,null],[12,"ifa_ifu","","",39,null],[12,"ifa_data","","",39,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",40,null],[12,"pw_passwd","","",40,null],[12,"pw_uid","","",40,null],[12,"pw_gid","","",40,null],[12,"pw_gecos","","",40,null],[12,"pw_dir","","",40,null],[12,"pw_shell","","",40,null],[3,"spwd","","",null,null],[12,"sp_namp","","",41,null],[12,"sp_pwdp","","",41,null],[12,"sp_lstchg","","",41,null],[12,"sp_min","","",41,null],[12,"sp_max","","",41,null],[12,"sp_warn","","",41,null],[12,"sp_inact","","",41,null],[12,"sp_expire","","",41,null],[12,"sp_flag","","",41,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",42,null],[12,"f_frsize","","",42,null],[12,"f_blocks","","",42,null],[12,"f_bfree","","",42,null],[12,"f_bavail","","",42,null],[12,"f_files","","",42,null],[12,"f_ffree","","",42,null],[12,"f_favail","","",42,null],[12,"f_fsid","","",42,null],[12,"f_flag","","",42,null],[12,"f_namemax","","",42,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",43,null],[12,"dqb_bsoftlimit","","",43,null],[12,"dqb_curspace","","",43,null],[12,"dqb_ihardlimit","","",43,null],[12,"dqb_isoftlimit","","",43,null],[12,"dqb_curinodes","","",43,null],[12,"dqb_btime","","",43,null],[12,"dqb_itime","","",43,null],[12,"dqb_valid","","",43,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",44,null],[12,"ssi_errno","","",44,null],[12,"ssi_code","","",44,null],[12,"ssi_pid","","",44,null],[12,"ssi_uid","","",44,null],[12,"ssi_fd","","",44,null],[12,"ssi_tid","","",44,null],[12,"ssi_band","","",44,null],[12,"ssi_overrun","","",44,null],[12,"ssi_trapno","","",44,null],[12,"ssi_status","","",44,null],[12,"ssi_int","","",44,null],[12,"ssi_ptr","","",44,null],[12,"ssi_utime","","",44,null],[12,"ssi_stime","","",44,null],[12,"ssi_addr","","",44,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",45,null],[12,"it_value","","",45,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",46,null],[12,"mq_maxmsg","","",46,null],[12,"mq_msgsize","","",46,null],[12,"mq_curmsgs","","",46,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",47,null],[12,"if_name","","",47,null],[3,"msginfo","","",null,null],[12,"msgpool","","",48,null],[12,"msgmap","","",48,null],[12,"msgmax","","",48,null],[12,"msgmnb","","",48,null],[12,"msgmni","","",48,null],[12,"msgssz","","",48,null],[12,"msgtql","","",48,null],[12,"msgseg","","",48,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",49,null],[12,"msg_len","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",66,null],[12,"p_offset","","",66,null],[12,"p_vaddr","","",66,null],[12,"p_paddr","","",66,null],[12,"p_filesz","","",66,null],[12,"p_memsz","","",66,null],[12,"p_flags","","",66,null],[12,"p_align","","",66,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",67,null],[12,"p_flags","","",67,null],[12,"p_offset","","",67,null],[12,"p_vaddr","","",67,null],[12,"p_paddr","","",67,null],[12,"p_filesz","","",67,null],[12,"p_memsz","","",67,null],[12,"p_align","","",67,null],[3,"ucred","","",null,null],[12,"pid","","",68,null],[12,"uid","","",68,null],[12,"gid","","",68,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",69,null],[12,"mnt_dir","","",69,null],[12,"mnt_type","","",69,null],[12,"mnt_opts","","",69,null],[12,"mnt_freq","","",69,null],[12,"mnt_passno","","",69,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",70,null],[12,"aio_lio_opcode","","",70,null],[12,"aio_reqprio","","",70,null],[12,"aio_buf","","",70,null],[12,"aio_nbytes","","",70,null],[12,"aio_sigevent","","",70,null],[12,"aio_offset","","",70,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",71,null],[12,"e_exit","","",71,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",72,null],[12,"tv_usec","","",72,null],[3,"utmpx","","",null,null],[12,"ut_type","","",73,null],[12,"ut_pid","","",73,null],[12,"ut_line","","",73,null],[12,"ut_id","","",73,null],[12,"ut_user","","",73,null],[12,"ut_host","","",73,null],[12,"ut_exit","","",73,null],[12,"ut_session","","",73,null],[12,"ut_tv","","",73,null],[12,"ut_addr_v6","","",73,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",74,null],[12,"sa_mask","","",74,null],[12,"sa_flags","","",74,null],[12,"sa_restorer","","",74,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",75,null],[12,"ss_flags","","",75,null],[12,"ss_size","","",75,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",76,null],[12,"si_errno","","",76,null],[12,"si_code","","",76,null],[12,"_pad","","",76,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",77,null],[12,"gl_pathv","","",77,null],[12,"gl_offs","","",77,null],[12,"gl_flags","","",77,null],[3,"statfs","","",null,null],[12,"f_type","","",78,null],[12,"f_bsize","","",78,null],[12,"f_blocks","","",78,null],[12,"f_bfree","","",78,null],[12,"f_bavail","","",78,null],[12,"f_files","","",78,null],[12,"f_ffree","","",78,null],[12,"f_fsid","","",78,null],[12,"f_namelen","","",78,null],[12,"f_frsize","","",78,null],[3,"msghdr","","",null,null],[12,"msg_name","","",79,null],[12,"msg_namelen","","",79,null],[12,"msg_iov","","",79,null],[12,"msg_iovlen","","",79,null],[12,"msg_control","","",79,null],[12,"msg_controllen","","",79,null],[12,"msg_flags","","",79,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",80,null],[12,"cmsg_level","","",80,null],[12,"cmsg_type","","",80,null],[3,"termios","","",null,null],[12,"c_iflag","","",81,null],[12,"c_oflag","","",81,null],[12,"c_cflag","","",81,null],[12,"c_lflag","","",81,null],[12,"c_line","","",81,null],[12,"c_cc","","",81,null],[12,"c_ispeed","","",81,null],[12,"c_ospeed","","",81,null],[3,"flock","","",null,null],[12,"l_type","","",82,null],[12,"l_whence","","",82,null],[12,"l_start","","",82,null],[12,"l_len","","",82,null],[12,"l_pid","","",82,null],[3,"sem_t","","",null,null],[3,"mallinfo","","",null,null],[12,"arena","","",83,null],[12,"ordblks","","",83,null],[12,"smblks","","",83,null],[12,"hblks","","",83,null],[12,"hblkhd","","",83,null],[12,"usmblks","","",83,null],[12,"fsmblks","","",83,null],[12,"uordblks","","",83,null],[12,"fordblks","","",83,null],[12,"keepcost","","",83,null],[3,"nlmsghdr","","",null,null],[3,"nlmsgerr","","",null,null],[3,"nl_pktinfo","","",null,null],[3,"nl_mmap_req","","",null,null],[3,"nl_mmap_hdr","","",null,null],[3,"nlattr","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",84,null],[12,"loads","","",84,null],[12,"totalram","","",84,null],[12,"freeram","","",84,null],[12,"sharedram","","",84,null],[12,"bufferram","","",84,null],[12,"totalswap","","",84,null],[12,"freeswap","","",84,null],[12,"procs","","",84,null],[12,"pad","","",84,null],[12,"totalhigh","","",84,null],[12,"freehigh","","",84,null],[12,"mem_unit","","",84,null],[12,"_f","","",84,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",85,null],[12,"msg_stime","","",85,null],[12,"msg_rtime","","",85,null],[12,"msg_ctime","","",85,null],[12,"msg_qnum","","",85,null],[12,"msg_qbytes","","",85,null],[12,"msg_lspid","","",85,null],[12,"msg_lrpid","","",85,null],[3,"stat","","",null,null],[12,"st_dev","","",86,null],[12,"st_ino","","",86,null],[12,"st_nlink","","",86,null],[12,"st_mode","","",86,null],[12,"st_uid","","",86,null],[12,"st_gid","","",86,null],[12,"st_rdev","","",86,null],[12,"st_size","","",86,null],[12,"st_blksize","","",86,null],[12,"st_blocks","","",86,null],[12,"st_atime","","",86,null],[12,"st_atime_nsec","","",86,null],[12,"st_mtime","","",86,null],[12,"st_mtime_nsec","","",86,null],[12,"st_ctime","","",86,null],[12,"st_ctime_nsec","","",86,null],[3,"stat64","","",null,null],[12,"st_dev","","",87,null],[12,"st_ino","","",87,null],[12,"st_nlink","","",87,null],[12,"st_mode","","",87,null],[12,"st_uid","","",87,null],[12,"st_gid","","",87,null],[12,"st_rdev","","",87,null],[12,"st_size","","",87,null],[12,"st_blksize","","",87,null],[12,"st_blocks","","",87,null],[12,"st_atime","","",87,null],[12,"st_atime_nsec","","",87,null],[12,"st_mtime","","",87,null],[12,"st_mtime_nsec","","",87,null],[12,"st_ctime","","",87,null],[12,"st_ctime_nsec","","",87,null],[3,"statfs64","","",null,null],[12,"f_type","","",88,null],[12,"f_bsize","","",88,null],[12,"f_blocks","","",88,null],[12,"f_bfree","","",88,null],[12,"f_bavail","","",88,null],[12,"f_files","","",88,null],[12,"f_ffree","","",88,null],[12,"f_fsid","","",88,null],[12,"f_namelen","","",88,null],[12,"f_frsize","","",88,null],[12,"f_flags","","",88,null],[12,"f_spare","","",88,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",89,null],[12,"f_frsize","","",89,null],[12,"f_blocks","","",89,null],[12,"f_bfree","","",89,null],[12,"f_bavail","","",89,null],[12,"f_files","","",89,null],[12,"f_ffree","","",89,null],[12,"f_favail","","",89,null],[12,"f_fsid","","",89,null],[12,"f_flag","","",89,null],[12,"f_namemax","","",89,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",90,null],[12,"exponent","","",90,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",91,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",92,null],[12,"swd","","",92,null],[12,"ftw","","",92,null],[12,"fop","","",92,null],[12,"rip","","",92,null],[12,"rdp","","",92,null],[12,"mxcsr","","",92,null],[12,"mxcr_mask","","",92,null],[12,"_st","","",92,null],[12,"_xmm","","",92,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",93,null],[12,"swd","","",93,null],[12,"ftw","","",93,null],[12,"fop","","",93,null],[12,"rip","","",93,null],[12,"rdp","","",93,null],[12,"mxcsr","","",93,null],[12,"mxcr_mask","","",93,null],[12,"st_space","","",93,null],[12,"xmm_space","","",93,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",94,null],[12,"r14","","",94,null],[12,"r13","","",94,null],[12,"r12","","",94,null],[12,"rbp","","",94,null],[12,"rbx","","",94,null],[12,"r11","","",94,null],[12,"r10","","",94,null],[12,"r9","","",94,null],[12,"r8","","",94,null],[12,"rax","","",94,null],[12,"rcx","","",94,null],[12,"rdx","","",94,null],[12,"rsi","","",94,null],[12,"rdi","","",94,null],[12,"orig_rax","","",94,null],[12,"rip","","",94,null],[12,"cs","","",94,null],[12,"eflags","","",94,null],[12,"rsp","","",94,null],[12,"ss","","",94,null],[12,"fs_base","","",94,null],[12,"gs_base","","",94,null],[12,"ds","","",94,null],[12,"es","","",94,null],[12,"fs","","",94,null],[12,"gs","","",94,null],[3,"user","","",null,null],[12,"regs","","",95,null],[12,"u_fpvalid","","",95,null],[12,"i387","","",95,null],[12,"u_tsize","","",95,null],[12,"u_dsize","","",95,null],[12,"u_ssize","","",95,null],[12,"start_code","","",95,null],[12,"start_stack","","",95,null],[12,"signal","","",95,null],[12,"u_ar0","","",95,null],[12,"u_fpstate","","",95,null],[12,"magic","","",95,null],[12,"u_comm","","",95,null],[12,"u_debugreg","","",95,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",96,null],[12,"fpregs","","",96,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",97,null],[12,"uc_link","","",97,null],[12,"uc_stack","","",97,null],[12,"uc_mcontext","","",97,null],[12,"uc_sigmask","","",97,null],[3,"ipc_perm","","",null,null],[12,"__key","","",98,null],[12,"uid","","",98,null],[12,"gid","","",98,null],[12,"cuid","","",98,null],[12,"cgid","","",98,null],[12,"mode","","",98,null],[12,"__seq","","",98,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",99,null],[12,"shm_segsz","","",99,null],[12,"shm_atime","","",99,null],[12,"shm_dtime","","",99,null],[12,"shm_ctime","","",99,null],[12,"shm_cpid","","",99,null],[12,"shm_lpid","","",99,null],[12,"shm_nattch","","",99,null],[3,"termios2","","",null,null],[12,"c_iflag","","",100,null],[12,"c_oflag","","",100,null],[12,"c_cflag","","",100,null],[12,"c_lflag","","",100,null],[12,"c_line","","",100,null],[12,"c_cc","","",100,null],[12,"c_ispeed","","",100,null],[12,"c_ospeed","","",100,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"QCMD","","",null,{"inputs":[{"name":"c_int"},{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"major","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"minor","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"makedev","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_uint"}],"output":{"name":"dev_t"}}],[5,"NLA_ALIGN","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"openat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"fdopendir","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getauxval","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"stat64"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"statfs64"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"statvfs64"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpxreg"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"_libc_xmmreg"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpstate"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"user_fpregs_struct"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"user_regs_struct"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"user"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"termios2"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"sigset_t"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"sysinfo"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"msqid_ds"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"aiocb"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"__exit_status"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"__timeval"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"utmpx"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"sigaction"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"stack_t"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"glob64_t"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"statfs"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"msghdr"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"cmsghdr"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"termios"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"flock"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"sem_t"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"mallinfo"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"nlmsghdr"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"nlmsgerr"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"nl_pktinfo"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"nl_mmap_req"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"nl_mmap_hdr"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"nlattr"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"dirent"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"dirent64"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"rlimit64"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"glob_t"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlockattr_t"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"pthread_condattr_t"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"passwd"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"spwd"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"statvfs"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"dqblk"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"itimerspec"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"fsid_t"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"mq_attr"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"if_nameindex"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"msginfo"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"mmsghdr"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"sembuf"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"input_event"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"input_id"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"input_absinfo"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"input_keymap_entry"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"input_mask"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"ff_replay"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"ff_trigger"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"ff_envelope"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"ff_constant_effect"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"ff_ramp_effect"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"ff_condition_effect"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"ff_periodic_effect"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"ff_rumble_effect"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"ff_effect"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"dl_phdr_info"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"elf32_phdr"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"elf64_phdr"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"ucred"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"mntent"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"posix_spawn_file_actions_t"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"posix_spawnattr_t"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"genlmsghdr"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"addrinfo"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"fd_set"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"sched_param"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"dl_info"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"epoll_event"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"utsname"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"lconv"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sigevent"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"group"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utimbuf"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rlimit"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"rusage"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"in_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"in6_addr"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"hostent"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"iovec"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"pollfd"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"winsize"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"sigval"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"itimerval"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"tms"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"servent"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"protoent"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"__priority_which_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_ALG","","",null,null],[17,"SOL_NFC","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening port",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"ucred"],[3,"mntent"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"genlmsghdr"],[3,"fd_set"]]};
searchIndex["num_cpus"] = {"doc":"A crate with utilities to determine the number of CPUs available on the current system.","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"get_physical","","Returns the number of physical cores of the current system.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["proc_macro2"] = {"doc":"A \"shim crate\" intended to multiplex the [`proc_macro`] API on to stable Rust.","items":[[3,"TokenStream","proc_macro2","",null,null],[3,"LexError","","",null,null],[3,"Span","","",null,null],[3,"TokenTree","","",null,null],[12,"span","","",0,null],[12,"kind","","",0,null],[3,"Term","","",null,null],[3,"Literal","","",null,null],[3,"TokenTreeIter","","",null,null],[4,"TokenNode","","",null,null],[13,"Group","","",1,null],[13,"Term","","",1,null],[13,"Op","","",1,null],[13,"Literal","","",1,null],[4,"Delimiter","","",null,null],[13,"Parenthesis","","",2,null],[13,"Brace","","",2,null],[13,"Bracket","","",2,null],[13,"None","","",2,null],[4,"Spacing","","",null,null],[13,"Alone","","",3,null],[13,"Joint","","",3,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"tokenstream"}}],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"generics":["tokenstream","lexerror"],"name":"result"}}],[11,"from","","",4,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenstream"}}],[11,"from","","",4,{"inputs":[{"name":"tokentree"}],"output":{"name":"tokenstream"}}],[11,"from_iter","","",4,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"into_iter","","",4,{"inputs":[{"name":"self"}],"output":{"name":"tokentreeiter"}}],[11,"empty","","",4,{"inputs":[],"output":{"name":"tokenstream"}}],[11,"is_empty","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"span"}}],[11,"call_site","","",5,{"inputs":[],"output":{"name":"span"}}],[11,"def_site","","",5,{"inputs":[],"output":{"name":"span"}}],[11,"resolved_at","","Creates a new span with the same line/column information as `self` but that resolves symbols as though it were at `other`.",5,{"inputs":[{"name":"self"},{"name":"span"}],"output":{"name":"span"}}],[11,"located_at","","Creates a new span with the same name resolution behavior as `self` but with the line/column information of `other`.",5,{"inputs":[{"name":"self"},{"name":"span"}],"output":{"name":"span"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"tokentree"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"tokennode"}],"output":{"name":"tokentree"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"tokennode"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"delimiter"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"delimiter"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"term"}}],[11,"intern","","",6,{"inputs":[{"name":"str"}],"output":{"name":"term"}}],[11,"as_str","","",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"spacing"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"spacing"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"literal"}}],[11,"integer","","",7,{"inputs":[{"name":"i64"}],"output":{"name":"literal"}}],[11,"u8","","",7,{"inputs":[{"name":"u8"}],"output":{"name":"literal"}}],[11,"u16","","",7,{"inputs":[{"name":"u16"}],"output":{"name":"literal"}}],[11,"u32","","",7,{"inputs":[{"name":"u32"}],"output":{"name":"literal"}}],[11,"u64","","",7,{"inputs":[{"name":"u64"}],"output":{"name":"literal"}}],[11,"usize","","",7,{"inputs":[{"name":"usize"}],"output":{"name":"literal"}}],[11,"i8","","",7,{"inputs":[{"name":"i8"}],"output":{"name":"literal"}}],[11,"i16","","",7,{"inputs":[{"name":"i16"}],"output":{"name":"literal"}}],[11,"i32","","",7,{"inputs":[{"name":"i32"}],"output":{"name":"literal"}}],[11,"i64","","",7,{"inputs":[{"name":"i64"}],"output":{"name":"literal"}}],[11,"isize","","",7,{"inputs":[{"name":"isize"}],"output":{"name":"literal"}}],[11,"float","","",7,{"inputs":[{"name":"f64"}],"output":{"name":"literal"}}],[11,"f64","","",7,{"inputs":[{"name":"f64"}],"output":{"name":"literal"}}],[11,"f32","","",7,{"inputs":[{"name":"f32"}],"output":{"name":"literal"}}],[11,"string","","",7,{"inputs":[{"name":"str"}],"output":{"name":"literal"}}],[11,"character","","",7,{"inputs":[{"name":"char"}],"output":{"name":"literal"}}],[11,"byte_string","","",7,null],[11,"byte_char","","",7,{"inputs":[{"name":"u8"}],"output":{"name":"literal"}}],[11,"doccomment","","",7,{"inputs":[{"name":"str"}],"output":{"name":"literal"}}],[11,"raw_string","","",7,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"literal"}}],[11,"raw_byte_string","","",7,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"literal"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["tokentree"],"name":"option"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"TokenTree"],[4,"TokenNode"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Term"],[3,"Literal"],[3,"TokenTreeIter"],[3,"LexError"]]};
searchIndex["quote"] = {"doc":"This crate provides the [`quote!`] macro for turning Rust syntax tree data structures into tokens of source code.","items":[[3,"Tokens","quote","Tokens produced by a [`quote!`] invocation.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"tokens"}}],[11,"new","","Empty tokens.",0,{"inputs":[],"output":{"name":"self"}}],[11,"append","","For use by `ToTokens` implementations.",0,{"inputs":[{"name":"self"},{"name":"u"}],"output":null}],[11,"append_all","","For use by `ToTokens` implementations.",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"append_separated","","For use by `ToTokens` implementations.",0,{"inputs":[{"name":"self"},{"name":"i"},{"name":"u"}],"output":null}],[11,"append_terminated","","For use by `ToTokens` implementations.",0,{"inputs":[{"name":"self"},{"name":"i"},{"name":"u"}],"output":null}],[11,"to_tokens","","",0,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"into_tokens","","",0,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[11,"into_iter","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",0,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`] invocation.",null,null],[10,"to_tokens","","Write `self` to the given `Tokens`.",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"into_tokens","","Convert `self` directly into a `Tokens` object.",1,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens originating within the macro invocation.",null,null],[11,"into_tokens","","Convert `self` directly into a `Tokens` object.",1,{"inputs":[{"name":"self"}],"output":{"name":"tokens"}}]],"paths":[[3,"Tokens"],[8,"ToTokens"]]};
searchIndex["syn"] = {"doc":"Syn is a parsing library for parsing a stream of Rust tokens into a syntax tree of Rust source code.","items":[[3,"Attribute","syn","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tts","","",0,null],[12,"is_sugared_doc","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy, Clone)`.",null,null],[12,"ident","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",null,null],[12,"ident","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `pub(crate)`.",null,null],[12,"pub_token","","",7,null],[12,"paren_token","","",7,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(in some::module)`.",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"ExprAddrOf","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",10,null],[12,"and_token","","",10,null],[12,"mutability","","",10,null],[12,"expr","","",10,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",11,null],[12,"bracket_token","","",11,null],[12,"elems","","",11,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",12,null],[12,"left","","",12,null],[12,"eq_token","","",12,null],[12,"right","","",12,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",13,null],[12,"left","","",13,null],[12,"op","","",13,null],[12,"right","","",13,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",14,null],[12,"left","","",14,null],[12,"op","","",14,null],[12,"right","","",14,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",15,null],[12,"block","","",15,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",16,null],[12,"box_token","","",16,null],[12,"expr","","",16,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional expression.",null,null],[12,"attrs","","",17,null],[12,"break_token","","",17,null],[12,"label","","",17,null],[12,"expr","","",17,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",18,null],[12,"func","","",18,null],[12,"paren_token","","",18,null],[12,"args","","",18,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",19,null],[12,"expr","","",19,null],[12,"as_token","","",19,null],[12,"ty","","",19,null],[3,"ExprCatch","","A catch expression: `do catch { ... }`.",null,null],[12,"attrs","","",20,null],[12,"do_token","","",20,null],[12,"catch_token","","",20,null],[12,"block","","",20,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",21,null],[12,"capture","","",21,null],[12,"or1_token","","",21,null],[12,"inputs","","",21,null],[12,"or2_token","","",21,null],[12,"output","","",21,null],[12,"body","","",21,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",22,null],[12,"continue_token","","",22,null],[12,"label","","",22,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",null,null],[12,"attrs","","",23,null],[12,"base","","",23,null],[12,"dot_token","","",23,null],[12,"member","","",23,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",24,null],[12,"label","","",24,null],[12,"for_token","","",24,null],[12,"pat","","",24,null],[12,"in_token","","",24,null],[12,"expr","","",24,null],[12,"body","","",24,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",25,null],[12,"group_token","","",25,null],[12,"expr","","",25,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",null,null],[12,"attrs","","",26,null],[12,"if_token","","",26,null],[12,"cond","","",26,null],[12,"then_branch","","",26,null],[12,"else_branch","","",26,null],[3,"ExprIfLet","","An `if let` expression with an optional `else` block: `if let pat = expr { ... } else { ... }`.",null,null],[12,"attrs","","",27,null],[12,"if_token","","",27,null],[12,"let_token","","",27,null],[12,"pat","","",27,null],[12,"eq_token","","",27,null],[12,"expr","","",27,null],[12,"then_branch","","",27,null],[12,"else_branch","","",27,null],[3,"ExprInPlace","","A placement expression: `place <- value`.",null,null],[12,"attrs","","",28,null],[12,"place","","",28,null],[12,"arrow_token","","",28,null],[12,"value","","",28,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",29,null],[12,"expr","","",29,null],[12,"bracket_token","","",29,null],[12,"index","","",29,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",30,null],[12,"lit","","",30,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",31,null],[12,"label","","",31,null],[12,"loop_token","","",31,null],[12,"body","","",31,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[12,"attrs","","",32,null],[12,"mac","","",32,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",null,null],[12,"attrs","","",33,null],[12,"match_token","","",33,null],[12,"expr","","",33,null],[12,"brace_token","","",33,null],[12,"arms","","",33,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",34,null],[12,"receiver","","",34,null],[12,"dot_token","","",34,null],[12,"method","","",34,null],[12,"turbofish","","",34,null],[12,"paren_token","","",34,null],[12,"args","","",34,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",35,null],[12,"paren_token","","",35,null],[12,"expr","","",35,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",null,null],[12,"attrs","","",36,null],[12,"qself","","",36,null],[12,"path","","",36,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",37,null],[12,"from","","",37,null],[12,"limits","","",37,null],[12,"to","","",37,null],[3,"ExprRepeat","","An array literal constructed from one repeated element: `[0u8; N]`.",null,null],[12,"attrs","","",38,null],[12,"bracket_token","","",38,null],[12,"expr","","",38,null],[12,"semi_token","","",38,null],[12,"len","","",38,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",39,null],[12,"return_token","","",39,null],[12,"expr","","",39,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",40,null],[12,"path","","",40,null],[12,"brace_token","","",40,null],[12,"fields","","",40,null],[12,"dot2_token","","",40,null],[12,"rest","","",40,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",41,null],[12,"expr","","",41,null],[12,"question_token","","",41,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",42,null],[12,"paren_token","","",42,null],[12,"elems","","",42,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",43,null],[12,"expr","","",43,null],[12,"colon_token","","",43,null],[12,"ty","","",43,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",44,null],[12,"op","","",44,null],[12,"expr","","",44,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",45,null],[12,"unsafe_token","","",45,null],[12,"block","","",45,null],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",null,null],[12,"tts","","",46,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",47,null],[12,"label","","",47,null],[12,"while_token","","",47,null],[12,"cond","","",47,null],[12,"body","","",47,null],[3,"ExprWhileLet","","A while-let loop: `while let pat = expr { ... }`.",null,null],[12,"attrs","","",48,null],[12,"label","","",48,null],[12,"while_token","","",48,null],[12,"let_token","","",48,null],[12,"pat","","",48,null],[12,"eq_token","","",48,null],[12,"expr","","",48,null],[12,"body","","",48,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",49,null],[12,"yield_token","","",49,null],[12,"expr","","",49,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",50,null],[12,"span","","",50,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true; }`.",null,null],[12,"attrs","","",51,null],[12,"pats","","",51,null],[12,"guard","","",51,null],[12,"rocket_token","","",51,null],[12,"body","","",51,null],[12,"comma","","",51,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",52,null],[12,"stmts","","Statements in a block",52,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",53,null],[12,"member","","",53,null],[12,"colon_token","","",53,null],[12,"pat","","",53,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",54,null],[12,"member","","Name or index of the field.",54,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand like `Struct { x }`, there is no colon.",54,null],[12,"expr","","Value of the field.",54,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",55,null],[12,"colon_token","","",55,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",56,null],[12,"let_token","","",56,null],[12,"pat","","",56,null],[12,"ty","","",56,null],[12,"init","","",56,null],[12,"semi_token","","",56,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method call: `parse::<u64>()`.",null,null],[12,"colon2_token","","",57,null],[12,"lt_token","","",57,null],[12,"args","","",57,null],[12,"gt_token","","",57,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"box_token","","",58,null],[12,"pat","","",58,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.",null,null],[12,"by_ref","","",59,null],[12,"mutability","","",59,null],[12,"ident","","",59,null],[12,"subpat","","",59,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"expr","","",60,null],[3,"PatMacro","","A macro in expression position.",null,null],[12,"mac","","",61,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified with a self-type.",null,null],[12,"qself","","",62,null],[12,"path","","",62,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"lo","","",63,null],[12,"limits","","",63,null],[12,"hi","","",63,null],[3,"PatRef","","A reference pattern: `&mut (first, second)`.",null,null],[12,"and_token","","",64,null],[12,"mutability","","",64,null],[12,"pat","","",64,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",null,null],[12,"bracket_token","","",65,null],[12,"front","","",65,null],[12,"middle","","",65,null],[12,"dot2_token","","",65,null],[12,"comma_token","","",65,null],[12,"back","","",65,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"path","","",66,null],[12,"brace_token","","",66,null],[12,"fields","","",66,null],[12,"dot2_token","","",66,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"paren_token","","",67,null],[12,"front","","",67,null],[12,"dot2_token","","",67,null],[12,"comma_token","","",67,null],[12,"back","","",67,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.",null,null],[12,"path","","",68,null],[12,"pat","","",68,null],[3,"PatVerbatim","","Tokens in pattern position not interpreted by Syn.",null,null],[12,"tts","","",69,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"underscore_token","","",70,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",71,null],[12,"lt_token","","",71,null],[12,"lifetimes","","",71,null],[12,"gt_token","","",71,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",72,null],[12,"const_token","","",72,null],[12,"ident","","",72,null],[12,"colon_token","","",72,null],[12,"ty","","",72,null],[12,"eq_token","","",72,null],[12,"default","","",72,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",null,null],[12,"lt_token","","",73,null],[12,"params","","",73,null],[12,"gt_token","","",73,null],[12,"where_clause","","",73,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",74,null],[12,"lifetime","","",74,null],[12,"colon_token","","",74,null],[12,"bounds","","",74,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",75,null],[12,"eq_token","","",75,null],[12,"rhs_ty","","",75,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",76,null],[12,"colon_token","","",76,null],[12,"bounds","","",76,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",77,null],[12,"bounded_ty","","The type being bounded",77,null],[12,"colon_token","","",77,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",77,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"modifier","","",78,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",78,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",78,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",79,null],[12,"ident","","",79,null],[12,"colon_token","","",79,null],[12,"bounds","","",79,null],[12,"eq_token","","",79,null],[12,"default","","",79,null],[3,"WhereClause","","A `where` clause in a definition: `where T: Deserialize<'de>, D: 'static`.",null,null],[12,"where_token","","",80,null],[12,"predicates","","",80,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal variable name.",null,null],[12,"span","","",81,null],[3,"ArgCaptured","","An explicitly typed pattern captured by a function signature.",null,null],[12,"pat","","",82,null],[12,"colon_token","","",82,null],[12,"ty","","",82,null],[3,"ArgSelf","","Self captured by value in a function signature: `self` or `mut self`.",null,null],[12,"mutability","","",83,null],[12,"self_token","","",83,null],[3,"ArgSelfRef","","Self captured by reference in a function signature: `&self` or `&mut self`.",null,null],[12,"and_token","","",84,null],[12,"lifetime","","",84,null],[12,"mutability","","",84,null],[12,"self_token","","",84,null],[3,"FnDecl","","Header of a function declaration, without including the body.",null,null],[12,"fn_token","","",85,null],[12,"generics","","",85,null],[12,"paren_token","","",85,null],[12,"inputs","","",85,null],[12,"variadic","","",85,null],[12,"output","","",85,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",86,null],[12,"vis","","",86,null],[12,"ident","","",86,null],[12,"decl","","",86,null],[12,"semi_token","","",86,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext: u8`.",null,null],[12,"attrs","","",87,null],[12,"vis","","",87,null],[12,"static_token","","",87,null],[12,"mutability","","",87,null],[12,"ident","","",87,null],[12,"colon_token","","",87,null],[12,"ty","","",87,null],[12,"semi_token","","",87,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",88,null],[12,"vis","","",88,null],[12,"type_token","","",88,null],[12,"ident","","",88,null],[12,"semi_token","","",88,null],[3,"ForeignItemVerbatim","","Tokens in an `extern` block not interpreted by Syn.",null,null],[12,"tts","","",89,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",90,null],[12,"vis","","",90,null],[12,"defaultness","","",90,null],[12,"const_token","","",90,null],[12,"ident","","",90,null],[12,"colon_token","","",90,null],[12,"ty","","",90,null],[12,"eq_token","","",90,null],[12,"expr","","",90,null],[12,"semi_token","","",90,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",91,null],[12,"mac","","",91,null],[12,"semi_token","","",91,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",92,null],[12,"vis","","",92,null],[12,"defaultness","","",92,null],[12,"sig","","",92,null],[12,"block","","",92,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",93,null],[12,"vis","","",93,null],[12,"defaultness","","",93,null],[12,"type_token","","",93,null],[12,"ident","","",93,null],[12,"generics","","",93,null],[12,"eq_token","","",93,null],[12,"ty","","",93,null],[12,"semi_token","","",93,null],[3,"ImplItemVerbatim","","Tokens within an impl block not interpreted by Syn.",null,null],[12,"tts","","",94,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",95,null],[12,"vis","","",95,null],[12,"const_token","","",95,null],[12,"ident","","",95,null],[12,"colon_token","","",95,null],[12,"ty","","",95,null],[12,"eq_token","","",95,null],[12,"expr","","",95,null],[12,"semi_token","","",95,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",null,null],[12,"attrs","","",96,null],[12,"vis","","",96,null],[12,"enum_token","","",96,null],[12,"ident","","",96,null],[12,"generics","","",96,null],[12,"brace_token","","",96,null],[12,"variants","","",96,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",97,null],[12,"vis","","",97,null],[12,"extern_token","","",97,null],[12,"crate_token","","",97,null],[12,"ident","","",97,null],[12,"rename","","",97,null],[12,"semi_token","","",97,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) -> Result<()> { ... }`.",null,null],[12,"attrs","","",98,null],[12,"vis","","",98,null],[12,"constness","","",98,null],[12,"unsafety","","",98,null],[12,"abi","","",98,null],[12,"ident","","",98,null],[12,"decl","","",98,null],[12,"block","","",98,null],[3,"ItemForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",null,null],[12,"attrs","","",99,null],[12,"abi","","",99,null],[12,"brace_token","","",99,null],[12,"items","","",99,null],[3,"ItemImpl","","An impl block providing trait or associated items: `impl<A> Trait for Data<A> { ... }`.",null,null],[12,"attrs","","",100,null],[12,"defaultness","","",100,null],[12,"unsafety","","",100,null],[12,"impl_token","","",100,null],[12,"generics","","",100,null],[12,"trait_","","Trait this impl implements.",100,null],[12,"self_ty","","The Self type of the impl.",100,null],[12,"brace_token","","",100,null],[12,"items","","",100,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!` definitions.",null,null],[12,"attrs","","",101,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",101,null],[12,"mac","","",101,null],[12,"semi_token","","",101,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro` keyword.",null,null],[12,"attrs","","",102,null],[12,"vis","","",102,null],[12,"macro_token","","",102,null],[12,"ident","","",102,null],[12,"paren_token","","",102,null],[12,"args","","",102,null],[12,"brace_token","","",102,null],[12,"body","","",102,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",103,null],[12,"vis","","",103,null],[12,"mod_token","","",103,null],[12,"ident","","",103,null],[12,"content","","",103,null],[12,"semi","","",103,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",104,null],[12,"vis","","",104,null],[12,"static_token","","",104,null],[12,"mutability","","",104,null],[12,"ident","","",104,null],[12,"colon_token","","",104,null],[12,"ty","","",104,null],[12,"eq_token","","",104,null],[12,"expr","","",104,null],[12,"semi_token","","",104,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",105,null],[12,"vis","","",105,null],[12,"struct_token","","",105,null],[12,"ident","","",105,null],[12,"generics","","",105,null],[12,"fields","","",105,null],[12,"semi_token","","",105,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",106,null],[12,"vis","","",106,null],[12,"unsafety","","",106,null],[12,"auto_token","","",106,null],[12,"trait_token","","",106,null],[12,"ident","","",106,null],[12,"generics","","",106,null],[12,"colon_token","","",106,null],[12,"supertraits","","",106,null],[12,"brace_token","","",106,null],[12,"items","","",106,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T, MyError>`.",null,null],[12,"attrs","","",107,null],[12,"vis","","",107,null],[12,"type_token","","",107,null],[12,"ident","","",107,null],[12,"generics","","",107,null],[12,"eq_token","","",107,null],[12,"ty","","",107,null],[12,"semi_token","","",107,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",108,null],[12,"vis","","",108,null],[12,"union_token","","",108,null],[12,"ident","","",108,null],[12,"generics","","",108,null],[12,"fields","","",108,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",109,null],[12,"vis","","",109,null],[12,"use_token","","",109,null],[12,"leading_colon","","",109,null],[12,"prefix","","",109,null],[12,"tree","","",109,null],[12,"semi_token","","",109,null],[3,"ItemVerbatim","","Tokens forming an item not interpreted by Syn.",null,null],[12,"tts","","",110,null],[3,"MethodSig","","A method's signature in a trait or implementation: `unsafe fn initialize(&self)`.",null,null],[12,"constness","","",111,null],[12,"unsafety","","",111,null],[12,"abi","","",111,null],[12,"ident","","",111,null],[12,"decl","","",111,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",112,null],[12,"const_token","","",112,null],[12,"ident","","",112,null],[12,"colon_token","","",112,null],[12,"ty","","",112,null],[12,"default","","",112,null],[12,"semi_token","","",112,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",113,null],[12,"mac","","",113,null],[12,"semi_token","","",113,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",114,null],[12,"sig","","",114,null],[12,"default","","",114,null],[12,"semi_token","","",114,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",115,null],[12,"type_token","","",115,null],[12,"ident","","",115,null],[12,"generics","","",115,null],[12,"colon_token","","",115,null],[12,"bounds","","",115,null],[12,"default","","",115,null],[12,"semi_token","","",115,null],[3,"TraitItemVerbatim","","Tokens within the definition of a trait not interpreted by Syn.",null,null],[12,"tts","","",116,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",117,null],[3,"UseList","","A braced list of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",118,null],[12,"items","","",118,null],[3,"UsePath","","An identifier imported by a `use` item: `Type` or `Type as Renamed`.",null,null],[12,"ident","","",119,null],[12,"rename","","",119,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",120,null],[12,"attrs","","",120,null],[12,"items","","",120,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[12,"span","","",121,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",122,null],[12,"span","","",122,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[12,"span","","",123,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[12,"span","","",124,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[12,"span","","",125,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[12,"span","","",126,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[12,"span","","",127,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[12,"span","","",128,null],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",null,null],[12,"token","","",129,null],[12,"span","","",129,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",130,null],[12,"bang_token","","",130,null],[12,"delimiter","","",130,null],[12,"tts","","",130,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",131,null],[12,"name","","",131,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize) -> bool`.",null,null],[12,"name","","",132,null],[12,"ty","","",132,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",133,null],[12,"elem","","",133,null],[12,"semi_token","","",133,null],[12,"len","","",133,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"unsafety","","",134,null],[12,"abi","","",134,null],[12,"fn_token","","",134,null],[12,"lifetimes","","",134,null],[12,"paren_token","","",134,null],[12,"inputs","","",134,null],[12,"variadic","","",134,null],[12,"output","","",134,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",135,null],[12,"elem","","",135,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",null,null],[12,"impl_token","","",136,null],[12,"bounds","","",136,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler: `_`.",null,null],[12,"underscore_token","","",137,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",138,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",139,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",140,null],[12,"elem","","",140,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",null,null],[12,"qself","","",141,null],[12,"path","","",141,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",142,null],[12,"const_token","","",142,null],[12,"mutability","","",142,null],[12,"elem","","",142,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",143,null],[12,"lifetime","","",143,null],[12,"mutability","","",143,null],[12,"elem","","",143,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",144,null],[12,"elem","","",144,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",null,null],[12,"dyn_token","","",145,null],[12,"bounds","","",145,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",146,null],[12,"elems","","",146,null],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",null,null],[12,"tts","","",147,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K, V>`.",null,null],[12,"colon2_token","","",148,null],[12,"lt_token","","",148,null],[12,"args","","",148,null],[12,"gt_token","","",148,null],[3,"Binding","","A binding (equality constraint) on an associated type: `Item = u8`.",null,null],[12,"ident","","",149,null],[12,"eq_token","","",149,null],[12,"ty","","",149,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) -> C`.",null,null],[12,"paren_token","","",150,null],[12,"inputs","","`(A, B)`",150,null],[12,"output","","`C`",150,null],[3,"Path","","A path at which a named item is exported: `std::collections::HashMap`.",null,null],[12,"leading_colon","","",151,null],[12,"segments","","",151,null],[3,"PathSegment","","A segment of a path together with any path arguments on that segment.",null,null],[12,"ident","","",152,null],[12,"arguments","","",152,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T as Display>::fmt`.",null,null],[12,"lt_token","","",153,null],[12,"ty","","",153,null],[12,"position","","",153,null],[12,"as_token","","",153,null],[12,"gt_token","","",153,null],[3,"PathTokens","","A helper for printing a self-type qualified path as tokens.",null,null],[12,"0","","",154,null],[12,"1","","",154,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and attributes that are contained within an item.",null,null],[13,"Outer","","",155,null],[13,"Inner","","",155,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Word","","",156,null],[13,"List","","A structured list within an attribute, like `derive(Copy, Clone)`.",156,null],[13,"NameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",156,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in `#[derive(Copy)]` which would be a nested `Meta::Word`.",157,null],[13,"Literal","","A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.",157,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",158,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",158,null],[13,"Unit","","Unit struct or unit variant such as `None`.",158,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or `pub(restricted)`.",null,null],[13,"Public","","A public visibility level: `pub`.",159,null],[13,"Crate","","A crate-level visibility: `pub(crate)`.",159,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(in some::module)`.",159,null],[13,"Inherited","","An inherited visibility, which usually means private.",159,null],[4,"Expr","","A Rust expression.",null,null],[13,"Box","","A box expression: `box f`.",160,null],[13,"InPlace","","A placement expression: `place <- value`.",160,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",160,null],[13,"Call","","A function call expression: `invoke(a, b)`.",160,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",160,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",160,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",160,null],[13,"Unary","","A unary operation: `!x`, `*x`.",160,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",160,null],[13,"Cast","","A cast expression: `foo as f64`.",160,null],[13,"Type","","A type ascription expression: `foo: f64`.",160,null],[13,"If","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",160,null],[13,"IfLet","","An `if let` expression with an optional `else` block: `if let pat = expr { ... } else { ... }`.",160,null],[13,"While","","A while loop: `while expr { ... }`.",160,null],[13,"WhileLet","","A while-let loop: `while let pat = expr { ... }`.",160,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",160,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",160,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",160,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",160,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",160,null],[13,"Block","","A blocked scope: `{ ... }`.",160,null],[13,"Assign","","An assignment expression: `a = compute()`.",160,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",160,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",160,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",160,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",160,null],[13,"Path","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",160,null],[13,"AddrOf","","A referencing operation: `&a` or `&mut a`.",160,null],[13,"Break","","A `break`, with an optional label to break and an optional expression.",160,null],[13,"Continue","","A `continue`, with an optional label.",160,null],[13,"Return","","A `return`, with an optional value to be returned.",160,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",160,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",160,null],[13,"Repeat","","An array literal constructed from one repeated element: `[0u8; N]`.",160,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",160,null],[13,"Group","","An expression contained within invisible delimiters.",160,null],[13,"Try","","A try-expression: `expr?`.",160,null],[13,"Catch","","A catch expression: `do catch { ... }`.",160,null],[13,"Yield","","A yield expression: `yield expr`.",160,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",160,null],[4,"Member","","A struct or tuple struct field accessed in a struct literal or field expression.",null,null],[13,"Named","","A named field like `self.x`.",161,null],[13,"Unnamed","","An unnamed field like `self.0`.",161,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",162,null],[13,"Const","","A const expression. Must be inside of a block.",162,null],[4,"Pat","","A pattern in a local binding, function signature, match expression, or various other places.",null,null],[13,"Wild","","A pattern that matches any value: `_`.",163,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.",163,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",163,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.",163,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified with a self-type.",163,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",163,null],[13,"Box","","A box pattern: `box v`.",163,null],[13,"Ref","","A reference pattern: `&mut (first, second)`.",163,null],[13,"Lit","","A literal pattern: `0`.",163,null],[13,"Range","","A range pattern: `1..=2`.",163,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",163,null],[13,"Macro","","A macro in expression position.",163,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",163,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",164,null],[13,"Closed","","Inclusive at the beginning and end.",164,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",165,null],[13,"Item","","An item definition.",165,null],[13,"Expr","","Expr without trailing semicolon.",165,null],[13,"Semi","","Expression with trailing semicolon.",165,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T: Into<String>`, `'a: 'b`, `const LEN: usize`.",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",166,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",166,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",166,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the `?` in `?Sized`.",null,null],[13,"None","","",167,null],[13,"Maybe","","",167,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",168,null],[13,"Lifetime","","",168,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T: Deserialize<'de>`.",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",169,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",169,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",169,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn f(n: usize)`.",null,null],[13,"SelfRef","","Self captured by reference in a function signature: `&self` or `&mut self`.",170,null],[13,"SelfValue","","Self captured by value in a function signature: `self` or `mut self`.",170,null],[13,"Captured","","An explicitly typed pattern captured by a function signature.",170,null],[13,"Inferred","","A pattern whose type is inferred captured by a function signature.",170,null],[13,"Ignored","","A type not bound to any pattern in a function signature.",170,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",171,null],[13,"Static","","A foreign static item in an `extern` block: `static ext: u8`.",171,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",171,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",171,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",172,null],[13,"Method","","A method within an impl block.",172,null],[13,"Type","","An associated type within an impl block.",172,null],[13,"Macro","","A macro invocation within an impl block.",172,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",172,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",173,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",173,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",173,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",173,null],[13,"Fn","","A free-standing function: `fn process(n: usize) -> Result<()> { ... }`.",173,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",173,null],[13,"ForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",173,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T, MyError>`.",173,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",173,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",173,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",173,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",173,null],[13,"Impl","","An impl block providing trait or associated items: `impl<A> Trait for Data<A> { ... }`.",173,null],[13,"Macro","","A macro invocation, which includes `macro_rules!` definitions.",173,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro` keyword.",173,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",173,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",174,null],[13,"Method","","A trait method within the definition of a trait.",174,null],[13,"Type","","An associated type within the definition of a trait.",174,null],[13,"Macro","","A macro invocation within the definition of a trait.",174,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by Syn.",174,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as Renamed` or `*`.",null,null],[13,"Path","","An identifier imported by a `use` item: `Type` or `Type as Renamed`.",175,null],[13,"Glob","","A glob import in a `use` item: `*`.",175,null],[13,"List","","A braced list of imports in a `use` item: `{A, B, C}`.",175,null],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the `f32` in `1.0f32`.",null,null],[13,"F32","","",176,null],[13,"F64","","",176,null],[13,"None","","",176,null],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in `127u8`.",null,null],[13,"I8","","",177,null],[13,"I16","","",177,null],[13,"I32","","",177,null],[13,"I64","","",177,null],[13,"I128","","",177,null],[13,"Isize","","",177,null],[13,"U8","","",177,null],[13,"U16","","",177,null],[13,"U32","","",177,null],[13,"U64","","",177,null],[13,"U128","","",177,null],[13,"Usize","","",177,null],[13,"None","","",177,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",178,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",178,null],[13,"Byte","","A byte literal: `b'f'`.",178,null],[13,"Char","","A character literal: `'a'`.",178,null],[13,"Int","","An integer literal: `1` or `1u16`.",178,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",178,null],[13,"Bool","","A boolean literal: `true` or `false`.",178,null],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",178,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a raw string like `r##\"data\"##`.",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",179,null],[13,"Raw","","A raw string like `r##\"data\"##`.",179,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.",null,null],[13,"Paren","","",180,null],[13,"Brace","","",180,null],[13,"Bracket","","",180,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",181,null],[13,"Sub","","The `-` operator (subtraction)",181,null],[13,"Mul","","The `*` operator (multiplication)",181,null],[13,"Div","","The `/` operator (division)",181,null],[13,"Rem","","The `%` operator (modulus)",181,null],[13,"And","","The `&&` operator (logical and)",181,null],[13,"Or","","The `||` operator (logical or)",181,null],[13,"BitXor","","The `^` operator (bitwise xor)",181,null],[13,"BitAnd","","The `&` operator (bitwise and)",181,null],[13,"BitOr","","The `|` operator (bitwise or)",181,null],[13,"Shl","","The `<<` operator (shift left)",181,null],[13,"Shr","","The `>>` operator (shift right)",181,null],[13,"Eq","","The `==` operator (equality)",181,null],[13,"Lt","","The `<` operator (less than)",181,null],[13,"Le","","The `<=` operator (less than or equal to)",181,null],[13,"Ne","","The `!=` operator (not equal to)",181,null],[13,"Ge","","The `>=` operator (greater than or equal to)",181,null],[13,"Gt","","The `>` operator (greater than)",181,null],[13,"AddEq","","The `+=` operator",181,null],[13,"SubEq","","The `-=` operator",181,null],[13,"MulEq","","The `*=` operator",181,null],[13,"DivEq","","The `/=` operator",181,null],[13,"RemEq","","The `%=` operator",181,null],[13,"BitXorEq","","The `^=` operator",181,null],[13,"BitAndEq","","The `&=` operator",181,null],[13,"BitOrEq","","The `|=` operator",181,null],[13,"ShlEq","","The `<<=` operator",181,null],[13,"ShrEq","","The `>>=` operator",181,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",182,null],[13,"Not","","The `!` operator for logical inversion",182,null],[13,"Neg","","The `-` operator for negation",182,null],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n: usize)`.",null,null],[13,"Named","","Argument given a name.",183,null],[13,"Wild","","Argument not given a name, matched with `_`.",183,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",184,null],[13,"Type","","A particular type is returned.",184,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",185,null],[13,"Array","","A fixed size array type: `[T; n]`.",185,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",185,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",185,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",185,null],[13,"Never","","The never type: `!`.",185,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",185,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",185,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",185,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",185,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",185,null],[13,"Group","","A type contained within invisible delimiters.",185,null],[13,"Infer","","Indication that a type should be inferred by the compiler: `_`.",185,null],[13,"Macro","","A macro in the type position.",185,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",185,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item = T`.",null,null],[13,"Lifetime","","A lifetime argument.",186,null],[13,"Type","","A type argument.",186,null],[13,"Binding","","A binding (equality constraint) on an associated type: the `Item = u8` in `Iterator<Item = u8>`.",186,null],[13,"Const","","A const expression. Must be inside of a block.",186,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path segment.",null,null],[13,"None","","",187,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",187,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",187,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree node.",null,{"inputs":[{"name":"tokenstream"}],"output":{"generics":["parseerror"],"name":"result"}}],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",null,{"inputs":[{"name":"tokenstream"}],"output":{"generics":["parseerror"],"name":"result"}}],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",null,{"inputs":[{"name":"str"}],"output":{"generics":["parseerror"],"name":"result"}}],[5,"parse_file","","Parse the content of a file of Rust code.",null,{"inputs":[{"name":"str"}],"output":{"generics":["file","parseerror"],"name":"result"}}],[0,"token","","Tokens representing Rust punctuation, keywords, and delimiters.",null,null],[3,"Add","syn::token","`+`",null,null],[12,"0","","",188,null],[3,"AddEq","","`+=`",null,null],[12,"0","","",189,null],[3,"And","","`&`",null,null],[12,"0","","",190,null],[3,"AndAnd","","`&&`",null,null],[12,"0","","",191,null],[3,"AndEq","","`&=`",null,null],[12,"0","","",192,null],[3,"At","","`@`",null,null],[12,"0","","",193,null],[3,"Bang","","`!`",null,null],[12,"0","","",194,null],[3,"Caret","","`^`",null,null],[12,"0","","",195,null],[3,"CaretEq","","`^=`",null,null],[12,"0","","",196,null],[3,"Colon","","`:`",null,null],[12,"0","","",197,null],[3,"Colon2","","`::`",null,null],[12,"0","","",198,null],[3,"Comma","","`,`",null,null],[12,"0","","",199,null],[3,"Div","","`/`",null,null],[12,"0","","",200,null],[3,"DivEq","","`/=`",null,null],[12,"0","","",201,null],[3,"Dot","","`.`",null,null],[12,"0","","",202,null],[3,"Dot2","","`..`",null,null],[12,"0","","",203,null],[3,"Dot3","","`...`",null,null],[12,"0","","",204,null],[3,"DotDotEq","","`..=`",null,null],[12,"0","","",205,null],[3,"Eq","","`=`",null,null],[12,"0","","",206,null],[3,"EqEq","","`==`",null,null],[12,"0","","",207,null],[3,"Ge","","`>=`",null,null],[12,"0","","",208,null],[3,"Gt","","`>`",null,null],[12,"0","","",209,null],[3,"Le","","`<=`",null,null],[12,"0","","",210,null],[3,"Lt","","`<`",null,null],[12,"0","","",211,null],[3,"MulEq","","`*=`",null,null],[12,"0","","",212,null],[3,"Ne","","`!=`",null,null],[12,"0","","",213,null],[3,"Or","","`|`",null,null],[12,"0","","",214,null],[3,"OrEq","","`|=`",null,null],[12,"0","","",215,null],[3,"OrOr","","`||`",null,null],[12,"0","","",216,null],[3,"Pound","","`#`",null,null],[12,"0","","",217,null],[3,"Question","","`?`",null,null],[12,"0","","",218,null],[3,"RArrow","","`->`",null,null],[12,"0","","",219,null],[3,"LArrow","","`<-`",null,null],[12,"0","","",220,null],[3,"Rem","","`%`",null,null],[12,"0","","",221,null],[3,"RemEq","","`%=`",null,null],[12,"0","","",222,null],[3,"Rocket","","`=>`",null,null],[12,"0","","",223,null],[3,"Semi","","`;`",null,null],[12,"0","","",224,null],[3,"Shl","","`<<`",null,null],[12,"0","","",225,null],[3,"ShlEq","","`<<=`",null,null],[12,"0","","",226,null],[3,"Shr","","`>>`",null,null],[12,"0","","",227,null],[3,"ShrEq","","`>>=`",null,null],[12,"0","","",228,null],[3,"Star","","`*`",null,null],[12,"0","","",229,null],[3,"Sub","","`-`",null,null],[12,"0","","",230,null],[3,"SubEq","","`-=`",null,null],[12,"0","","",231,null],[3,"Underscore","","`_`",null,null],[12,"0","","",232,null],[3,"Brace","","`{...}`",null,null],[12,"0","","",233,null],[3,"Bracket","","`[...]`",null,null],[12,"0","","",234,null],[3,"Paren","","`(...)`",null,null],[12,"0","","",235,null],[3,"Group","","None-delimited group",null,null],[12,"0","","",236,null],[3,"As","","`as`",null,null],[12,"0","","",237,null],[3,"Auto","","`auto`",null,null],[12,"0","","",238,null],[3,"Box","","`box`",null,null],[12,"0","","",239,null],[3,"Break","","`break`",null,null],[12,"0","","",240,null],[3,"CapSelf","","`Self`",null,null],[12,"0","","",241,null],[3,"Catch","","`catch`",null,null],[12,"0","","",242,null],[3,"Const","","`const`",null,null],[12,"0","","",243,null],[3,"Continue","","`continue`",null,null],[12,"0","","",244,null],[3,"Crate","","`crate`",null,null],[12,"0","","",245,null],[3,"Default","","`default`",null,null],[12,"0","","",246,null],[3,"Do","","`do`",null,null],[12,"0","","",247,null],[3,"Dyn","","`dyn`",null,null],[12,"0","","",248,null],[3,"Else","","`else`",null,null],[12,"0","","",249,null],[3,"Enum","","`enum`",null,null],[12,"0","","",250,null],[3,"Extern","","`extern`",null,null],[12,"0","","",251,null],[3,"Fn","","`fn`",null,null],[12,"0","","",252,null],[3,"For","","`for`",null,null],[12,"0","","",253,null],[3,"If","","`if`",null,null],[12,"0","","",254,null],[3,"Impl","","`impl`",null,null],[12,"0","","",255,null],[3,"In","","`in`",null,null],[12,"0","","",256,null],[3,"Let","","`let`",null,null],[12,"0","","",257,null],[3,"Loop","","`loop`",null,null],[12,"0","","",258,null],[3,"Macro","","`macro`",null,null],[12,"0","","",259,null],[3,"Match","","`match`",null,null],[12,"0","","",260,null],[3,"Mod","","`mod`",null,null],[12,"0","","",261,null],[3,"Move","","`move`",null,null],[12,"0","","",262,null],[3,"Mut","","`mut`",null,null],[12,"0","","",263,null],[3,"Pub","","`pub`",null,null],[12,"0","","",264,null],[3,"Ref","","`ref`",null,null],[12,"0","","",265,null],[3,"Return","","`return`",null,null],[12,"0","","",266,null],[3,"Self_","","`self`",null,null],[12,"0","","",267,null],[3,"Static","","`static`",null,null],[12,"0","","",268,null],[3,"Struct","","`struct`",null,null],[12,"0","","",269,null],[3,"Super","","`super`",null,null],[12,"0","","",270,null],[3,"Trait","","`trait`",null,null],[12,"0","","",271,null],[3,"Type","","`type`",null,null],[12,"0","","",272,null],[3,"Union","","`union`",null,null],[12,"0","","",273,null],[3,"Unsafe","","`unsafe`",null,null],[12,"0","","",274,null],[3,"Use","","`use`",null,null],[12,"0","","",275,null],[3,"Where","","`where`",null,null],[12,"0","","",276,null],[3,"While","","`while`",null,null],[12,"0","","",277,null],[3,"Yield","","`yield`",null,null],[12,"0","","",278,null],[11,"new","","",188,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",188,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",188,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",188,{"inputs":[{"name":"self"},{"name":"add"}],"output":{"name":"bool"}}],[11,"hash","","",188,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",188,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",188,{"inputs":[{"name":"cursor"}],"output":{"generics":["add"],"name":"presult"}}],[11,"description","","",188,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",188,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",189,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",189,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",189,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",189,{"inputs":[{"name":"self"},{"name":"addeq"}],"output":{"name":"bool"}}],[11,"hash","","",189,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",189,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",189,{"inputs":[{"name":"cursor"}],"output":{"generics":["addeq"],"name":"presult"}}],[11,"description","","",189,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",189,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",190,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",190,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",190,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",190,{"inputs":[{"name":"self"},{"name":"and"}],"output":{"name":"bool"}}],[11,"hash","","",190,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",190,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",190,{"inputs":[{"name":"cursor"}],"output":{"generics":["and"],"name":"presult"}}],[11,"description","","",190,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",190,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",191,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",191,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",191,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",191,{"inputs":[{"name":"self"},{"name":"andand"}],"output":{"name":"bool"}}],[11,"hash","","",191,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",191,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",191,{"inputs":[{"name":"cursor"}],"output":{"generics":["andand"],"name":"presult"}}],[11,"description","","",191,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",191,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",192,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",192,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",192,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",192,{"inputs":[{"name":"self"},{"name":"andeq"}],"output":{"name":"bool"}}],[11,"hash","","",192,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",192,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",192,{"inputs":[{"name":"cursor"}],"output":{"generics":["andeq"],"name":"presult"}}],[11,"description","","",192,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",192,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",193,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",193,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",193,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",193,{"inputs":[{"name":"self"},{"name":"at"}],"output":{"name":"bool"}}],[11,"hash","","",193,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",193,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",193,{"inputs":[{"name":"cursor"}],"output":{"generics":["at"],"name":"presult"}}],[11,"description","","",193,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",193,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",194,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",194,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",194,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",194,{"inputs":[{"name":"self"},{"name":"bang"}],"output":{"name":"bool"}}],[11,"hash","","",194,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",194,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",194,{"inputs":[{"name":"cursor"}],"output":{"generics":["bang"],"name":"presult"}}],[11,"description","","",194,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",194,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",195,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",195,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",195,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",195,{"inputs":[{"name":"self"},{"name":"caret"}],"output":{"name":"bool"}}],[11,"hash","","",195,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",195,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",195,{"inputs":[{"name":"cursor"}],"output":{"generics":["caret"],"name":"presult"}}],[11,"description","","",195,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",195,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",196,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",196,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",196,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",196,{"inputs":[{"name":"self"},{"name":"careteq"}],"output":{"name":"bool"}}],[11,"hash","","",196,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",196,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",196,{"inputs":[{"name":"cursor"}],"output":{"generics":["careteq"],"name":"presult"}}],[11,"description","","",196,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",196,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",197,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",197,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",197,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",197,{"inputs":[{"name":"self"},{"name":"colon"}],"output":{"name":"bool"}}],[11,"hash","","",197,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",197,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",197,{"inputs":[{"name":"cursor"}],"output":{"generics":["colon"],"name":"presult"}}],[11,"description","","",197,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",197,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",198,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",198,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",198,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",198,{"inputs":[{"name":"self"},{"name":"colon2"}],"output":{"name":"bool"}}],[11,"hash","","",198,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",198,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",198,{"inputs":[{"name":"cursor"}],"output":{"generics":["colon2"],"name":"presult"}}],[11,"description","","",198,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",198,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",199,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",199,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",199,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",199,{"inputs":[{"name":"self"},{"name":"comma"}],"output":{"name":"bool"}}],[11,"hash","","",199,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",199,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",199,{"inputs":[{"name":"cursor"}],"output":{"generics":["comma"],"name":"presult"}}],[11,"description","","",199,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",199,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",200,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",200,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",200,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",200,{"inputs":[{"name":"self"},{"name":"div"}],"output":{"name":"bool"}}],[11,"hash","","",200,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",200,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",200,{"inputs":[{"name":"cursor"}],"output":{"generics":["div"],"name":"presult"}}],[11,"description","","",200,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",200,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",201,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",201,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",201,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",201,{"inputs":[{"name":"self"},{"name":"diveq"}],"output":{"name":"bool"}}],[11,"hash","","",201,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",201,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",201,{"inputs":[{"name":"cursor"}],"output":{"generics":["diveq"],"name":"presult"}}],[11,"description","","",201,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",201,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",202,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",202,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",202,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",202,{"inputs":[{"name":"self"},{"name":"dot"}],"output":{"name":"bool"}}],[11,"hash","","",202,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",202,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",202,{"inputs":[{"name":"cursor"}],"output":{"generics":["dot"],"name":"presult"}}],[11,"description","","",202,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",202,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",203,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",203,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",203,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",203,{"inputs":[{"name":"self"},{"name":"dot2"}],"output":{"name":"bool"}}],[11,"hash","","",203,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",203,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",203,{"inputs":[{"name":"cursor"}],"output":{"generics":["dot2"],"name":"presult"}}],[11,"description","","",203,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",203,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",204,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",204,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",204,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",204,{"inputs":[{"name":"self"},{"name":"dot3"}],"output":{"name":"bool"}}],[11,"hash","","",204,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",204,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",204,{"inputs":[{"name":"cursor"}],"output":{"generics":["dot3"],"name":"presult"}}],[11,"description","","",204,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",204,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",205,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",205,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",205,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",205,{"inputs":[{"name":"self"},{"name":"dotdoteq"}],"output":{"name":"bool"}}],[11,"hash","","",205,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",205,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",205,{"inputs":[{"name":"cursor"}],"output":{"generics":["dotdoteq"],"name":"presult"}}],[11,"description","","",205,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",205,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",206,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",206,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",206,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",206,{"inputs":[{"name":"self"},{"name":"eq"}],"output":{"name":"bool"}}],[11,"hash","","",206,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",206,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",206,{"inputs":[{"name":"cursor"}],"output":{"generics":["eq"],"name":"presult"}}],[11,"description","","",206,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",206,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",207,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",207,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",207,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",207,{"inputs":[{"name":"self"},{"name":"eqeq"}],"output":{"name":"bool"}}],[11,"hash","","",207,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",207,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",207,{"inputs":[{"name":"cursor"}],"output":{"generics":["eqeq"],"name":"presult"}}],[11,"description","","",207,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",207,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",208,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",208,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",208,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",208,{"inputs":[{"name":"self"},{"name":"ge"}],"output":{"name":"bool"}}],[11,"hash","","",208,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",208,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",208,{"inputs":[{"name":"cursor"}],"output":{"generics":["ge"],"name":"presult"}}],[11,"description","","",208,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",208,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",209,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",209,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",209,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",209,{"inputs":[{"name":"self"},{"name":"gt"}],"output":{"name":"bool"}}],[11,"hash","","",209,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",209,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",209,{"inputs":[{"name":"cursor"}],"output":{"generics":["gt"],"name":"presult"}}],[11,"description","","",209,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",209,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",210,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",210,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",210,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",210,{"inputs":[{"name":"self"},{"name":"le"}],"output":{"name":"bool"}}],[11,"hash","","",210,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",210,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",210,{"inputs":[{"name":"cursor"}],"output":{"generics":["le"],"name":"presult"}}],[11,"description","","",210,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",210,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",211,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",211,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",211,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",211,{"inputs":[{"name":"self"},{"name":"lt"}],"output":{"name":"bool"}}],[11,"hash","","",211,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",211,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",211,{"inputs":[{"name":"cursor"}],"output":{"generics":["lt"],"name":"presult"}}],[11,"description","","",211,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",211,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",212,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",212,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",212,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",212,{"inputs":[{"name":"self"},{"name":"muleq"}],"output":{"name":"bool"}}],[11,"hash","","",212,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",212,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",212,{"inputs":[{"name":"cursor"}],"output":{"generics":["muleq"],"name":"presult"}}],[11,"description","","",212,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",212,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",213,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",213,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",213,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",213,{"inputs":[{"name":"self"},{"name":"ne"}],"output":{"name":"bool"}}],[11,"hash","","",213,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",213,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",213,{"inputs":[{"name":"cursor"}],"output":{"generics":["ne"],"name":"presult"}}],[11,"description","","",213,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",213,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",214,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",214,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",214,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",214,{"inputs":[{"name":"self"},{"name":"or"}],"output":{"name":"bool"}}],[11,"hash","","",214,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",214,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",214,{"inputs":[{"name":"cursor"}],"output":{"generics":["or"],"name":"presult"}}],[11,"description","","",214,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",214,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",215,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",215,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",215,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",215,{"inputs":[{"name":"self"},{"name":"oreq"}],"output":{"name":"bool"}}],[11,"hash","","",215,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",215,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",215,{"inputs":[{"name":"cursor"}],"output":{"generics":["oreq"],"name":"presult"}}],[11,"description","","",215,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",215,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",216,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",216,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",216,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",216,{"inputs":[{"name":"self"},{"name":"oror"}],"output":{"name":"bool"}}],[11,"hash","","",216,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",216,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",216,{"inputs":[{"name":"cursor"}],"output":{"generics":["oror"],"name":"presult"}}],[11,"description","","",216,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",216,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",217,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",217,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",217,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",217,{"inputs":[{"name":"self"},{"name":"pound"}],"output":{"name":"bool"}}],[11,"hash","","",217,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",217,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",217,{"inputs":[{"name":"cursor"}],"output":{"generics":["pound"],"name":"presult"}}],[11,"description","","",217,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",217,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",218,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",218,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",218,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",218,{"inputs":[{"name":"self"},{"name":"question"}],"output":{"name":"bool"}}],[11,"hash","","",218,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",218,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",218,{"inputs":[{"name":"cursor"}],"output":{"generics":["question"],"name":"presult"}}],[11,"description","","",218,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",218,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",219,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",219,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",219,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",219,{"inputs":[{"name":"self"},{"name":"rarrow"}],"output":{"name":"bool"}}],[11,"hash","","",219,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",219,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",219,{"inputs":[{"name":"cursor"}],"output":{"generics":["rarrow"],"name":"presult"}}],[11,"description","","",219,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",219,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",220,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",220,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",220,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",220,{"inputs":[{"name":"self"},{"name":"larrow"}],"output":{"name":"bool"}}],[11,"hash","","",220,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",220,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",220,{"inputs":[{"name":"cursor"}],"output":{"generics":["larrow"],"name":"presult"}}],[11,"description","","",220,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",220,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",221,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",221,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",221,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",221,{"inputs":[{"name":"self"},{"name":"rem"}],"output":{"name":"bool"}}],[11,"hash","","",221,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",221,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",221,{"inputs":[{"name":"cursor"}],"output":{"generics":["rem"],"name":"presult"}}],[11,"description","","",221,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",221,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",222,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",222,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",222,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",222,{"inputs":[{"name":"self"},{"name":"remeq"}],"output":{"name":"bool"}}],[11,"hash","","",222,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",222,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",222,{"inputs":[{"name":"cursor"}],"output":{"generics":["remeq"],"name":"presult"}}],[11,"description","","",222,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",222,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",223,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",223,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",223,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",223,{"inputs":[{"name":"self"},{"name":"rocket"}],"output":{"name":"bool"}}],[11,"hash","","",223,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",223,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",223,{"inputs":[{"name":"cursor"}],"output":{"generics":["rocket"],"name":"presult"}}],[11,"description","","",223,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",223,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",224,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",224,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",224,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",224,{"inputs":[{"name":"self"},{"name":"semi"}],"output":{"name":"bool"}}],[11,"hash","","",224,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",224,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",224,{"inputs":[{"name":"cursor"}],"output":{"generics":["semi"],"name":"presult"}}],[11,"description","","",224,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",224,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",225,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",225,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",225,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",225,{"inputs":[{"name":"self"},{"name":"shl"}],"output":{"name":"bool"}}],[11,"hash","","",225,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",225,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",225,{"inputs":[{"name":"cursor"}],"output":{"generics":["shl"],"name":"presult"}}],[11,"description","","",225,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",225,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",226,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",226,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",226,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",226,{"inputs":[{"name":"self"},{"name":"shleq"}],"output":{"name":"bool"}}],[11,"hash","","",226,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",226,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",226,{"inputs":[{"name":"cursor"}],"output":{"generics":["shleq"],"name":"presult"}}],[11,"description","","",226,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",226,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",227,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",227,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",227,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",227,{"inputs":[{"name":"self"},{"name":"shr"}],"output":{"name":"bool"}}],[11,"hash","","",227,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",227,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",227,{"inputs":[{"name":"cursor"}],"output":{"generics":["shr"],"name":"presult"}}],[11,"description","","",227,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",227,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",228,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",228,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",228,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",228,{"inputs":[{"name":"self"},{"name":"shreq"}],"output":{"name":"bool"}}],[11,"hash","","",228,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",228,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",228,{"inputs":[{"name":"cursor"}],"output":{"generics":["shreq"],"name":"presult"}}],[11,"description","","",228,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",228,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",229,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",229,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",229,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",229,{"inputs":[{"name":"self"},{"name":"star"}],"output":{"name":"bool"}}],[11,"hash","","",229,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",229,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",229,{"inputs":[{"name":"cursor"}],"output":{"generics":["star"],"name":"presult"}}],[11,"description","","",229,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",229,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",230,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",230,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",230,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",230,{"inputs":[{"name":"self"},{"name":"sub"}],"output":{"name":"bool"}}],[11,"hash","","",230,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",230,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",230,{"inputs":[{"name":"cursor"}],"output":{"generics":["sub"],"name":"presult"}}],[11,"description","","",230,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",230,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",231,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",231,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",231,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",231,{"inputs":[{"name":"self"},{"name":"subeq"}],"output":{"name":"bool"}}],[11,"hash","","",231,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",231,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",231,{"inputs":[{"name":"cursor"}],"output":{"generics":["subeq"],"name":"presult"}}],[11,"description","","",231,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",231,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"new","","",232,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",232,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",232,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",232,{"inputs":[{"name":"self"},{"name":"underscore"}],"output":{"name":"bool"}}],[11,"hash","","",232,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",232,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",232,{"inputs":[{"name":"cursor"}],"output":{"generics":["underscore"],"name":"presult"}}],[11,"description","","",232,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",232,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",233,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",233,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",233,{"inputs":[{"name":"self"},{"name":"brace"}],"output":{"name":"bool"}}],[11,"hash","","",233,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"surround","","",233,{"inputs":[{"name":"self"},{"name":"tokens"},{"name":"f"}],"output":null}],[11,"parse","","",233,{"inputs":[{"name":"cursor"},{"name":"f"}],"output":{"name":"presult"}}],[11,"from","","",233,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",234,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",234,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",234,{"inputs":[{"name":"self"},{"name":"bracket"}],"output":{"name":"bool"}}],[11,"hash","","",234,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"surround","","",234,{"inputs":[{"name":"self"},{"name":"tokens"},{"name":"f"}],"output":null}],[11,"parse","","",234,{"inputs":[{"name":"cursor"},{"name":"f"}],"output":{"name":"presult"}}],[11,"from","","",234,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",235,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",235,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",235,{"inputs":[{"name":"self"},{"name":"paren"}],"output":{"name":"bool"}}],[11,"hash","","",235,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"surround","","",235,{"inputs":[{"name":"self"},{"name":"tokens"},{"name":"f"}],"output":null}],[11,"parse","","",235,{"inputs":[{"name":"cursor"},{"name":"f"}],"output":{"name":"presult"}}],[11,"from","","",235,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",236,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",236,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",236,{"inputs":[{"name":"self"},{"name":"group"}],"output":{"name":"bool"}}],[11,"hash","","",236,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"surround","","",236,{"inputs":[{"name":"self"},{"name":"tokens"},{"name":"f"}],"output":null}],[11,"parse","","",236,{"inputs":[{"name":"cursor"},{"name":"f"}],"output":{"name":"presult"}}],[11,"from","","",236,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",237,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",237,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",237,{"inputs":[{"name":"self"},{"name":"as"}],"output":{"name":"bool"}}],[11,"hash","","",237,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",237,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",237,{"inputs":[{"name":"cursor"}],"output":{"generics":["as"],"name":"presult"}}],[11,"description","","",237,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",237,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",238,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",238,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",238,{"inputs":[{"name":"self"},{"name":"auto"}],"output":{"name":"bool"}}],[11,"hash","","",238,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",238,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",238,{"inputs":[{"name":"cursor"}],"output":{"generics":["auto"],"name":"presult"}}],[11,"description","","",238,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",238,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",239,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",239,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",239,{"inputs":[{"name":"self"},{"name":"box"}],"output":{"name":"bool"}}],[11,"hash","","",239,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",239,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",239,{"inputs":[{"name":"cursor"}],"output":{"generics":["box"],"name":"presult"}}],[11,"description","","",239,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",239,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",240,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",240,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",240,{"inputs":[{"name":"self"},{"name":"break"}],"output":{"name":"bool"}}],[11,"hash","","",240,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",240,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",240,{"inputs":[{"name":"cursor"}],"output":{"generics":["break"],"name":"presult"}}],[11,"description","","",240,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",240,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",241,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",241,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",241,{"inputs":[{"name":"self"},{"name":"capself"}],"output":{"name":"bool"}}],[11,"hash","","",241,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",241,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",241,{"inputs":[{"name":"cursor"}],"output":{"generics":["capself"],"name":"presult"}}],[11,"description","","",241,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",241,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",242,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",242,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",242,{"inputs":[{"name":"self"},{"name":"catch"}],"output":{"name":"bool"}}],[11,"hash","","",242,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",242,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",242,{"inputs":[{"name":"cursor"}],"output":{"generics":["catch"],"name":"presult"}}],[11,"description","","",242,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",242,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",243,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",243,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",243,{"inputs":[{"name":"self"},{"name":"const"}],"output":{"name":"bool"}}],[11,"hash","","",243,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",243,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",243,{"inputs":[{"name":"cursor"}],"output":{"generics":["const"],"name":"presult"}}],[11,"description","","",243,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",243,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",244,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",244,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",244,{"inputs":[{"name":"self"},{"name":"continue"}],"output":{"name":"bool"}}],[11,"hash","","",244,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",244,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",244,{"inputs":[{"name":"cursor"}],"output":{"generics":["continue"],"name":"presult"}}],[11,"description","","",244,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",244,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",245,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",245,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",245,{"inputs":[{"name":"self"},{"name":"crate"}],"output":{"name":"bool"}}],[11,"hash","","",245,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",245,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",245,{"inputs":[{"name":"cursor"}],"output":{"generics":["crate"],"name":"presult"}}],[11,"description","","",245,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",245,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",246,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",246,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",246,{"inputs":[{"name":"self"},{"name":"default"}],"output":{"name":"bool"}}],[11,"hash","","",246,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",246,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",246,{"inputs":[{"name":"cursor"}],"output":{"generics":["default"],"name":"presult"}}],[11,"description","","",246,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",246,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",247,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",247,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",247,{"inputs":[{"name":"self"},{"name":"do"}],"output":{"name":"bool"}}],[11,"hash","","",247,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",247,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",247,{"inputs":[{"name":"cursor"}],"output":{"generics":["do"],"name":"presult"}}],[11,"description","","",247,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",247,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",248,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",248,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",248,{"inputs":[{"name":"self"},{"name":"dyn"}],"output":{"name":"bool"}}],[11,"hash","","",248,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",248,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",248,{"inputs":[{"name":"cursor"}],"output":{"generics":["dyn"],"name":"presult"}}],[11,"description","","",248,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",248,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",249,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",249,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",249,{"inputs":[{"name":"self"},{"name":"else"}],"output":{"name":"bool"}}],[11,"hash","","",249,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",249,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",249,{"inputs":[{"name":"cursor"}],"output":{"generics":["else"],"name":"presult"}}],[11,"description","","",249,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",249,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",250,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",250,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",250,{"inputs":[{"name":"self"},{"name":"enum"}],"output":{"name":"bool"}}],[11,"hash","","",250,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",250,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",250,{"inputs":[{"name":"cursor"}],"output":{"generics":["enum"],"name":"presult"}}],[11,"description","","",250,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",250,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",251,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",251,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",251,{"inputs":[{"name":"self"},{"name":"extern"}],"output":{"name":"bool"}}],[11,"hash","","",251,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",251,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",251,{"inputs":[{"name":"cursor"}],"output":{"generics":["extern"],"name":"presult"}}],[11,"description","","",251,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",251,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",252,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",252,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",252,{"inputs":[{"name":"self"},{"name":"fn"}],"output":{"name":"bool"}}],[11,"hash","","",252,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",252,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",252,{"inputs":[{"name":"cursor"}],"output":{"generics":["fn"],"name":"presult"}}],[11,"description","","",252,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",252,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",253,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",253,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",253,{"inputs":[{"name":"self"},{"name":"for"}],"output":{"name":"bool"}}],[11,"hash","","",253,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",253,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",253,{"inputs":[{"name":"cursor"}],"output":{"generics":["for"],"name":"presult"}}],[11,"description","","",253,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",253,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",254,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",254,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",254,{"inputs":[{"name":"self"},{"name":"if"}],"output":{"name":"bool"}}],[11,"hash","","",254,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",254,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",254,{"inputs":[{"name":"cursor"}],"output":{"generics":["if"],"name":"presult"}}],[11,"description","","",254,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",254,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",255,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",255,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",255,{"inputs":[{"name":"self"},{"name":"impl"}],"output":{"name":"bool"}}],[11,"hash","","",255,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",255,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",255,{"inputs":[{"name":"cursor"}],"output":{"generics":["impl"],"name":"presult"}}],[11,"description","","",255,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",255,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",256,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",256,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",256,{"inputs":[{"name":"self"},{"name":"in"}],"output":{"name":"bool"}}],[11,"hash","","",256,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",256,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",256,{"inputs":[{"name":"cursor"}],"output":{"generics":["in"],"name":"presult"}}],[11,"description","","",256,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",256,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",257,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",257,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",257,{"inputs":[{"name":"self"},{"name":"let"}],"output":{"name":"bool"}}],[11,"hash","","",257,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",257,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",257,{"inputs":[{"name":"cursor"}],"output":{"generics":["let"],"name":"presult"}}],[11,"description","","",257,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",257,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",258,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",258,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",258,{"inputs":[{"name":"self"},{"name":"loop"}],"output":{"name":"bool"}}],[11,"hash","","",258,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",258,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",258,{"inputs":[{"name":"cursor"}],"output":{"generics":["loop"],"name":"presult"}}],[11,"description","","",258,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",258,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",259,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",259,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",259,{"inputs":[{"name":"self"},{"name":"macro"}],"output":{"name":"bool"}}],[11,"hash","","",259,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",259,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",259,{"inputs":[{"name":"cursor"}],"output":{"generics":["macro"],"name":"presult"}}],[11,"description","","",259,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",259,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",260,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",260,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",260,{"inputs":[{"name":"self"},{"name":"match"}],"output":{"name":"bool"}}],[11,"hash","","",260,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",260,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",260,{"inputs":[{"name":"cursor"}],"output":{"generics":["match"],"name":"presult"}}],[11,"description","","",260,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",260,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",261,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",261,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",261,{"inputs":[{"name":"self"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"hash","","",261,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",261,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",261,{"inputs":[{"name":"cursor"}],"output":{"generics":["mod"],"name":"presult"}}],[11,"description","","",261,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",261,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",262,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",262,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",262,{"inputs":[{"name":"self"},{"name":"move"}],"output":{"name":"bool"}}],[11,"hash","","",262,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",262,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",262,{"inputs":[{"name":"cursor"}],"output":{"generics":["move"],"name":"presult"}}],[11,"description","","",262,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",262,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",263,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",263,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",263,{"inputs":[{"name":"self"},{"name":"mut"}],"output":{"name":"bool"}}],[11,"hash","","",263,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",263,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",263,{"inputs":[{"name":"cursor"}],"output":{"generics":["mut"],"name":"presult"}}],[11,"description","","",263,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",263,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",264,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",264,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",264,{"inputs":[{"name":"self"},{"name":"pub"}],"output":{"name":"bool"}}],[11,"hash","","",264,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",264,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",264,{"inputs":[{"name":"cursor"}],"output":{"generics":["pub"],"name":"presult"}}],[11,"description","","",264,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",264,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",265,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",265,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",265,{"inputs":[{"name":"self"},{"name":"ref"}],"output":{"name":"bool"}}],[11,"hash","","",265,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",265,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",265,{"inputs":[{"name":"cursor"}],"output":{"generics":["ref"],"name":"presult"}}],[11,"description","","",265,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",265,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",266,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",266,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",266,{"inputs":[{"name":"self"},{"name":"return"}],"output":{"name":"bool"}}],[11,"hash","","",266,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",266,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",266,{"inputs":[{"name":"cursor"}],"output":{"generics":["return"],"name":"presult"}}],[11,"description","","",266,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",266,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",267,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",267,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",267,{"inputs":[{"name":"self"},{"name":"self_"}],"output":{"name":"bool"}}],[11,"hash","","",267,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",267,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",267,{"inputs":[{"name":"cursor"}],"output":{"generics":["self_"],"name":"presult"}}],[11,"description","","",267,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",267,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",268,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",268,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",268,{"inputs":[{"name":"self"},{"name":"static"}],"output":{"name":"bool"}}],[11,"hash","","",268,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",268,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",268,{"inputs":[{"name":"cursor"}],"output":{"generics":["static"],"name":"presult"}}],[11,"description","","",268,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",268,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",269,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",269,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",269,{"inputs":[{"name":"self"},{"name":"struct"}],"output":{"name":"bool"}}],[11,"hash","","",269,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",269,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",269,{"inputs":[{"name":"cursor"}],"output":{"generics":["struct"],"name":"presult"}}],[11,"description","","",269,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",269,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",270,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",270,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",270,{"inputs":[{"name":"self"},{"name":"super"}],"output":{"name":"bool"}}],[11,"hash","","",270,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",270,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",270,{"inputs":[{"name":"cursor"}],"output":{"generics":["super"],"name":"presult"}}],[11,"description","","",270,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",270,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",271,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",271,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",271,{"inputs":[{"name":"self"},{"name":"trait"}],"output":{"name":"bool"}}],[11,"hash","","",271,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",271,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",271,{"inputs":[{"name":"cursor"}],"output":{"generics":["trait"],"name":"presult"}}],[11,"description","","",271,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",271,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",272,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",272,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",272,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"hash","","",272,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",272,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",272,{"inputs":[{"name":"cursor"}],"output":{"generics":["type"],"name":"presult"}}],[11,"description","","",272,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",272,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",273,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",273,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",273,{"inputs":[{"name":"self"},{"name":"union"}],"output":{"name":"bool"}}],[11,"hash","","",273,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",273,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",273,{"inputs":[{"name":"cursor"}],"output":{"generics":["union"],"name":"presult"}}],[11,"description","","",273,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",273,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",274,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",274,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",274,{"inputs":[{"name":"self"},{"name":"unsafe"}],"output":{"name":"bool"}}],[11,"hash","","",274,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",274,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",274,{"inputs":[{"name":"cursor"}],"output":{"generics":["unsafe"],"name":"presult"}}],[11,"description","","",274,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",274,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",275,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",275,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",275,{"inputs":[{"name":"self"},{"name":"use"}],"output":{"name":"bool"}}],[11,"hash","","",275,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",275,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",275,{"inputs":[{"name":"cursor"}],"output":{"generics":["use"],"name":"presult"}}],[11,"description","","",275,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",275,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",276,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",276,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",276,{"inputs":[{"name":"self"},{"name":"where"}],"output":{"name":"bool"}}],[11,"hash","","",276,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",276,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",276,{"inputs":[{"name":"cursor"}],"output":{"generics":["where"],"name":"presult"}}],[11,"description","","",276,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",276,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",277,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",277,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",277,{"inputs":[{"name":"self"},{"name":"while"}],"output":{"name":"bool"}}],[11,"hash","","",277,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",277,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",277,{"inputs":[{"name":"cursor"}],"output":{"generics":["while"],"name":"presult"}}],[11,"description","","",277,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",277,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"default","","",278,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",278,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",278,{"inputs":[{"name":"self"},{"name":"yield"}],"output":{"name":"bool"}}],[11,"hash","","",278,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_tokens","","",278,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",278,{"inputs":[{"name":"cursor"}],"output":{"generics":["yield"],"name":"presult"}}],[11,"description","","",278,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"from","","",278,{"inputs":[{"name":"span"}],"output":{"name":"self"}}],[11,"parse_inner","syn","",0,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_outer","","",0,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",0,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",1,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",2,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",0,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"interpret_meta","","Parses the tokens after the path as a `Meta` if possible.",0,{"inputs":[{"name":"self"}],"output":{"generics":["meta"],"name":"option"}}],[11,"fmt","","",155,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",155,{"inputs":[{"name":"self"},{"name":"attrstyle"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"self"},{"name":"attrstyle"}],"output":{"name":"bool"}}],[11,"hash","","",155,null],[11,"fmt","","",156,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",156,{"inputs":[{"name":"self"},{"name":"meta"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"self"},{"name":"meta"}],"output":{"name":"bool"}}],[11,"hash","","",156,null],[11,"from","","",156,{"inputs":[{"name":"ident"}],"output":{"name":"meta"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"metalist"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"metalist"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"from","","",156,{"inputs":[{"name":"metalist"}],"output":{"name":"meta"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"metanamevalue"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"metanamevalue"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"from","","",156,{"inputs":[{"name":"metanamevalue"}],"output":{"name":"meta"}}],[11,"to_tokens","","",156,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"name","","Returns the identifier that begins this structured meta item.",156,{"inputs":[{"name":"self"}],"output":{"name":"ident"}}],[11,"fmt","","",157,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",157,{"inputs":[{"name":"self"},{"name":"nestedmeta"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"self"},{"name":"nestedmeta"}],"output":{"name":"bool"}}],[11,"hash","","",157,null],[11,"from","","",157,{"inputs":[{"name":"meta"}],"output":{"name":"nestedmeta"}}],[11,"from","","",157,{"inputs":[{"name":"lit"}],"output":{"name":"nestedmeta"}}],[11,"to_tokens","","",157,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",6,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",6,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",4,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",4,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",5,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",5,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse_named","","",3,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_unnamed","","",3,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",159,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",159,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",6,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",4,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",5,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",3,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",8,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",7,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",9,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"fmt","","",158,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",158,{"inputs":[{"name":"self"},{"name":"fields"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"self"},{"name":"fields"}],"output":{"name":"bool"}}],[11,"hash","","",158,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"fieldsnamed"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"fieldsnamed"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"from","","",158,{"inputs":[{"name":"fieldsnamed"}],"output":{"name":"fields"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"fieldsunnamed"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"fieldsunnamed"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"from","","",158,{"inputs":[{"name":"fieldsunnamed"}],"output":{"name":"fields"}}],[11,"to_tokens","","",158,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"iter","","Get an iterator over the [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",158,{"inputs":[{"name":"self"}],"output":{"generics":["field","comma"],"name":"iter"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"fmt","","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",159,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"ne","","",159,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"hash","","",159,null],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"vispublic"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"vispublic"}],"output":{"name":"bool"}}],[11,"hash","","",8,null],[11,"from","","",159,{"inputs":[{"name":"vispublic"}],"output":{"name":"visibility"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"viscrate"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"viscrate"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"from","","",159,{"inputs":[{"name":"viscrate"}],"output":{"name":"visibility"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"visrestricted"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"visrestricted"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"from","","",159,{"inputs":[{"name":"visrestricted"}],"output":{"name":"visibility"}}],[11,"to_tokens","","",159,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",160,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",160,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",30,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",30,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",32,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",32,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",25,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",25,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",35,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",35,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",11,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",11,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",162,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",162,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",42,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",42,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",27,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",27,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",26,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",26,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",24,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",24,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",31,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",31,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",33,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",33,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",20,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",20,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",49,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",49,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",51,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",51,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",47,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",47,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",48,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",48,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",55,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",55,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",22,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",22,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",40,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",40,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",54,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",54,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",38,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",38,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",45,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",45,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",15,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",15,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",164,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",164,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",36,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",36,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",52,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",52,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse_within","","",52,{"inputs":[{"name":"cursor"}],"output":{"generics":["vec"],"name":"presult"}}],[11,"parse","","",165,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",165,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",163,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",163,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",70,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",70,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",58,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",58,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",59,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",59,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",68,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",68,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",66,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",66,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",53,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",53,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",161,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",161,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",50,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",50,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",62,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",62,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",67,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",67,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",64,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",64,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",60,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",60,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",63,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",63,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",65,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",65,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",61,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",61,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",16,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",28,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",11,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",18,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",34,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",57,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",162,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",42,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",14,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",44,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",30,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",19,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",43,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",26,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",27,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",47,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",48,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",24,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",31,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",33,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",20,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",49,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",21,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",45,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",15,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",12,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",13,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",23,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",161,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",50,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",29,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",37,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",36,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",10,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",17,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",22,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",39,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",32,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",40,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",38,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",25,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",35,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",41,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",46,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",55,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",54,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",51,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",70,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",59,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",66,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",68,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",62,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",67,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",58,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",64,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",60,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",63,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",65,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",61,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",69,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",53,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",52,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",165,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",56,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",160,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",160,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"ne","","",160,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"hash","","",160,null],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"exprbox"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"exprbox"}],"output":{"name":"bool"}}],[11,"hash","","",16,null],[11,"from","","",160,{"inputs":[{"name":"exprbox"}],"output":{"name":"expr"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"exprinplace"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"exprinplace"}],"output":{"name":"bool"}}],[11,"hash","","",28,null],[11,"from","","",160,{"inputs":[{"name":"exprinplace"}],"output":{"name":"expr"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"exprarray"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"exprarray"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"from","","",160,{"inputs":[{"name":"exprarray"}],"output":{"name":"expr"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"exprcall"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"exprcall"}],"output":{"name":"bool"}}],[11,"hash","","",18,null],[11,"from","","",160,{"inputs":[{"name":"exprcall"}],"output":{"name":"expr"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"exprmethodcall"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"self"},{"name":"exprmethodcall"}],"output":{"name":"bool"}}],[11,"hash","","",34,null],[11,"from","","",160,{"inputs":[{"name":"exprmethodcall"}],"output":{"name":"expr"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"exprtuple"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"self"},{"name":"exprtuple"}],"output":{"name":"bool"}}],[11,"hash","","",42,null],[11,"from","","",160,{"inputs":[{"name":"exprtuple"}],"output":{"name":"expr"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"exprbinary"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"exprbinary"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"from","","",160,{"inputs":[{"name":"exprbinary"}],"output":{"name":"expr"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"exprunary"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"exprunary"}],"output":{"name":"bool"}}],[11,"hash","","",44,null],[11,"from","","",160,{"inputs":[{"name":"exprunary"}],"output":{"name":"expr"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"exprlit"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"exprlit"}],"output":{"name":"bool"}}],[11,"hash","","",30,null],[11,"from","","",160,{"inputs":[{"name":"exprlit"}],"output":{"name":"expr"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"exprcast"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"exprcast"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"from","","",160,{"inputs":[{"name":"exprcast"}],"output":{"name":"expr"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"exprtype"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"exprtype"}],"output":{"name":"bool"}}],[11,"hash","","",43,null],[11,"from","","",160,{"inputs":[{"name":"exprtype"}],"output":{"name":"expr"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"exprif"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"exprif"}],"output":{"name":"bool"}}],[11,"hash","","",26,null],[11,"from","","",160,{"inputs":[{"name":"exprif"}],"output":{"name":"expr"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"expriflet"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"expriflet"}],"output":{"name":"bool"}}],[11,"hash","","",27,null],[11,"from","","",160,{"inputs":[{"name":"expriflet"}],"output":{"name":"expr"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"exprwhile"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"self"},{"name":"exprwhile"}],"output":{"name":"bool"}}],[11,"hash","","",47,null],[11,"from","","",160,{"inputs":[{"name":"exprwhile"}],"output":{"name":"expr"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"exprwhilelet"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"exprwhilelet"}],"output":{"name":"bool"}}],[11,"hash","","",48,null],[11,"from","","",160,{"inputs":[{"name":"exprwhilelet"}],"output":{"name":"expr"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"exprforloop"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"exprforloop"}],"output":{"name":"bool"}}],[11,"hash","","",24,null],[11,"from","","",160,{"inputs":[{"name":"exprforloop"}],"output":{"name":"expr"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"exprloop"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"exprloop"}],"output":{"name":"bool"}}],[11,"hash","","",31,null],[11,"from","","",160,{"inputs":[{"name":"exprloop"}],"output":{"name":"expr"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"exprmatch"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"exprmatch"}],"output":{"name":"bool"}}],[11,"hash","","",33,null],[11,"from","","",160,{"inputs":[{"name":"exprmatch"}],"output":{"name":"expr"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"exprclosure"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"exprclosure"}],"output":{"name":"bool"}}],[11,"hash","","",21,null],[11,"from","","",160,{"inputs":[{"name":"exprclosure"}],"output":{"name":"expr"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"exprunsafe"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"exprunsafe"}],"output":{"name":"bool"}}],[11,"hash","","",45,null],[11,"from","","",160,{"inputs":[{"name":"exprunsafe"}],"output":{"name":"expr"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"exprblock"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"exprblock"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"from","","",160,{"inputs":[{"name":"exprblock"}],"output":{"name":"expr"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"exprassign"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"exprassign"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"from","","",160,{"inputs":[{"name":"exprassign"}],"output":{"name":"expr"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"exprassignop"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"exprassignop"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"from","","",160,{"inputs":[{"name":"exprassignop"}],"output":{"name":"expr"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"exprfield"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"exprfield"}],"output":{"name":"bool"}}],[11,"hash","","",23,null],[11,"from","","",160,{"inputs":[{"name":"exprfield"}],"output":{"name":"expr"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"exprindex"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"exprindex"}],"output":{"name":"bool"}}],[11,"hash","","",29,null],[11,"from","","",160,{"inputs":[{"name":"exprindex"}],"output":{"name":"expr"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"exprrange"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"exprrange"}],"output":{"name":"bool"}}],[11,"hash","","",37,null],[11,"from","","",160,{"inputs":[{"name":"exprrange"}],"output":{"name":"expr"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"exprpath"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"exprpath"}],"output":{"name":"bool"}}],[11,"hash","","",36,null],[11,"from","","",160,{"inputs":[{"name":"exprpath"}],"output":{"name":"expr"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"expraddrof"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"expraddrof"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"from","","",160,{"inputs":[{"name":"expraddrof"}],"output":{"name":"expr"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"exprbreak"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"exprbreak"}],"output":{"name":"bool"}}],[11,"hash","","",17,null],[11,"from","","",160,{"inputs":[{"name":"exprbreak"}],"output":{"name":"expr"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"exprcontinue"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"exprcontinue"}],"output":{"name":"bool"}}],[11,"hash","","",22,null],[11,"from","","",160,{"inputs":[{"name":"exprcontinue"}],"output":{"name":"expr"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"exprreturn"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"exprreturn"}],"output":{"name":"bool"}}],[11,"hash","","",39,null],[11,"from","","",160,{"inputs":[{"name":"exprreturn"}],"output":{"name":"expr"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"exprmacro"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"exprmacro"}],"output":{"name":"bool"}}],[11,"hash","","",32,null],[11,"from","","",160,{"inputs":[{"name":"exprmacro"}],"output":{"name":"expr"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"exprstruct"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"exprstruct"}],"output":{"name":"bool"}}],[11,"hash","","",40,null],[11,"from","","",160,{"inputs":[{"name":"exprstruct"}],"output":{"name":"expr"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"exprrepeat"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"exprrepeat"}],"output":{"name":"bool"}}],[11,"hash","","",38,null],[11,"from","","",160,{"inputs":[{"name":"exprrepeat"}],"output":{"name":"expr"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"exprparen"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"exprparen"}],"output":{"name":"bool"}}],[11,"hash","","",35,null],[11,"from","","",160,{"inputs":[{"name":"exprparen"}],"output":{"name":"expr"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"exprgroup"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"exprgroup"}],"output":{"name":"bool"}}],[11,"hash","","",25,null],[11,"from","","",160,{"inputs":[{"name":"exprgroup"}],"output":{"name":"expr"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"exprtry"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"self"},{"name":"exprtry"}],"output":{"name":"bool"}}],[11,"hash","","",41,null],[11,"from","","",160,{"inputs":[{"name":"exprtry"}],"output":{"name":"expr"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"exprcatch"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"exprcatch"}],"output":{"name":"bool"}}],[11,"hash","","",20,null],[11,"from","","",160,{"inputs":[{"name":"exprcatch"}],"output":{"name":"expr"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"expryield"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"expryield"}],"output":{"name":"bool"}}],[11,"hash","","",49,null],[11,"from","","",160,{"inputs":[{"name":"expryield"}],"output":{"name":"expr"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",160,{"inputs":[{"name":"exprverbatim"}],"output":{"name":"expr"}}],[11,"to_tokens","","",160,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",46,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",161,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",161,{"inputs":[{"name":"self"},{"name":"member"}],"output":{"name":"bool"}}],[11,"ne","","",161,{"inputs":[{"name":"self"},{"name":"member"}],"output":{"name":"bool"}}],[11,"hash","","",161,null],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",50,{"inputs":[{"name":"usize"}],"output":{"name":"index"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",50,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"methodturbofish"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"self"},{"name":"methodturbofish"}],"output":{"name":"bool"}}],[11,"hash","","",57,null],[11,"fmt","","",162,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",162,{"inputs":[{"name":"self"},{"name":"genericmethodargument"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"self"},{"name":"genericmethodargument"}],"output":{"name":"bool"}}],[11,"hash","","",162,null],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"fieldvalue"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"fieldvalue"}],"output":{"name":"bool"}}],[11,"hash","","",54,null],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"label"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"self"},{"name":"label"}],"output":{"name":"bool"}}],[11,"hash","","",55,null],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"block"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"block"}],"output":{"name":"bool"}}],[11,"hash","","",52,null],[11,"fmt","","",165,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",165,{"inputs":[{"name":"self"},{"name":"stmt"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"self"},{"name":"stmt"}],"output":{"name":"bool"}}],[11,"hash","","",165,null],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"local"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"self"},{"name":"local"}],"output":{"name":"bool"}}],[11,"hash","","",56,null],[11,"fmt","","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",163,{"inputs":[{"name":"self"},{"name":"pat"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"self"},{"name":"pat"}],"output":{"name":"bool"}}],[11,"hash","","",163,null],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"patwild"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"self"},{"name":"patwild"}],"output":{"name":"bool"}}],[11,"hash","","",70,null],[11,"from","","",163,{"inputs":[{"name":"patwild"}],"output":{"name":"pat"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"patident"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"patident"}],"output":{"name":"bool"}}],[11,"hash","","",59,null],[11,"from","","",163,{"inputs":[{"name":"patident"}],"output":{"name":"pat"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"patstruct"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"self"},{"name":"patstruct"}],"output":{"name":"bool"}}],[11,"hash","","",66,null],[11,"from","","",163,{"inputs":[{"name":"patstruct"}],"output":{"name":"pat"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"pattuplestruct"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"self"},{"name":"pattuplestruct"}],"output":{"name":"bool"}}],[11,"hash","","",68,null],[11,"from","","",163,{"inputs":[{"name":"pattuplestruct"}],"output":{"name":"pat"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"patpath"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"patpath"}],"output":{"name":"bool"}}],[11,"hash","","",62,null],[11,"from","","",163,{"inputs":[{"name":"patpath"}],"output":{"name":"pat"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"pattuple"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"self"},{"name":"pattuple"}],"output":{"name":"bool"}}],[11,"hash","","",67,null],[11,"from","","",163,{"inputs":[{"name":"pattuple"}],"output":{"name":"pat"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"patbox"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"patbox"}],"output":{"name":"bool"}}],[11,"hash","","",58,null],[11,"from","","",163,{"inputs":[{"name":"patbox"}],"output":{"name":"pat"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"patref"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"self"},{"name":"patref"}],"output":{"name":"bool"}}],[11,"hash","","",64,null],[11,"from","","",163,{"inputs":[{"name":"patref"}],"output":{"name":"pat"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"patlit"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"patlit"}],"output":{"name":"bool"}}],[11,"hash","","",60,null],[11,"from","","",163,{"inputs":[{"name":"patlit"}],"output":{"name":"pat"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",63,{"inputs":[{"name":"self"},{"name":"patrange"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"self"},{"name":"patrange"}],"output":{"name":"bool"}}],[11,"hash","","",63,null],[11,"from","","",163,{"inputs":[{"name":"patrange"}],"output":{"name":"pat"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"patslice"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"patslice"}],"output":{"name":"bool"}}],[11,"hash","","",65,null],[11,"from","","",163,{"inputs":[{"name":"patslice"}],"output":{"name":"pat"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"patmacro"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"patmacro"}],"output":{"name":"bool"}}],[11,"hash","","",61,null],[11,"from","","",163,{"inputs":[{"name":"patmacro"}],"output":{"name":"pat"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",163,{"inputs":[{"name":"patverbatim"}],"output":{"name":"pat"}}],[11,"to_tokens","","",163,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",69,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"arm"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"arm"}],"output":{"name":"bool"}}],[11,"hash","","",51,null],[11,"fmt","","",164,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",164,{"inputs":[{"name":"self"},{"name":"rangelimits"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"self"},{"name":"rangelimits"}],"output":{"name":"bool"}}],[11,"hash","","",164,null],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"fieldpat"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"self"},{"name":"fieldpat"}],"output":{"name":"bool"}}],[11,"hash","","",53,null],[11,"parse","","",73,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",73,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",166,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",166,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",74,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",74,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",71,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",71,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",79,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",79,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",168,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",168,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",78,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",78,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",167,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",167,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",72,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",72,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",80,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",80,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",169,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",169,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",73,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",279,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",280,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",281,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",71,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",74,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",79,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",78,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",167,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",72,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",80,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",77,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",76,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",75,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"default","","",73,{"inputs":[],"output":{"name":"generics"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"self"},{"name":"generics"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"self"},{"name":"generics"}],"output":{"name":"bool"}}],[11,"hash","","",73,null],[11,"fmt","","",166,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",166,{"inputs":[{"name":"self"},{"name":"genericparam"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"self"},{"name":"genericparam"}],"output":{"name":"bool"}}],[11,"hash","","",166,null],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"typeparam"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"self"},{"name":"typeparam"}],"output":{"name":"bool"}}],[11,"hash","","",79,null],[11,"from","","",166,{"inputs":[{"name":"typeparam"}],"output":{"name":"genericparam"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":{"name":"bool"}}],[11,"hash","","",74,null],[11,"from","","",166,{"inputs":[{"name":"lifetimedef"}],"output":{"name":"genericparam"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"constparam"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"self"},{"name":"constparam"}],"output":{"name":"bool"}}],[11,"hash","","",72,null],[11,"from","","",166,{"inputs":[{"name":"constparam"}],"output":{"name":"genericparam"}}],[11,"to_tokens","","",166,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type parameters in `self.params`.",73,{"inputs":[{"name":"self"}],"output":{"name":"typeparams"}}],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type parameters in `self.params`.",73,{"inputs":[{"name":"self"}],"output":{"name":"typeparamsmut"}}],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime parameters in `self.params`.",73,{"inputs":[{"name":"self"}],"output":{"name":"lifetimes"}}],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the lifetime parameters in `self.params`.",73,{"inputs":[{"name":"self"}],"output":{"name":"lifetimesmut"}}],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant parameters in `self.params`.",73,{"inputs":[{"name":"self"}],"output":{"name":"constparams"}}],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the constant parameters in `self.params`.",73,{"inputs":[{"name":"self"}],"output":{"name":"constparamsmut"}}],[11,"fmt","","",279,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",279,{"inputs":[{"name":"self"},{"name":"implgenerics"}],"output":{"name":"bool"}}],[11,"ne","","",279,{"inputs":[{"name":"self"},{"name":"implgenerics"}],"output":{"name":"bool"}}],[11,"hash","","",279,null],[11,"fmt","","",280,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",280,{"inputs":[{"name":"self"},{"name":"typegenerics"}],"output":{"name":"bool"}}],[11,"ne","","",280,{"inputs":[{"name":"self"},{"name":"typegenerics"}],"output":{"name":"bool"}}],[11,"hash","","",280,null],[11,"fmt","","",281,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",281,{"inputs":[{"name":"self"},{"name":"turbofish"}],"output":{"name":"bool"}}],[11,"ne","","",281,{"inputs":[{"name":"self"},{"name":"turbofish"}],"output":{"name":"bool"}}],[11,"hash","","",281,null],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",73,null],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",280,{"inputs":[{"name":"self"}],"output":{"name":"turbofish"}}],[11,"default","","",71,{"inputs":[],"output":{"name":"boundlifetimes"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"boundlifetimes"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"self"},{"name":"boundlifetimes"}],"output":{"name":"bool"}}],[11,"hash","","",71,null],[11,"new","","",74,{"inputs":[{"name":"lifetime"}],"output":{"name":"self"}}],[11,"from","","",79,{"inputs":[{"name":"ident"}],"output":{"name":"self"}}],[11,"fmt","","",168,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",168,{"inputs":[{"name":"self"},{"name":"typeparambound"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"self"},{"name":"typeparambound"}],"output":{"name":"bool"}}],[11,"hash","","",168,null],[11,"from","","",168,{"inputs":[{"name":"traitbound"}],"output":{"name":"typeparambound"}}],[11,"from","","",168,{"inputs":[{"name":"lifetime"}],"output":{"name":"typeparambound"}}],[11,"to_tokens","","",168,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"traitbound"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"self"},{"name":"traitbound"}],"output":{"name":"bool"}}],[11,"hash","","",78,null],[11,"fmt","","",167,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",167,{"inputs":[{"name":"self"},{"name":"traitboundmodifier"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"self"},{"name":"traitboundmodifier"}],"output":{"name":"bool"}}],[11,"hash","","",167,null],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"whereclause"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"self"},{"name":"whereclause"}],"output":{"name":"bool"}}],[11,"hash","","",80,null],[11,"fmt","","",169,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",169,{"inputs":[{"name":"self"},{"name":"wherepredicate"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"self"},{"name":"wherepredicate"}],"output":{"name":"bool"}}],[11,"hash","","",169,null],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"predicatetype"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"self"},{"name":"predicatetype"}],"output":{"name":"bool"}}],[11,"hash","","",77,null],[11,"from","","",169,{"inputs":[{"name":"predicatetype"}],"output":{"name":"wherepredicate"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"predicatelifetime"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"self"},{"name":"predicatelifetime"}],"output":{"name":"bool"}}],[11,"hash","","",76,null],[11,"from","","",169,{"inputs":[{"name":"predicatelifetime"}],"output":{"name":"wherepredicate"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"predicateeq"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"self"},{"name":"predicateeq"}],"output":{"name":"bool"}}],[11,"hash","","",75,null],[11,"from","","",169,{"inputs":[{"name":"predicateeq"}],"output":{"name":"wherepredicate"}}],[11,"to_tokens","","",169,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",81,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",81,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",81,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"ident"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an ident with the given string representation.",81,{"inputs":[{"name":"str"},{"name":"span"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"self_"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"capself"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"super"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"crate"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"generics":["str"],"name":"cow"}],"output":{"name":"self"}}],[11,"from","","",81,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"as_ref","","",81,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",81,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",81,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"ordering"}}],[11,"hash","","",81,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"parse","","",173,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",173,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",101,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",101,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",102,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",102,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",97,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",97,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",109,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",109,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",175,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",175,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",119,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",119,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",117,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",117,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",118,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",118,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",104,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",104,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",95,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",95,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",98,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",98,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",170,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",170,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",103,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",103,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",99,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",99,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",171,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",171,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",86,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",86,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",87,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",87,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",88,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",88,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",107,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",107,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",105,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",105,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",96,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",96,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",108,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",108,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",106,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",106,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",174,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",174,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",112,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",112,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",114,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",114,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",115,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",115,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",113,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",113,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",100,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",172,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",172,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",90,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",90,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",92,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",92,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",93,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",93,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",91,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",91,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",97,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",109,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",104,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",95,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",98,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",103,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",99,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",107,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",96,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",105,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",108,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",106,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",100,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",101,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",102,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",110,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",119,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",117,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",118,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",112,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",114,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",115,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",113,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",116,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",90,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",92,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",93,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",91,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",94,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",86,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",87,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",88,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",89,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",111,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",84,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",83,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",82,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",173,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",173,{"inputs":[{"name":"self"},{"name":"item"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"self"},{"name":"item"}],"output":{"name":"bool"}}],[11,"hash","","",173,null],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"itemexterncrate"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"self"},{"name":"itemexterncrate"}],"output":{"name":"bool"}}],[11,"hash","","",97,null],[11,"from","","",173,{"inputs":[{"name":"itemexterncrate"}],"output":{"name":"item"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"itemuse"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"self"},{"name":"itemuse"}],"output":{"name":"bool"}}],[11,"hash","","",109,null],[11,"from","","",173,{"inputs":[{"name":"itemuse"}],"output":{"name":"item"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",104,{"inputs":[{"name":"self"},{"name":"itemstatic"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"self"},{"name":"itemstatic"}],"output":{"name":"bool"}}],[11,"hash","","",104,null],[11,"from","","",173,{"inputs":[{"name":"itemstatic"}],"output":{"name":"item"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"itemconst"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"self"},{"name":"itemconst"}],"output":{"name":"bool"}}],[11,"hash","","",95,null],[11,"from","","",173,{"inputs":[{"name":"itemconst"}],"output":{"name":"item"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",98,{"inputs":[{"name":"self"},{"name":"itemfn"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"self"},{"name":"itemfn"}],"output":{"name":"bool"}}],[11,"hash","","",98,null],[11,"from","","",173,{"inputs":[{"name":"itemfn"}],"output":{"name":"item"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"itemmod"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"self"},{"name":"itemmod"}],"output":{"name":"bool"}}],[11,"hash","","",103,null],[11,"from","","",173,{"inputs":[{"name":"itemmod"}],"output":{"name":"item"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",99,{"inputs":[{"name":"self"},{"name":"itemforeignmod"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"self"},{"name":"itemforeignmod"}],"output":{"name":"bool"}}],[11,"hash","","",99,null],[11,"from","","",173,{"inputs":[{"name":"itemforeignmod"}],"output":{"name":"item"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"itemtype"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"self"},{"name":"itemtype"}],"output":{"name":"bool"}}],[11,"hash","","",107,null],[11,"from","","",173,{"inputs":[{"name":"itemtype"}],"output":{"name":"item"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",105,{"inputs":[{"name":"self"},{"name":"itemstruct"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"self"},{"name":"itemstruct"}],"output":{"name":"bool"}}],[11,"hash","","",105,null],[11,"from","","",173,{"inputs":[{"name":"itemstruct"}],"output":{"name":"item"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"itemenum"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"self"},{"name":"itemenum"}],"output":{"name":"bool"}}],[11,"hash","","",96,null],[11,"from","","",173,{"inputs":[{"name":"itemenum"}],"output":{"name":"item"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"itemunion"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"self"},{"name":"itemunion"}],"output":{"name":"bool"}}],[11,"hash","","",108,null],[11,"from","","",173,{"inputs":[{"name":"itemunion"}],"output":{"name":"item"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"itemtrait"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"self"},{"name":"itemtrait"}],"output":{"name":"bool"}}],[11,"hash","","",106,null],[11,"from","","",173,{"inputs":[{"name":"itemtrait"}],"output":{"name":"item"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",100,{"inputs":[{"name":"self"},{"name":"itemimpl"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"self"},{"name":"itemimpl"}],"output":{"name":"bool"}}],[11,"hash","","",100,null],[11,"from","","",173,{"inputs":[{"name":"itemimpl"}],"output":{"name":"item"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"itemmacro"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"self"},{"name":"itemmacro"}],"output":{"name":"bool"}}],[11,"hash","","",101,null],[11,"from","","",173,{"inputs":[{"name":"itemmacro"}],"output":{"name":"item"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",173,{"inputs":[{"name":"itemmacro2"}],"output":{"name":"item"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",173,{"inputs":[{"name":"itemverbatim"}],"output":{"name":"item"}}],[11,"to_tokens","","",173,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",102,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",110,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",175,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",175,{"inputs":[{"name":"self"},{"name":"usetree"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"self"},{"name":"usetree"}],"output":{"name":"bool"}}],[11,"hash","","",175,null],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",119,{"inputs":[{"name":"self"},{"name":"usepath"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"self"},{"name":"usepath"}],"output":{"name":"bool"}}],[11,"hash","","",119,null],[11,"from","","",175,{"inputs":[{"name":"usepath"}],"output":{"name":"usetree"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",117,{"inputs":[{"name":"self"},{"name":"useglob"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"self"},{"name":"useglob"}],"output":{"name":"bool"}}],[11,"hash","","",117,null],[11,"from","","",175,{"inputs":[{"name":"useglob"}],"output":{"name":"usetree"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"uselist"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"self"},{"name":"uselist"}],"output":{"name":"bool"}}],[11,"hash","","",118,null],[11,"from","","",175,{"inputs":[{"name":"uselist"}],"output":{"name":"usetree"}}],[11,"to_tokens","","",175,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",171,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",171,{"inputs":[{"name":"self"},{"name":"foreignitem"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"self"},{"name":"foreignitem"}],"output":{"name":"bool"}}],[11,"hash","","",171,null],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"foreignitemfn"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"foreignitemfn"}],"output":{"name":"bool"}}],[11,"hash","","",86,null],[11,"from","","",171,{"inputs":[{"name":"foreignitemfn"}],"output":{"name":"foreignitem"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"foreignitemstatic"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"self"},{"name":"foreignitemstatic"}],"output":{"name":"bool"}}],[11,"hash","","",87,null],[11,"from","","",171,{"inputs":[{"name":"foreignitemstatic"}],"output":{"name":"foreignitem"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"foreignitemtype"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"self"},{"name":"foreignitemtype"}],"output":{"name":"bool"}}],[11,"hash","","",88,null],[11,"from","","",171,{"inputs":[{"name":"foreignitemtype"}],"output":{"name":"foreignitem"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",171,{"inputs":[{"name":"foreignitemverbatim"}],"output":{"name":"foreignitem"}}],[11,"to_tokens","","",171,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"eq","","",89,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",89,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",174,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",174,{"inputs":[{"name":"self"},{"name":"traititem"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"self"},{"name":"traititem"}],"output":{"name":"bool"}}],[11,"hash","","",174,null],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",112,{"inputs":[{"name":"self"},{"name":"traititemconst"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"self"},{"name":"traititemconst"}],"output":{"name":"bool"}}],[11,"hash","","",112,null],[11,"from","","",174,{"inputs":[{"name":"traititemconst"}],"output":{"name":"traititem"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"traititemmethod"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"self"},{"name":"traititemmethod"}],"output":{"name":"bool"}}],[11,"hash","","",114,null],[11,"from","","",174,{"inputs":[{"name":"traititemmethod"}],"output":{"name":"traititem"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",115,{"inputs":[{"name":"self"},{"name":"traititemtype"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"self"},{"name":"traititemtype"}],"output":{"name":"bool"}}],[11,"hash","","",115,null],[11,"from","","",174,{"inputs":[{"name":"traititemtype"}],"output":{"name":"traititem"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"traititemmacro"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"self"},{"name":"traititemmacro"}],"output":{"name":"bool"}}],[11,"hash","","",113,null],[11,"from","","",174,{"inputs":[{"name":"traititemmacro"}],"output":{"name":"traititem"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",174,{"inputs":[{"name":"traititemverbatim"}],"output":{"name":"traititem"}}],[11,"to_tokens","","",174,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"eq","","",116,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",116,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",172,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",172,{"inputs":[{"name":"self"},{"name":"implitem"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"self"},{"name":"implitem"}],"output":{"name":"bool"}}],[11,"hash","","",172,null],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"implitemconst"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"self"},{"name":"implitemconst"}],"output":{"name":"bool"}}],[11,"hash","","",90,null],[11,"from","","",172,{"inputs":[{"name":"implitemconst"}],"output":{"name":"implitem"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",92,{"inputs":[{"name":"self"},{"name":"implitemmethod"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"self"},{"name":"implitemmethod"}],"output":{"name":"bool"}}],[11,"hash","","",92,null],[11,"from","","",172,{"inputs":[{"name":"implitemmethod"}],"output":{"name":"implitem"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"implitemtype"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"self"},{"name":"implitemtype"}],"output":{"name":"bool"}}],[11,"hash","","",93,null],[11,"from","","",172,{"inputs":[{"name":"implitemtype"}],"output":{"name":"implitem"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"implitemmacro"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"self"},{"name":"implitemmacro"}],"output":{"name":"bool"}}],[11,"hash","","",91,null],[11,"from","","",172,{"inputs":[{"name":"implitemmacro"}],"output":{"name":"implitem"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",172,{"inputs":[{"name":"implitemverbatim"}],"output":{"name":"implitem"}}],[11,"to_tokens","","",172,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",94,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"methodsig"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"self"},{"name":"methodsig"}],"output":{"name":"bool"}}],[11,"hash","","",111,null],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"fndecl"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"self"},{"name":"fndecl"}],"output":{"name":"bool"}}],[11,"hash","","",85,null],[11,"fmt","","",170,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",170,{"inputs":[{"name":"self"},{"name":"fnarg"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"self"},{"name":"fnarg"}],"output":{"name":"bool"}}],[11,"hash","","",170,null],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"argselfref"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"self"},{"name":"argselfref"}],"output":{"name":"bool"}}],[11,"hash","","",84,null],[11,"from","","",170,{"inputs":[{"name":"argselfref"}],"output":{"name":"fnarg"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"self"},{"name":"argself"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"self"},{"name":"argself"}],"output":{"name":"bool"}}],[11,"hash","","",83,null],[11,"from","","",170,{"inputs":[{"name":"argself"}],"output":{"name":"fnarg"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"self"},{"name":"argcaptured"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"self"},{"name":"argcaptured"}],"output":{"name":"bool"}}],[11,"hash","","",82,null],[11,"from","","",170,{"inputs":[{"name":"argcaptured"}],"output":{"name":"fnarg"}}],[11,"from","","",170,{"inputs":[{"name":"pat"}],"output":{"name":"fnarg"}}],[11,"from","","",170,{"inputs":[{"name":"type"}],"output":{"name":"fnarg"}}],[11,"to_tokens","","",170,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"parse","","",120,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",120,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",120,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",120,{"inputs":[{"name":"self"},{"name":"file"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"self"},{"name":"file"}],"output":{"name":"bool"}}],[11,"hash","","",120,null],[11,"parse","","",121,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",121,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",121,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"lifetime"}}],[11,"new","","",121,{"inputs":[{"name":"term"},{"name":"span"}],"output":{"name":"self"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",121,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",121,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",121,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"ordering"}}],[11,"hash","","",121,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"parse","","",178,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",178,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",128,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",128,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",124,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",124,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",123,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",123,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",125,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",125,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",127,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",127,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",126,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",126,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",122,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",122,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",128,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",124,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",123,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",125,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",127,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",126,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",122,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",129,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",178,{"inputs":[{"name":"literal"},{"name":"span"}],"output":{"name":"self"}}],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",178,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"hash","","",178,null],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",178,{"inputs":[{"name":"litstr"}],"output":{"name":"lit"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",178,{"inputs":[{"name":"litbytestr"}],"output":{"name":"lit"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",178,{"inputs":[{"name":"litbyte"}],"output":{"name":"lit"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",178,{"inputs":[{"name":"litchar"}],"output":{"name":"lit"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",178,{"inputs":[{"name":"litint"}],"output":{"name":"lit"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",178,{"inputs":[{"name":"litfloat"}],"output":{"name":"lit"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",178,{"inputs":[{"name":"litbool"}],"output":{"name":"lit"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",178,{"inputs":[{"name":"litverbatim"}],"output":{"name":"lit"}}],[11,"to_tokens","","",178,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"new","","",128,{"inputs":[{"name":"str"},{"name":"span"}],"output":{"name":"self"}}],[11,"value","","",128,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"parse","","Parse a syntax tree node from the content of this string literal.",128,{"inputs":[{"name":"self"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"new","","",124,null],[11,"value","","",124,{"inputs":[{"name":"self"}],"output":{"generics":["u8"],"name":"vec"}}],[11,"new","","",123,{"inputs":[{"name":"u8"},{"name":"span"}],"output":{"name":"self"}}],[11,"value","","",123,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"new","","",125,{"inputs":[{"name":"char"},{"name":"span"}],"output":{"name":"self"}}],[11,"value","","",125,{"inputs":[{"name":"self"}],"output":{"name":"char"}}],[11,"new","","",127,{"inputs":[{"name":"u64"},{"name":"intsuffix"},{"name":"span"}],"output":{"name":"self"}}],[11,"value","","",127,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"suffix","","",127,{"inputs":[{"name":"self"}],"output":{"name":"intsuffix"}}],[11,"new","","",126,{"inputs":[{"name":"f64"},{"name":"floatsuffix"},{"name":"span"}],"output":{"name":"self"}}],[11,"value","","",126,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"suffix","","",126,{"inputs":[{"name":"self"}],"output":{"name":"floatsuffix"}}],[11,"eq","","",128,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",128,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",124,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",124,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",123,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",123,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",125,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",127,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",127,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",126,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",126,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",122,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",122,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",129,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",129,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",179,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",179,{"inputs":[{"name":"self"},{"name":"strstyle"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"self"},{"name":"strstyle"}],"output":{"name":"bool"}}],[11,"hash","","",179,null],[11,"fmt","","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",177,{"inputs":[{"name":"self"},{"name":"intsuffix"}],"output":{"name":"bool"}}],[11,"hash","","",177,null],[11,"fmt","","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",176,{"inputs":[{"name":"self"},{"name":"floatsuffix"}],"output":{"name":"bool"}}],[11,"hash","","",176,null],[11,"parse","","",130,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",130,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",130,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",180,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",180,{"inputs":[{"name":"self"},{"name":"macrodelimiter"}],"output":{"name":"bool"}}],[11,"ne","","",180,{"inputs":[{"name":"self"},{"name":"macrodelimiter"}],"output":{"name":"bool"}}],[11,"hash","","",180,null],[11,"eq","","",130,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",130,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"parse_binop","","",181,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_assign_op","","",181,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",182,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",182,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",181,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",182,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",181,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",181,{"inputs":[{"name":"self"},{"name":"binop"}],"output":{"name":"bool"}}],[11,"ne","","",181,{"inputs":[{"name":"self"},{"name":"binop"}],"output":{"name":"bool"}}],[11,"hash","","",181,null],[11,"fmt","","",182,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",182,{"inputs":[{"name":"self"},{"name":"unop"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"self"},{"name":"unop"}],"output":{"name":"bool"}}],[11,"hash","","",182,null],[11,"parse","","",185,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",185,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"without_plus","","",185,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",144,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",144,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",133,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",133,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",142,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",142,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",143,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",143,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",134,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",134,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",139,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",139,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",137,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",137,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",146,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",146,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",138,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",138,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",141,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",141,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",184,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",184,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",145,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",145,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"without_plus","","",145,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse","","",136,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",136,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",135,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",135,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",140,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",140,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",132,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",132,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",183,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",183,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",131,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",131,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"to_tokens","","",144,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",133,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",142,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",143,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",134,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",139,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",146,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",141,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",145,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",136,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",135,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",140,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",137,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",138,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",147,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",184,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",132,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",183,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",131,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",185,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",185,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"hash","","",185,null],[11,"fmt","","",144,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",144,{"inputs":[{"name":"self"},{"name":"typeslice"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"self"},{"name":"typeslice"}],"output":{"name":"bool"}}],[11,"hash","","",144,null],[11,"from","","",185,{"inputs":[{"name":"typeslice"}],"output":{"name":"type"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",133,{"inputs":[{"name":"self"},{"name":"typearray"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"self"},{"name":"typearray"}],"output":{"name":"bool"}}],[11,"hash","","",133,null],[11,"from","","",185,{"inputs":[{"name":"typearray"}],"output":{"name":"type"}}],[11,"fmt","","",142,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",142,{"inputs":[{"name":"self"},{"name":"typeptr"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"self"},{"name":"typeptr"}],"output":{"name":"bool"}}],[11,"hash","","",142,null],[11,"from","","",185,{"inputs":[{"name":"typeptr"}],"output":{"name":"type"}}],[11,"fmt","","",143,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",143,{"inputs":[{"name":"self"},{"name":"typereference"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"self"},{"name":"typereference"}],"output":{"name":"bool"}}],[11,"hash","","",143,null],[11,"from","","",185,{"inputs":[{"name":"typereference"}],"output":{"name":"type"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",134,{"inputs":[{"name":"self"},{"name":"typebarefn"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"self"},{"name":"typebarefn"}],"output":{"name":"bool"}}],[11,"hash","","",134,null],[11,"from","","",185,{"inputs":[{"name":"typebarefn"}],"output":{"name":"type"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",139,{"inputs":[{"name":"self"},{"name":"typenever"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"self"},{"name":"typenever"}],"output":{"name":"bool"}}],[11,"hash","","",139,null],[11,"from","","",185,{"inputs":[{"name":"typenever"}],"output":{"name":"type"}}],[11,"fmt","","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",146,{"inputs":[{"name":"self"},{"name":"typetuple"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"self"},{"name":"typetuple"}],"output":{"name":"bool"}}],[11,"hash","","",146,null],[11,"from","","",185,{"inputs":[{"name":"typetuple"}],"output":{"name":"type"}}],[11,"fmt","","",141,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",141,{"inputs":[{"name":"self"},{"name":"typepath"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"self"},{"name":"typepath"}],"output":{"name":"bool"}}],[11,"hash","","",141,null],[11,"from","","",185,{"inputs":[{"name":"typepath"}],"output":{"name":"type"}}],[11,"fmt","","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",145,{"inputs":[{"name":"self"},{"name":"typetraitobject"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"self"},{"name":"typetraitobject"}],"output":{"name":"bool"}}],[11,"hash","","",145,null],[11,"from","","",185,{"inputs":[{"name":"typetraitobject"}],"output":{"name":"type"}}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",136,{"inputs":[{"name":"self"},{"name":"typeimpltrait"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"self"},{"name":"typeimpltrait"}],"output":{"name":"bool"}}],[11,"hash","","",136,null],[11,"from","","",185,{"inputs":[{"name":"typeimpltrait"}],"output":{"name":"type"}}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",140,{"inputs":[{"name":"self"},{"name":"typeparen"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"self"},{"name":"typeparen"}],"output":{"name":"bool"}}],[11,"hash","","",140,null],[11,"from","","",185,{"inputs":[{"name":"typeparen"}],"output":{"name":"type"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",135,{"inputs":[{"name":"self"},{"name":"typegroup"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"self"},{"name":"typegroup"}],"output":{"name":"bool"}}],[11,"hash","","",135,null],[11,"from","","",185,{"inputs":[{"name":"typegroup"}],"output":{"name":"type"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",137,{"inputs":[{"name":"self"},{"name":"typeinfer"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"self"},{"name":"typeinfer"}],"output":{"name":"bool"}}],[11,"hash","","",137,null],[11,"from","","",185,{"inputs":[{"name":"typeinfer"}],"output":{"name":"type"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",138,{"inputs":[{"name":"self"},{"name":"typemacro"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"self"},{"name":"typemacro"}],"output":{"name":"bool"}}],[11,"hash","","",138,null],[11,"from","","",185,{"inputs":[{"name":"typemacro"}],"output":{"name":"type"}}],[11,"fmt","","",147,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",185,{"inputs":[{"name":"typeverbatim"}],"output":{"name":"type"}}],[11,"to_tokens","","",185,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"eq","","",147,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",147,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",131,{"inputs":[{"name":"self"},{"name":"abi"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"self"},{"name":"abi"}],"output":{"name":"bool"}}],[11,"hash","","",131,null],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",132,{"inputs":[{"name":"self"},{"name":"barefnarg"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"self"},{"name":"barefnarg"}],"output":{"name":"bool"}}],[11,"hash","","",132,null],[11,"fmt","","",183,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",183,{"inputs":[{"name":"self"},{"name":"barefnargname"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"self"},{"name":"barefnargname"}],"output":{"name":"bool"}}],[11,"hash","","",183,null],[11,"fmt","","",184,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",184,{"inputs":[{"name":"self"},{"name":"returntype"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"self"},{"name":"returntype"}],"output":{"name":"bool"}}],[11,"hash","","",184,null],[11,"parse","","",151,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",151,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",186,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",186,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",148,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",148,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",150,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",150,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",152,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",152,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse","","",149,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",149,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[11,"parse_mod_style","","",151,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"to_tokens","","",151,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",152,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",187,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",186,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",148,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",149,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",150,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",154,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"fmt","","",151,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",151,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"bool"}}],[11,"hash","","",151,null],[11,"global","","",151,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",154,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",154,{"inputs":[{"name":"self"},{"name":"pathtokens"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"self"},{"name":"pathtokens"}],"output":{"name":"bool"}}],[11,"hash","","",154,null],[11,"from","","",151,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",152,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",152,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"hash","","",152,null],[11,"from","","",152,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",187,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",187,{"inputs":[{"name":"self"},{"name":"patharguments"}],"output":{"name":"bool"}}],[11,"ne","","",187,{"inputs":[{"name":"self"},{"name":"patharguments"}],"output":{"name":"bool"}}],[11,"hash","","",187,null],[11,"default","","",187,{"inputs":[],"output":{"name":"self"}}],[11,"is_empty","","",187,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",186,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",186,{"inputs":[{"name":"self"},{"name":"genericargument"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"self"},{"name":"genericargument"}],"output":{"name":"bool"}}],[11,"hash","","",186,null],[11,"fmt","","",148,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",148,{"inputs":[{"name":"self"},{"name":"anglebracketedgenericarguments"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"self"},{"name":"anglebracketedgenericarguments"}],"output":{"name":"bool"}}],[11,"hash","","",148,null],[11,"fmt","","",149,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",149,{"inputs":[{"name":"self"},{"name":"binding"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"self"},{"name":"binding"}],"output":{"name":"bool"}}],[11,"hash","","",149,null],[11,"fmt","","",150,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",150,{"inputs":[{"name":"self"},{"name":"parenthesizedgenericarguments"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"self"},{"name":"parenthesizedgenericarguments"}],"output":{"name":"bool"}}],[11,"hash","","",150,null],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",153,{"inputs":[{"name":"self"},{"name":"qself"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"self"},{"name":"qself"}],"output":{"name":"bool"}}],[11,"hash","","",153,null],[0,"buffer","","A stably addressed token buffer supporting efficient traversal based on a cheaply copyable cursor.",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times, unlike `TokenStream` which requires a deep copy in order to traverse more than once.",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",282,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenbuffer"}}],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",282,{"inputs":[{"name":"tokenstream"}],"output":{"name":"tokenbuffer"}}],[11,"begin","","Creates a cursor referencing the first token in the buffer and able to traverse until the end of the buffer.",282,{"inputs":[{"name":"self"}],"output":{"name":"cursor"}}],[11,"clone","","",283,{"inputs":[{"name":"self"}],"output":{"name":"cursor"}}],[11,"eq","","",283,{"inputs":[{"name":"self"},{"name":"cursor"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"self"},{"name":"cursor"}],"output":{"name":"bool"}}],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",283,{"inputs":[],"output":{"name":"self"}}],[11,"eof","","Checks whether the cursor is currently pointing at the end of its valid scope.",283,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"group","","If the cursor is pointing at a `Group` with the given delimiter, returns a cursor into that group and one pointing to the next `TokenTree`.",283,{"inputs":[{"name":"self"},{"name":"delimiter"}],"output":{"name":"option"}}],[11,"term","","If the cursor is pointing at a `Term`, returns it along with a cursor pointing at the next `TokenTree`.",283,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"op","","If the cursor is pointing at an `Op`, returns it along with a cursor pointing at the next `TokenTree`.",283,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"literal","","If the cursor is pointing at a `Literal`, return it along with a cursor pointing at the next `TokenTree`.",283,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"token_stream","","Copies all remaining tokens visible from this cursor into a `TokenStream`.",283,{"inputs":[{"name":"self"}],"output":{"name":"tokenstream"}}],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it along with a cursor pointing at the next `TokenTree`.",283,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"span","","Returns the `Span` of the current token, or `Span::call_site()` if this cursor points to eof.",283,{"inputs":[{"name":"self"}],"output":{"name":"span"}}],[0,"synom","syn","Parsing interface for parsing a token stream into a syntax tree node.",null,null],[3,"ParseError","syn::synom","Error returned when a `Synom` parser cannot parse the input tokens.",null,null],[6,"PResult","","The result of a `Synom` parser.",null,null],[8,"Synom","","Parsing interface implemented by all types that can be parsed in a default way from a token stream.",null,null],[10,"parse","","",284,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"description","","",284,{"inputs":[],"output":{"generics":["str"],"name":"option"}}],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax tree node.",null,null],[16,"Output","","",285,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",285,{"inputs":[{"name":"self"},{"name":"tokenstream"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse","","Parse tokens of source code into the chosen syntax tree node.",285,{"inputs":[{"name":"self"},{"name":"tokenstream"}],"output":{"generics":["parseerror"],"name":"result"}}],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",285,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["parseerror"],"name":"result"}}],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by punctuation.",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T` separated by punctuation of type `P`.",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its trailing punctuation of type `P` if any.",null,null],[13,"Punctuated","","",286,null],[13,"End","","",286,null],[11,"to_tokens","","",287,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"to_tokens","","",286,{"inputs":[{"name":"self"},{"name":"tokens"}],"output":null}],[11,"eq","","",287,{"inputs":[{"name":"self"},{"name":"punctuated"}],"output":{"name":"bool"}}],[11,"ne","","",287,{"inputs":[{"name":"self"},{"name":"punctuated"}],"output":{"name":"bool"}}],[11,"hash","","",287,null],[11,"new","","Creates an empty punctuated sequence.",287,{"inputs":[],"output":{"name":"punctuated"}}],[11,"is_empty","","Determines whether this punctuated sequence is empty, meaning it contains no syntax tree nodes or punctuation.",287,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"len","","Returns the number of syntax tree nodes in this punctuated sequence.",287,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"first","","Borrows the first punctuated pair in this sequence.",287,{"inputs":[{"name":"self"}],"output":{"generics":["pair"],"name":"option"}}],[11,"last","","Borrows the last punctuated pair in this sequence.",287,{"inputs":[{"name":"self"}],"output":{"generics":["pair"],"name":"option"}}],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",287,{"inputs":[{"name":"self"}],"output":{"generics":["pair"],"name":"option"}}],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of type `&T`.",287,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree nodes of type `&mut T`.",287,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"pairs","","Returns an iterator over the contents of this sequence as borrowed punctuated pairs.",287,{"inputs":[{"name":"self"}],"output":{"name":"pairs"}}],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as mutably borrowed punctuated pairs.",287,{"inputs":[{"name":"self"}],"output":{"name":"pairsmut"}}],[11,"into_pairs","","Returns an iterator over the contents of this sequence as owned punctuated pairs.",287,{"inputs":[{"name":"self"}],"output":{"name":"intopairs"}}],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated sequence. The sequence must previously have a trailing punctuation.",287,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"push_punct","","Appends a trailing punctuation onto the end of this punctuated sequence. The sequence must be non-empty and must not already have trailing punctuation.",287,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[11,"pop","","Removes the last punctuated pair from this sequence, or `None` if the sequence is empty.",287,{"inputs":[{"name":"self"}],"output":{"generics":["pair"],"name":"option"}}],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a trailing punctuation.",287,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it has a trailing punctuation.",287,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"push","","Appends a syntax tree node onto the end of this punctuated sequence.",287,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"insert","","Inserts an element at position `index`.",287,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"t"}],"output":null}],[11,"fmt","","",287,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",287,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"extend","","",287,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"from_iter","","",287,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"extend","","",287,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"into_iter","","",287,null],[11,"default","","",287,{"inputs":[],"output":{"name":"self"}}],[11,"next","","",288,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",289,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",290,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",291,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",292,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",293,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, discarding the following punctuation.",286,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"value","","Borrows the syntax tree node from this punctuated pair.",286,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated pair.",286,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"punct","","Borrows the punctuation from this punctuated pair, unless this pair is the final one and there is no trailing punctuation.",286,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"new","","Creates a punctuated pair out of a syntax tree node and an optional following punctuation.",286,{"inputs":[{"name":"t"},{"name":"option"}],"output":{"name":"self"}}],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree node and optional following punctuation.",286,null],[11,"index","","",287,null],[11,"index_mut","","",287,null],[11,"parse_separated","","Parse zero or more syntax tree nodes with punctuation in between and no trailing punctuation.",287,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_separated_nonempty","","Parse one or more syntax tree nodes with punctuation in bewteen and no trailing punctuation. allowing trailing punctuation.",287,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_terminated","","Parse zero or more syntax tree nodes with punctuation in between and optional trailing punctuation.",287,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_terminated_nonempty","","Parse one or more syntax tree nodes with punctuation in between and optional trailing punctuation.",287,{"inputs":[{"name":"cursor"}],"output":{"name":"presult"}}],[11,"parse_separated_with","","Parse zero or more syntax tree nodes using the given parser with punctuation in between and no trailing punctuation.",287,null],[11,"parse_separated_nonempty_with","","Parse one or more syntax tree nodes using the given parser with punctuation in between and no trailing punctuation.",287,null],[11,"parse_terminated_with","","Parse zero or more syntax tree nodes using the given parser with punctuation in between and optional trailing punctuation.",287,null],[11,"parse_terminated_nonempty_with","","Parse one or more syntax tree nodes using the given parser with punctuation in between and optional trailing punctuation.",287,null],[0,"spanned","syn","A trait that can provide the `Span` of the complete contents of a syntax tree node.",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete contents of a syntax tree node.",null,null],[10,"span","","Returns a `Span` covering the complete contents of this syntax tree node, or [`Span::call_site()`] if this node is empty.",294,{"inputs":[{"name":"self"}],"output":{"name":"span"}}],[0,"fold","syn","Syntax tree traversal to transform the nodes of an owned syntax tree.",null,null],[5,"fold_ident","syn::fold","",null,{"inputs":[{"name":"v"},{"name":"ident"}],"output":{"name":"ident"}}],[5,"fold_lifetime","","",null,{"inputs":[{"name":"v"},{"name":"lifetime"}],"output":{"name":"lifetime"}}],[5,"fold_lit_byte","","",null,{"inputs":[{"name":"v"},{"name":"litbyte"}],"output":{"name":"litbyte"}}],[5,"fold_lit_byte_str","","",null,{"inputs":[{"name":"v"},{"name":"litbytestr"}],"output":{"name":"litbytestr"}}],[5,"fold_lit_char","","",null,{"inputs":[{"name":"v"},{"name":"litchar"}],"output":{"name":"litchar"}}],[5,"fold_lit_float","","",null,{"inputs":[{"name":"v"},{"name":"litfloat"}],"output":{"name":"litfloat"}}],[5,"fold_lit_int","","",null,{"inputs":[{"name":"v"},{"name":"litint"}],"output":{"name":"litint"}}],[5,"fold_lit_str","","",null,{"inputs":[{"name":"v"},{"name":"litstr"}],"output":{"name":"litstr"}}],[5,"fold_abi","","",null,{"inputs":[{"name":"v"},{"name":"abi"}],"output":{"name":"abi"}}],[5,"fold_angle_bracketed_generic_arguments","","",null,{"inputs":[{"name":"v"},{"name":"anglebracketedgenericarguments"}],"output":{"name":"anglebracketedgenericarguments"}}],[5,"fold_arg_captured","","",null,{"inputs":[{"name":"v"},{"name":"argcaptured"}],"output":{"name":"argcaptured"}}],[5,"fold_arg_self","","",null,{"inputs":[{"name":"v"},{"name":"argself"}],"output":{"name":"argself"}}],[5,"fold_arg_self_ref","","",null,{"inputs":[{"name":"v"},{"name":"argselfref"}],"output":{"name":"argselfref"}}],[5,"fold_arm","","",null,{"inputs":[{"name":"v"},{"name":"arm"}],"output":{"name":"arm"}}],[5,"fold_attr_style","","",null,{"inputs":[{"name":"v"},{"name":"attrstyle"}],"output":{"name":"attrstyle"}}],[5,"fold_attribute","","",null,{"inputs":[{"name":"v"},{"name":"attribute"}],"output":{"name":"attribute"}}],[5,"fold_bare_fn_arg","","",null,{"inputs":[{"name":"v"},{"name":"barefnarg"}],"output":{"name":"barefnarg"}}],[5,"fold_bare_fn_arg_name","","",null,{"inputs":[{"name":"v"},{"name":"barefnargname"}],"output":{"name":"barefnargname"}}],[5,"fold_bin_op","","",null,{"inputs":[{"name":"v"},{"name":"binop"}],"output":{"name":"binop"}}],[5,"fold_binding","","",null,{"inputs":[{"name":"v"},{"name":"binding"}],"output":{"name":"binding"}}],[5,"fold_block","","",null,{"inputs":[{"name":"v"},{"name":"block"}],"output":{"name":"block"}}],[5,"fold_bound_lifetimes","","",null,{"inputs":[{"name":"v"},{"name":"boundlifetimes"}],"output":{"name":"boundlifetimes"}}],[5,"fold_const_param","","",null,{"inputs":[{"name":"v"},{"name":"constparam"}],"output":{"name":"constparam"}}],[5,"fold_expr","","",null,{"inputs":[{"name":"v"},{"name":"expr"}],"output":{"name":"expr"}}],[5,"fold_expr_addr_of","","",null,{"inputs":[{"name":"v"},{"name":"expraddrof"}],"output":{"name":"expraddrof"}}],[5,"fold_expr_array","","",null,{"inputs":[{"name":"v"},{"name":"exprarray"}],"output":{"name":"exprarray"}}],[5,"fold_expr_assign","","",null,{"inputs":[{"name":"v"},{"name":"exprassign"}],"output":{"name":"exprassign"}}],[5,"fold_expr_assign_op","","",null,{"inputs":[{"name":"v"},{"name":"exprassignop"}],"output":{"name":"exprassignop"}}],[5,"fold_expr_binary","","",null,{"inputs":[{"name":"v"},{"name":"exprbinary"}],"output":{"name":"exprbinary"}}],[5,"fold_expr_block","","",null,{"inputs":[{"name":"v"},{"name":"exprblock"}],"output":{"name":"exprblock"}}],[5,"fold_expr_box","","",null,{"inputs":[{"name":"v"},{"name":"exprbox"}],"output":{"name":"exprbox"}}],[5,"fold_expr_break","","",null,{"inputs":[{"name":"v"},{"name":"exprbreak"}],"output":{"name":"exprbreak"}}],[5,"fold_expr_call","","",null,{"inputs":[{"name":"v"},{"name":"exprcall"}],"output":{"name":"exprcall"}}],[5,"fold_expr_cast","","",null,{"inputs":[{"name":"v"},{"name":"exprcast"}],"output":{"name":"exprcast"}}],[5,"fold_expr_catch","","",null,{"inputs":[{"name":"v"},{"name":"exprcatch"}],"output":{"name":"exprcatch"}}],[5,"fold_expr_closure","","",null,{"inputs":[{"name":"v"},{"name":"exprclosure"}],"output":{"name":"exprclosure"}}],[5,"fold_expr_continue","","",null,{"inputs":[{"name":"v"},{"name":"exprcontinue"}],"output":{"name":"exprcontinue"}}],[5,"fold_expr_field","","",null,{"inputs":[{"name":"v"},{"name":"exprfield"}],"output":{"name":"exprfield"}}],[5,"fold_expr_for_loop","","",null,{"inputs":[{"name":"v"},{"name":"exprforloop"}],"output":{"name":"exprforloop"}}],[5,"fold_expr_group","","",null,{"inputs":[{"name":"v"},{"name":"exprgroup"}],"output":{"name":"exprgroup"}}],[5,"fold_expr_if","","",null,{"inputs":[{"name":"v"},{"name":"exprif"}],"output":{"name":"exprif"}}],[5,"fold_expr_if_let","","",null,{"inputs":[{"name":"v"},{"name":"expriflet"}],"output":{"name":"expriflet"}}],[5,"fold_expr_in_place","","",null,{"inputs":[{"name":"v"},{"name":"exprinplace"}],"output":{"name":"exprinplace"}}],[5,"fold_expr_index","","",null,{"inputs":[{"name":"v"},{"name":"exprindex"}],"output":{"name":"exprindex"}}],[5,"fold_expr_lit","","",null,{"inputs":[{"name":"v"},{"name":"exprlit"}],"output":{"name":"exprlit"}}],[5,"fold_expr_loop","","",null,{"inputs":[{"name":"v"},{"name":"exprloop"}],"output":{"name":"exprloop"}}],[5,"fold_expr_macro","","",null,{"inputs":[{"name":"v"},{"name":"exprmacro"}],"output":{"name":"exprmacro"}}],[5,"fold_expr_match","","",null,{"inputs":[{"name":"v"},{"name":"exprmatch"}],"output":{"name":"exprmatch"}}],[5,"fold_expr_method_call","","",null,{"inputs":[{"name":"v"},{"name":"exprmethodcall"}],"output":{"name":"exprmethodcall"}}],[5,"fold_expr_paren","","",null,{"inputs":[{"name":"v"},{"name":"exprparen"}],"output":{"name":"exprparen"}}],[5,"fold_expr_path","","",null,{"inputs":[{"name":"v"},{"name":"exprpath"}],"output":{"name":"exprpath"}}],[5,"fold_expr_range","","",null,{"inputs":[{"name":"v"},{"name":"exprrange"}],"output":{"name":"exprrange"}}],[5,"fold_expr_repeat","","",null,{"inputs":[{"name":"v"},{"name":"exprrepeat"}],"output":{"name":"exprrepeat"}}],[5,"fold_expr_return","","",null,{"inputs":[{"name":"v"},{"name":"exprreturn"}],"output":{"name":"exprreturn"}}],[5,"fold_expr_struct","","",null,{"inputs":[{"name":"v"},{"name":"exprstruct"}],"output":{"name":"exprstruct"}}],[5,"fold_expr_try","","",null,{"inputs":[{"name":"v"},{"name":"exprtry"}],"output":{"name":"exprtry"}}],[5,"fold_expr_tuple","","",null,{"inputs":[{"name":"v"},{"name":"exprtuple"}],"output":{"name":"exprtuple"}}],[5,"fold_expr_type","","",null,{"inputs":[{"name":"v"},{"name":"exprtype"}],"output":{"name":"exprtype"}}],[5,"fold_expr_unary","","",null,{"inputs":[{"name":"v"},{"name":"exprunary"}],"output":{"name":"exprunary"}}],[5,"fold_expr_unsafe","","",null,{"inputs":[{"name":"v"},{"name":"exprunsafe"}],"output":{"name":"exprunsafe"}}],[5,"fold_expr_verbatim","","",null,{"inputs":[{"name":"v"},{"name":"exprverbatim"}],"output":{"name":"exprverbatim"}}],[5,"fold_expr_while","","",null,{"inputs":[{"name":"v"},{"name":"exprwhile"}],"output":{"name":"exprwhile"}}],[5,"fold_expr_while_let","","",null,{"inputs":[{"name":"v"},{"name":"exprwhilelet"}],"output":{"name":"exprwhilelet"}}],[5,"fold_expr_yield","","",null,{"inputs":[{"name":"v"},{"name":"expryield"}],"output":{"name":"expryield"}}],[5,"fold_field","","",null,{"inputs":[{"name":"v"},{"name":"field"}],"output":{"name":"field"}}],[5,"fold_field_pat","","",null,{"inputs":[{"name":"v"},{"name":"fieldpat"}],"output":{"name":"fieldpat"}}],[5,"fold_field_value","","",null,{"inputs":[{"name":"v"},{"name":"fieldvalue"}],"output":{"name":"fieldvalue"}}],[5,"fold_fields","","",null,{"inputs":[{"name":"v"},{"name":"fields"}],"output":{"name":"fields"}}],[5,"fold_fields_named","","",null,{"inputs":[{"name":"v"},{"name":"fieldsnamed"}],"output":{"name":"fieldsnamed"}}],[5,"fold_fields_unnamed","","",null,{"inputs":[{"name":"v"},{"name":"fieldsunnamed"}],"output":{"name":"fieldsunnamed"}}],[5,"fold_file","","",null,{"inputs":[{"name":"v"},{"name":"file"}],"output":{"name":"file"}}],[5,"fold_fn_arg","","",null,{"inputs":[{"name":"v"},{"name":"fnarg"}],"output":{"name":"fnarg"}}],[5,"fold_fn_decl","","",null,{"inputs":[{"name":"v"},{"name":"fndecl"}],"output":{"name":"fndecl"}}],[5,"fold_foreign_item","","",null,{"inputs":[{"name":"v"},{"name":"foreignitem"}],"output":{"name":"foreignitem"}}],[5,"fold_foreign_item_fn","","",null,{"inputs":[{"name":"v"},{"name":"foreignitemfn"}],"output":{"name":"foreignitemfn"}}],[5,"fold_foreign_item_static","","",null,{"inputs":[{"name":"v"},{"name":"foreignitemstatic"}],"output":{"name":"foreignitemstatic"}}],[5,"fold_foreign_item_type","","",null,{"inputs":[{"name":"v"},{"name":"foreignitemtype"}],"output":{"name":"foreignitemtype"}}],[5,"fold_foreign_item_verbatim","","",null,{"inputs":[{"name":"v"},{"name":"foreignitemverbatim"}],"output":{"name":"foreignitemverbatim"}}],[5,"fold_generic_argument","","",null,{"inputs":[{"name":"v"},{"name":"genericargument"}],"output":{"name":"genericargument"}}],[5,"fold_generic_method_argument","","",null,{"inputs":[{"name":"v"},{"name":"genericmethodargument"}],"output":{"name":"genericmethodargument"}}],[5,"fold_generic_param","","",null,{"inputs":[{"name":"v"},{"name":"genericparam"}],"output":{"name":"genericparam"}}],[5,"fold_generics","","",null,{"inputs":[{"name":"v"},{"name":"generics"}],"output":{"name":"generics"}}],[5,"fold_impl_item","","",null,{"inputs":[{"name":"v"},{"name":"implitem"}],"output":{"name":"implitem"}}],[5,"fold_impl_item_const","","",null,{"inputs":[{"name":"v"},{"name":"implitemconst"}],"output":{"name":"implitemconst"}}],[5,"fold_impl_item_macro","","",null,{"inputs":[{"name":"v"},{"name":"implitemmacro"}],"output":{"name":"implitemmacro"}}],[5,"fold_impl_item_method","","",null,{"inputs":[{"name":"v"},{"name":"implitemmethod"}],"output":{"name":"implitemmethod"}}],[5,"fold_impl_item_type","","",null,{"inputs":[{"name":"v"},{"name":"implitemtype"}],"output":{"name":"implitemtype"}}],[5,"fold_impl_item_verbatim","","",null,{"inputs":[{"name":"v"},{"name":"implitemverbatim"}],"output":{"name":"implitemverbatim"}}],[5,"fold_index","","",null,{"inputs":[{"name":"v"},{"name":"index"}],"output":{"name":"index"}}],[5,"fold_item","","",null,{"inputs":[{"name":"v"},{"name":"item"}],"output":{"name":"item"}}],[5,"fold_item_const","","",null,{"inputs":[{"name":"v"},{"name":"itemconst"}],"output":{"name":"itemconst"}}],[5,"fold_item_enum","","",null,{"inputs":[{"name":"v"},{"name":"itemenum"}],"output":{"name":"itemenum"}}],[5,"fold_item_extern_crate","","",null,{"inputs":[{"name":"v"},{"name":"itemexterncrate"}],"output":{"name":"itemexterncrate"}}],[5,"fold_item_fn","","",null,{"inputs":[{"name":"v"},{"name":"itemfn"}],"output":{"name":"itemfn"}}],[5,"fold_item_foreign_mod","","",null,{"inputs":[{"name":"v"},{"name":"itemforeignmod"}],"output":{"name":"itemforeignmod"}}],[5,"fold_item_impl","","",null,{"inputs":[{"name":"v"},{"name":"itemimpl"}],"output":{"name":"itemimpl"}}],[5,"fold_item_macro","","",null,{"inputs":[{"name":"v"},{"name":"itemmacro"}],"output":{"name":"itemmacro"}}],[5,"fold_item_macro2","","",null,{"inputs":[{"name":"v"},{"name":"itemmacro2"}],"output":{"name":"itemmacro2"}}],[5,"fold_item_mod","","",null,{"inputs":[{"name":"v"},{"name":"itemmod"}],"output":{"name":"itemmod"}}],[5,"fold_item_static","","",null,{"inputs":[{"name":"v"},{"name":"itemstatic"}],"output":{"name":"itemstatic"}}],[5,"fold_item_struct","","",null,{"inputs":[{"name":"v"},{"name":"itemstruct"}],"output":{"name":"itemstruct"}}],[5,"fold_item_trait","","",null,{"inputs":[{"name":"v"},{"name":"itemtrait"}],"output":{"name":"itemtrait"}}],[5,"fold_item_type","","",null,{"inputs":[{"name":"v"},{"name":"itemtype"}],"output":{"name":"itemtype"}}],[5,"fold_item_union","","",null,{"inputs":[{"name":"v"},{"name":"itemunion"}],"output":{"name":"itemunion"}}],[5,"fold_item_use","","",null,{"inputs":[{"name":"v"},{"name":"itemuse"}],"output":{"name":"itemuse"}}],[5,"fold_item_verbatim","","",null,{"inputs":[{"name":"v"},{"name":"itemverbatim"}],"output":{"name":"itemverbatim"}}],[5,"fold_label","","",null,{"inputs":[{"name":"v"},{"name":"label"}],"output":{"name":"label"}}],[5,"fold_lifetime_def","","",null,{"inputs":[{"name":"v"},{"name":"lifetimedef"}],"output":{"name":"lifetimedef"}}],[5,"fold_lit","","",null,{"inputs":[{"name":"v"},{"name":"lit"}],"output":{"name":"lit"}}],[5,"fold_lit_bool","","",null,{"inputs":[{"name":"v"},{"name":"litbool"}],"output":{"name":"litbool"}}],[5,"fold_lit_verbatim","","",null,{"inputs":[{"name":"v"},{"name":"litverbatim"}],"output":{"name":"litverbatim"}}],[5,"fold_local","","",null,{"inputs":[{"name":"v"},{"name":"local"}],"output":{"name":"local"}}],[5,"fold_macro","","",null,{"inputs":[{"name":"v"},{"name":"macro"}],"output":{"name":"macro"}}],[5,"fold_macro_delimiter","","",null,{"inputs":[{"name":"v"},{"name":"macrodelimiter"}],"output":{"name":"macrodelimiter"}}],[5,"fold_member","","",null,{"inputs":[{"name":"v"},{"name":"member"}],"output":{"name":"member"}}],[5,"fold_meta","","",null,{"inputs":[{"name":"v"},{"name":"meta"}],"output":{"name":"meta"}}],[5,"fold_meta_list","","",null,{"inputs":[{"name":"v"},{"name":"metalist"}],"output":{"name":"metalist"}}],[5,"fold_meta_name_value","","",null,{"inputs":[{"name":"v"},{"name":"metanamevalue"}],"output":{"name":"metanamevalue"}}],[5,"fold_method_sig","","",null,{"inputs":[{"name":"v"},{"name":"methodsig"}],"output":{"name":"methodsig"}}],[5,"fold_method_turbofish","","",null,{"inputs":[{"name":"v"},{"name":"methodturbofish"}],"output":{"name":"methodturbofish"}}],[5,"fold_nested_meta","","",null,{"inputs":[{"name":"v"},{"name":"nestedmeta"}],"output":{"name":"nestedmeta"}}],[5,"fold_parenthesized_generic_arguments","","",null,{"inputs":[{"name":"v"},{"name":"parenthesizedgenericarguments"}],"output":{"name":"parenthesizedgenericarguments"}}],[5,"fold_pat","","",null,{"inputs":[{"name":"v"},{"name":"pat"}],"output":{"name":"pat"}}],[5,"fold_pat_box","","",null,{"inputs":[{"name":"v"},{"name":"patbox"}],"output":{"name":"patbox"}}],[5,"fold_pat_ident","","",null,{"inputs":[{"name":"v"},{"name":"patident"}],"output":{"name":"patident"}}],[5,"fold_pat_lit","","",null,{"inputs":[{"name":"v"},{"name":"patlit"}],"output":{"name":"patlit"}}],[5,"fold_pat_macro","","",null,{"inputs":[{"name":"v"},{"name":"patmacro"}],"output":{"name":"patmacro"}}],[5,"fold_pat_path","","",null,{"inputs":[{"name":"v"},{"name":"patpath"}],"output":{"name":"patpath"}}],[5,"fold_pat_range","","",null,{"inputs":[{"name":"v"},{"name":"patrange"}],"output":{"name":"patrange"}}],[5,"fold_pat_ref","","",null,{"inputs":[{"name":"v"},{"name":"patref"}],"output":{"name":"patref"}}],[5,"fold_pat_slice","","",null,{"inputs":[{"name":"v"},{"name":"patslice"}],"output":{"name":"patslice"}}],[5,"fold_pat_struct","","",null,{"inputs":[{"name":"v"},{"name":"patstruct"}],"output":{"name":"patstruct"}}],[5,"fold_pat_tuple","","",null,{"inputs":[{"name":"v"},{"name":"pattuple"}],"output":{"name":"pattuple"}}],[5,"fold_pat_tuple_struct","","",null,{"inputs":[{"name":"v"},{"name":"pattuplestruct"}],"output":{"name":"pattuplestruct"}}],[5,"fold_pat_verbatim","","",null,{"inputs":[{"name":"v"},{"name":"patverbatim"}],"output":{"name":"patverbatim"}}],[5,"fold_pat_wild","","",null,{"inputs":[{"name":"v"},{"name":"patwild"}],"output":{"name":"patwild"}}],[5,"fold_path","","",null,{"inputs":[{"name":"v"},{"name":"path"}],"output":{"name":"path"}}],[5,"fold_path_arguments","","",null,{"inputs":[{"name":"v"},{"name":"patharguments"}],"output":{"name":"patharguments"}}],[5,"fold_path_segment","","",null,{"inputs":[{"name":"v"},{"name":"pathsegment"}],"output":{"name":"pathsegment"}}],[5,"fold_predicate_eq","","",null,{"inputs":[{"name":"v"},{"name":"predicateeq"}],"output":{"name":"predicateeq"}}],[5,"fold_predicate_lifetime","","",null,{"inputs":[{"name":"v"},{"name":"predicatelifetime"}],"output":{"name":"predicatelifetime"}}],[5,"fold_predicate_type","","",null,{"inputs":[{"name":"v"},{"name":"predicatetype"}],"output":{"name":"predicatetype"}}],[5,"fold_qself","","",null,{"inputs":[{"name":"v"},{"name":"qself"}],"output":{"name":"qself"}}],[5,"fold_range_limits","","",null,{"inputs":[{"name":"v"},{"name":"rangelimits"}],"output":{"name":"rangelimits"}}],[5,"fold_return_type","","",null,{"inputs":[{"name":"v"},{"name":"returntype"}],"output":{"name":"returntype"}}],[5,"fold_span","","",null,{"inputs":[{"name":"v"},{"name":"span"}],"output":{"name":"span"}}],[5,"fold_stmt","","",null,{"inputs":[{"name":"v"},{"name":"stmt"}],"output":{"name":"stmt"}}],[5,"fold_trait_bound","","",null,{"inputs":[{"name":"v"},{"name":"traitbound"}],"output":{"name":"traitbound"}}],[5,"fold_trait_bound_modifier","","",null,{"inputs":[{"name":"v"},{"name":"traitboundmodifier"}],"output":{"name":"traitboundmodifier"}}],[5,"fold_trait_item","","",null,{"inputs":[{"name":"v"},{"name":"traititem"}],"output":{"name":"traititem"}}],[5,"fold_trait_item_const","","",null,{"inputs":[{"name":"v"},{"name":"traititemconst"}],"output":{"name":"traititemconst"}}],[5,"fold_trait_item_macro","","",null,{"inputs":[{"name":"v"},{"name":"traititemmacro"}],"output":{"name":"traititemmacro"}}],[5,"fold_trait_item_method","","",null,{"inputs":[{"name":"v"},{"name":"traititemmethod"}],"output":{"name":"traititemmethod"}}],[5,"fold_trait_item_type","","",null,{"inputs":[{"name":"v"},{"name":"traititemtype"}],"output":{"name":"traititemtype"}}],[5,"fold_trait_item_verbatim","","",null,{"inputs":[{"name":"v"},{"name":"traititemverbatim"}],"output":{"name":"traititemverbatim"}}],[5,"fold_type","","",null,{"inputs":[{"name":"v"},{"name":"type"}],"output":{"name":"type"}}],[5,"fold_type_array","","",null,{"inputs":[{"name":"v"},{"name":"typearray"}],"output":{"name":"typearray"}}],[5,"fold_type_bare_fn","","",null,{"inputs":[{"name":"v"},{"name":"typebarefn"}],"output":{"name":"typebarefn"}}],[5,"fold_type_group","","",null,{"inputs":[{"name":"v"},{"name":"typegroup"}],"output":{"name":"typegroup"}}],[5,"fold_type_impl_trait","","",null,{"inputs":[{"name":"v"},{"name":"typeimpltrait"}],"output":{"name":"typeimpltrait"}}],[5,"fold_type_infer","","",null,{"inputs":[{"name":"v"},{"name":"typeinfer"}],"output":{"name":"typeinfer"}}],[5,"fold_type_macro","","",null,{"inputs":[{"name":"v"},{"name":"typemacro"}],"output":{"name":"typemacro"}}],[5,"fold_type_never","","",null,{"inputs":[{"name":"v"},{"name":"typenever"}],"output":{"name":"typenever"}}],[5,"fold_type_param","","",null,{"inputs":[{"name":"v"},{"name":"typeparam"}],"output":{"name":"typeparam"}}],[5,"fold_type_param_bound","","",null,{"inputs":[{"name":"v"},{"name":"typeparambound"}],"output":{"name":"typeparambound"}}],[5,"fold_type_paren","","",null,{"inputs":[{"name":"v"},{"name":"typeparen"}],"output":{"name":"typeparen"}}],[5,"fold_type_path","","",null,{"inputs":[{"name":"v"},{"name":"typepath"}],"output":{"name":"typepath"}}],[5,"fold_type_ptr","","",null,{"inputs":[{"name":"v"},{"name":"typeptr"}],"output":{"name":"typeptr"}}],[5,"fold_type_reference","","",null,{"inputs":[{"name":"v"},{"name":"typereference"}],"output":{"name":"typereference"}}],[5,"fold_type_slice","","",null,{"inputs":[{"name":"v"},{"name":"typeslice"}],"output":{"name":"typeslice"}}],[5,"fold_type_trait_object","","",null,{"inputs":[{"name":"v"},{"name":"typetraitobject"}],"output":{"name":"typetraitobject"}}],[5,"fold_type_tuple","","",null,{"inputs":[{"name":"v"},{"name":"typetuple"}],"output":{"name":"typetuple"}}],[5,"fold_type_verbatim","","",null,{"inputs":[{"name":"v"},{"name":"typeverbatim"}],"output":{"name":"typeverbatim"}}],[5,"fold_un_op","","",null,{"inputs":[{"name":"v"},{"name":"unop"}],"output":{"name":"unop"}}],[5,"fold_use_glob","","",null,{"inputs":[{"name":"v"},{"name":"useglob"}],"output":{"name":"useglob"}}],[5,"fold_use_list","","",null,{"inputs":[{"name":"v"},{"name":"uselist"}],"output":{"name":"uselist"}}],[5,"fold_use_path","","",null,{"inputs":[{"name":"v"},{"name":"usepath"}],"output":{"name":"usepath"}}],[5,"fold_use_tree","","",null,{"inputs":[{"name":"v"},{"name":"usetree"}],"output":{"name":"usetree"}}],[5,"fold_variant","","",null,{"inputs":[{"name":"v"},{"name":"variant"}],"output":{"name":"variant"}}],[5,"fold_vis_crate","","",null,{"inputs":[{"name":"v"},{"name":"viscrate"}],"output":{"name":"viscrate"}}],[5,"fold_vis_public","","",null,{"inputs":[{"name":"v"},{"name":"vispublic"}],"output":{"name":"vispublic"}}],[5,"fold_vis_restricted","","",null,{"inputs":[{"name":"v"},{"name":"visrestricted"}],"output":{"name":"visrestricted"}}],[5,"fold_visibility","","",null,{"inputs":[{"name":"v"},{"name":"visibility"}],"output":{"name":"visibility"}}],[5,"fold_where_clause","","",null,{"inputs":[{"name":"v"},{"name":"whereclause"}],"output":{"name":"whereclause"}}],[5,"fold_where_predicate","","",null,{"inputs":[{"name":"v"},{"name":"wherepredicate"}],"output":{"name":"wherepredicate"}}],[8,"Fold","","Syntax tree traversal to transform the nodes of an owned syntax tree.",null,null],[11,"fold_abi","","",295,{"inputs":[{"name":"self"},{"name":"abi"}],"output":{"name":"abi"}}],[11,"fold_angle_bracketed_generic_arguments","","",295,{"inputs":[{"name":"self"},{"name":"anglebracketedgenericarguments"}],"output":{"name":"anglebracketedgenericarguments"}}],[11,"fold_arg_captured","","",295,{"inputs":[{"name":"self"},{"name":"argcaptured"}],"output":{"name":"argcaptured"}}],[11,"fold_arg_self","","",295,{"inputs":[{"name":"self"},{"name":"argself"}],"output":{"name":"argself"}}],[11,"fold_arg_self_ref","","",295,{"inputs":[{"name":"self"},{"name":"argselfref"}],"output":{"name":"argselfref"}}],[11,"fold_arm","","",295,{"inputs":[{"name":"self"},{"name":"arm"}],"output":{"name":"arm"}}],[11,"fold_attr_style","","",295,{"inputs":[{"name":"self"},{"name":"attrstyle"}],"output":{"name":"attrstyle"}}],[11,"fold_attribute","","",295,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"fold_bare_fn_arg","","",295,{"inputs":[{"name":"self"},{"name":"barefnarg"}],"output":{"name":"barefnarg"}}],[11,"fold_bare_fn_arg_name","","",295,{"inputs":[{"name":"self"},{"name":"barefnargname"}],"output":{"name":"barefnargname"}}],[11,"fold_bin_op","","",295,{"inputs":[{"name":"self"},{"name":"binop"}],"output":{"name":"binop"}}],[11,"fold_binding","","",295,{"inputs":[{"name":"self"},{"name":"binding"}],"output":{"name":"binding"}}],[11,"fold_block","","",295,{"inputs":[{"name":"self"},{"name":"block"}],"output":{"name":"block"}}],[11,"fold_bound_lifetimes","","",295,{"inputs":[{"name":"self"},{"name":"boundlifetimes"}],"output":{"name":"boundlifetimes"}}],[11,"fold_const_param","","",295,{"inputs":[{"name":"self"},{"name":"constparam"}],"output":{"name":"constparam"}}],[11,"fold_expr","","",295,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"expr"}}],[11,"fold_expr_addr_of","","",295,{"inputs":[{"name":"self"},{"name":"expraddrof"}],"output":{"name":"expraddrof"}}],[11,"fold_expr_array","","",295,{"inputs":[{"name":"self"},{"name":"exprarray"}],"output":{"name":"exprarray"}}],[11,"fold_expr_assign","","",295,{"inputs":[{"name":"self"},{"name":"exprassign"}],"output":{"name":"exprassign"}}],[11,"fold_expr_assign_op","","",295,{"inputs":[{"name":"self"},{"name":"exprassignop"}],"output":{"name":"exprassignop"}}],[11,"fold_expr_binary","","",295,{"inputs":[{"name":"self"},{"name":"exprbinary"}],"output":{"name":"exprbinary"}}],[11,"fold_expr_block","","",295,{"inputs":[{"name":"self"},{"name":"exprblock"}],"output":{"name":"exprblock"}}],[11,"fold_expr_box","","",295,{"inputs":[{"name":"self"},{"name":"exprbox"}],"output":{"name":"exprbox"}}],[11,"fold_expr_break","","",295,{"inputs":[{"name":"self"},{"name":"exprbreak"}],"output":{"name":"exprbreak"}}],[11,"fold_expr_call","","",295,{"inputs":[{"name":"self"},{"name":"exprcall"}],"output":{"name":"exprcall"}}],[11,"fold_expr_cast","","",295,{"inputs":[{"name":"self"},{"name":"exprcast"}],"output":{"name":"exprcast"}}],[11,"fold_expr_catch","","",295,{"inputs":[{"name":"self"},{"name":"exprcatch"}],"output":{"name":"exprcatch"}}],[11,"fold_expr_closure","","",295,{"inputs":[{"name":"self"},{"name":"exprclosure"}],"output":{"name":"exprclosure"}}],[11,"fold_expr_continue","","",295,{"inputs":[{"name":"self"},{"name":"exprcontinue"}],"output":{"name":"exprcontinue"}}],[11,"fold_expr_field","","",295,{"inputs":[{"name":"self"},{"name":"exprfield"}],"output":{"name":"exprfield"}}],[11,"fold_expr_for_loop","","",295,{"inputs":[{"name":"self"},{"name":"exprforloop"}],"output":{"name":"exprforloop"}}],[11,"fold_expr_group","","",295,{"inputs":[{"name":"self"},{"name":"exprgroup"}],"output":{"name":"exprgroup"}}],[11,"fold_expr_if","","",295,{"inputs":[{"name":"self"},{"name":"exprif"}],"output":{"name":"exprif"}}],[11,"fold_expr_if_let","","",295,{"inputs":[{"name":"self"},{"name":"expriflet"}],"output":{"name":"expriflet"}}],[11,"fold_expr_in_place","","",295,{"inputs":[{"name":"self"},{"name":"exprinplace"}],"output":{"name":"exprinplace"}}],[11,"fold_expr_index","","",295,{"inputs":[{"name":"self"},{"name":"exprindex"}],"output":{"name":"exprindex"}}],[11,"fold_expr_lit","","",295,{"inputs":[{"name":"self"},{"name":"exprlit"}],"output":{"name":"exprlit"}}],[11,"fold_expr_loop","","",295,{"inputs":[{"name":"self"},{"name":"exprloop"}],"output":{"name":"exprloop"}}],[11,"fold_expr_macro","","",295,{"inputs":[{"name":"self"},{"name":"exprmacro"}],"output":{"name":"exprmacro"}}],[11,"fold_expr_match","","",295,{"inputs":[{"name":"self"},{"name":"exprmatch"}],"output":{"name":"exprmatch"}}],[11,"fold_expr_method_call","","",295,{"inputs":[{"name":"self"},{"name":"exprmethodcall"}],"output":{"name":"exprmethodcall"}}],[11,"fold_expr_paren","","",295,{"inputs":[{"name":"self"},{"name":"exprparen"}],"output":{"name":"exprparen"}}],[11,"fold_expr_path","","",295,{"inputs":[{"name":"self"},{"name":"exprpath"}],"output":{"name":"exprpath"}}],[11,"fold_expr_range","","",295,{"inputs":[{"name":"self"},{"name":"exprrange"}],"output":{"name":"exprrange"}}],[11,"fold_expr_repeat","","",295,{"inputs":[{"name":"self"},{"name":"exprrepeat"}],"output":{"name":"exprrepeat"}}],[11,"fold_expr_return","","",295,{"inputs":[{"name":"self"},{"name":"exprreturn"}],"output":{"name":"exprreturn"}}],[11,"fold_expr_struct","","",295,{"inputs":[{"name":"self"},{"name":"exprstruct"}],"output":{"name":"exprstruct"}}],[11,"fold_expr_try","","",295,{"inputs":[{"name":"self"},{"name":"exprtry"}],"output":{"name":"exprtry"}}],[11,"fold_expr_tuple","","",295,{"inputs":[{"name":"self"},{"name":"exprtuple"}],"output":{"name":"exprtuple"}}],[11,"fold_expr_type","","",295,{"inputs":[{"name":"self"},{"name":"exprtype"}],"output":{"name":"exprtype"}}],[11,"fold_expr_unary","","",295,{"inputs":[{"name":"self"},{"name":"exprunary"}],"output":{"name":"exprunary"}}],[11,"fold_expr_unsafe","","",295,{"inputs":[{"name":"self"},{"name":"exprunsafe"}],"output":{"name":"exprunsafe"}}],[11,"fold_expr_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"exprverbatim"}],"output":{"name":"exprverbatim"}}],[11,"fold_expr_while","","",295,{"inputs":[{"name":"self"},{"name":"exprwhile"}],"output":{"name":"exprwhile"}}],[11,"fold_expr_while_let","","",295,{"inputs":[{"name":"self"},{"name":"exprwhilelet"}],"output":{"name":"exprwhilelet"}}],[11,"fold_expr_yield","","",295,{"inputs":[{"name":"self"},{"name":"expryield"}],"output":{"name":"expryield"}}],[11,"fold_field","","",295,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"field"}}],[11,"fold_field_pat","","",295,{"inputs":[{"name":"self"},{"name":"fieldpat"}],"output":{"name":"fieldpat"}}],[11,"fold_field_value","","",295,{"inputs":[{"name":"self"},{"name":"fieldvalue"}],"output":{"name":"fieldvalue"}}],[11,"fold_fields","","",295,{"inputs":[{"name":"self"},{"name":"fields"}],"output":{"name":"fields"}}],[11,"fold_fields_named","","",295,{"inputs":[{"name":"self"},{"name":"fieldsnamed"}],"output":{"name":"fieldsnamed"}}],[11,"fold_fields_unnamed","","",295,{"inputs":[{"name":"self"},{"name":"fieldsunnamed"}],"output":{"name":"fieldsunnamed"}}],[11,"fold_file","","",295,{"inputs":[{"name":"self"},{"name":"file"}],"output":{"name":"file"}}],[11,"fold_fn_arg","","",295,{"inputs":[{"name":"self"},{"name":"fnarg"}],"output":{"name":"fnarg"}}],[11,"fold_fn_decl","","",295,{"inputs":[{"name":"self"},{"name":"fndecl"}],"output":{"name":"fndecl"}}],[11,"fold_foreign_item","","",295,{"inputs":[{"name":"self"},{"name":"foreignitem"}],"output":{"name":"foreignitem"}}],[11,"fold_foreign_item_fn","","",295,{"inputs":[{"name":"self"},{"name":"foreignitemfn"}],"output":{"name":"foreignitemfn"}}],[11,"fold_foreign_item_static","","",295,{"inputs":[{"name":"self"},{"name":"foreignitemstatic"}],"output":{"name":"foreignitemstatic"}}],[11,"fold_foreign_item_type","","",295,{"inputs":[{"name":"self"},{"name":"foreignitemtype"}],"output":{"name":"foreignitemtype"}}],[11,"fold_foreign_item_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"foreignitemverbatim"}],"output":{"name":"foreignitemverbatim"}}],[11,"fold_generic_argument","","",295,{"inputs":[{"name":"self"},{"name":"genericargument"}],"output":{"name":"genericargument"}}],[11,"fold_generic_method_argument","","",295,{"inputs":[{"name":"self"},{"name":"genericmethodargument"}],"output":{"name":"genericmethodargument"}}],[11,"fold_generic_param","","",295,{"inputs":[{"name":"self"},{"name":"genericparam"}],"output":{"name":"genericparam"}}],[11,"fold_generics","","",295,{"inputs":[{"name":"self"},{"name":"generics"}],"output":{"name":"generics"}}],[11,"fold_ident","","",295,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"ident"}}],[11,"fold_impl_item","","",295,{"inputs":[{"name":"self"},{"name":"implitem"}],"output":{"name":"implitem"}}],[11,"fold_impl_item_const","","",295,{"inputs":[{"name":"self"},{"name":"implitemconst"}],"output":{"name":"implitemconst"}}],[11,"fold_impl_item_macro","","",295,{"inputs":[{"name":"self"},{"name":"implitemmacro"}],"output":{"name":"implitemmacro"}}],[11,"fold_impl_item_method","","",295,{"inputs":[{"name":"self"},{"name":"implitemmethod"}],"output":{"name":"implitemmethod"}}],[11,"fold_impl_item_type","","",295,{"inputs":[{"name":"self"},{"name":"implitemtype"}],"output":{"name":"implitemtype"}}],[11,"fold_impl_item_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"implitemverbatim"}],"output":{"name":"implitemverbatim"}}],[11,"fold_index","","",295,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"index"}}],[11,"fold_item","","",295,{"inputs":[{"name":"self"},{"name":"item"}],"output":{"name":"item"}}],[11,"fold_item_const","","",295,{"inputs":[{"name":"self"},{"name":"itemconst"}],"output":{"name":"itemconst"}}],[11,"fold_item_enum","","",295,{"inputs":[{"name":"self"},{"name":"itemenum"}],"output":{"name":"itemenum"}}],[11,"fold_item_extern_crate","","",295,{"inputs":[{"name":"self"},{"name":"itemexterncrate"}],"output":{"name":"itemexterncrate"}}],[11,"fold_item_fn","","",295,{"inputs":[{"name":"self"},{"name":"itemfn"}],"output":{"name":"itemfn"}}],[11,"fold_item_foreign_mod","","",295,{"inputs":[{"name":"self"},{"name":"itemforeignmod"}],"output":{"name":"itemforeignmod"}}],[11,"fold_item_impl","","",295,{"inputs":[{"name":"self"},{"name":"itemimpl"}],"output":{"name":"itemimpl"}}],[11,"fold_item_macro","","",295,{"inputs":[{"name":"self"},{"name":"itemmacro"}],"output":{"name":"itemmacro"}}],[11,"fold_item_macro2","","",295,{"inputs":[{"name":"self"},{"name":"itemmacro2"}],"output":{"name":"itemmacro2"}}],[11,"fold_item_mod","","",295,{"inputs":[{"name":"self"},{"name":"itemmod"}],"output":{"name":"itemmod"}}],[11,"fold_item_static","","",295,{"inputs":[{"name":"self"},{"name":"itemstatic"}],"output":{"name":"itemstatic"}}],[11,"fold_item_struct","","",295,{"inputs":[{"name":"self"},{"name":"itemstruct"}],"output":{"name":"itemstruct"}}],[11,"fold_item_trait","","",295,{"inputs":[{"name":"self"},{"name":"itemtrait"}],"output":{"name":"itemtrait"}}],[11,"fold_item_type","","",295,{"inputs":[{"name":"self"},{"name":"itemtype"}],"output":{"name":"itemtype"}}],[11,"fold_item_union","","",295,{"inputs":[{"name":"self"},{"name":"itemunion"}],"output":{"name":"itemunion"}}],[11,"fold_item_use","","",295,{"inputs":[{"name":"self"},{"name":"itemuse"}],"output":{"name":"itemuse"}}],[11,"fold_item_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"itemverbatim"}],"output":{"name":"itemverbatim"}}],[11,"fold_label","","",295,{"inputs":[{"name":"self"},{"name":"label"}],"output":{"name":"label"}}],[11,"fold_lifetime","","",295,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"lifetime"}}],[11,"fold_lifetime_def","","",295,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":{"name":"lifetimedef"}}],[11,"fold_lit","","",295,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"lit"}}],[11,"fold_lit_bool","","",295,{"inputs":[{"name":"self"},{"name":"litbool"}],"output":{"name":"litbool"}}],[11,"fold_lit_byte","","",295,{"inputs":[{"name":"self"},{"name":"litbyte"}],"output":{"name":"litbyte"}}],[11,"fold_lit_byte_str","","",295,{"inputs":[{"name":"self"},{"name":"litbytestr"}],"output":{"name":"litbytestr"}}],[11,"fold_lit_char","","",295,{"inputs":[{"name":"self"},{"name":"litchar"}],"output":{"name":"litchar"}}],[11,"fold_lit_float","","",295,{"inputs":[{"name":"self"},{"name":"litfloat"}],"output":{"name":"litfloat"}}],[11,"fold_lit_int","","",295,{"inputs":[{"name":"self"},{"name":"litint"}],"output":{"name":"litint"}}],[11,"fold_lit_str","","",295,{"inputs":[{"name":"self"},{"name":"litstr"}],"output":{"name":"litstr"}}],[11,"fold_lit_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"litverbatim"}],"output":{"name":"litverbatim"}}],[11,"fold_local","","",295,{"inputs":[{"name":"self"},{"name":"local"}],"output":{"name":"local"}}],[11,"fold_macro","","",295,{"inputs":[{"name":"self"},{"name":"macro"}],"output":{"name":"macro"}}],[11,"fold_macro_delimiter","","",295,{"inputs":[{"name":"self"},{"name":"macrodelimiter"}],"output":{"name":"macrodelimiter"}}],[11,"fold_member","","",295,{"inputs":[{"name":"self"},{"name":"member"}],"output":{"name":"member"}}],[11,"fold_meta","","",295,{"inputs":[{"name":"self"},{"name":"meta"}],"output":{"name":"meta"}}],[11,"fold_meta_list","","",295,{"inputs":[{"name":"self"},{"name":"metalist"}],"output":{"name":"metalist"}}],[11,"fold_meta_name_value","","",295,{"inputs":[{"name":"self"},{"name":"metanamevalue"}],"output":{"name":"metanamevalue"}}],[11,"fold_method_sig","","",295,{"inputs":[{"name":"self"},{"name":"methodsig"}],"output":{"name":"methodsig"}}],[11,"fold_method_turbofish","","",295,{"inputs":[{"name":"self"},{"name":"methodturbofish"}],"output":{"name":"methodturbofish"}}],[11,"fold_nested_meta","","",295,{"inputs":[{"name":"self"},{"name":"nestedmeta"}],"output":{"name":"nestedmeta"}}],[11,"fold_parenthesized_generic_arguments","","",295,{"inputs":[{"name":"self"},{"name":"parenthesizedgenericarguments"}],"output":{"name":"parenthesizedgenericarguments"}}],[11,"fold_pat","","",295,{"inputs":[{"name":"self"},{"name":"pat"}],"output":{"name":"pat"}}],[11,"fold_pat_box","","",295,{"inputs":[{"name":"self"},{"name":"patbox"}],"output":{"name":"patbox"}}],[11,"fold_pat_ident","","",295,{"inputs":[{"name":"self"},{"name":"patident"}],"output":{"name":"patident"}}],[11,"fold_pat_lit","","",295,{"inputs":[{"name":"self"},{"name":"patlit"}],"output":{"name":"patlit"}}],[11,"fold_pat_macro","","",295,{"inputs":[{"name":"self"},{"name":"patmacro"}],"output":{"name":"patmacro"}}],[11,"fold_pat_path","","",295,{"inputs":[{"name":"self"},{"name":"patpath"}],"output":{"name":"patpath"}}],[11,"fold_pat_range","","",295,{"inputs":[{"name":"self"},{"name":"patrange"}],"output":{"name":"patrange"}}],[11,"fold_pat_ref","","",295,{"inputs":[{"name":"self"},{"name":"patref"}],"output":{"name":"patref"}}],[11,"fold_pat_slice","","",295,{"inputs":[{"name":"self"},{"name":"patslice"}],"output":{"name":"patslice"}}],[11,"fold_pat_struct","","",295,{"inputs":[{"name":"self"},{"name":"patstruct"}],"output":{"name":"patstruct"}}],[11,"fold_pat_tuple","","",295,{"inputs":[{"name":"self"},{"name":"pattuple"}],"output":{"name":"pattuple"}}],[11,"fold_pat_tuple_struct","","",295,{"inputs":[{"name":"self"},{"name":"pattuplestruct"}],"output":{"name":"pattuplestruct"}}],[11,"fold_pat_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"patverbatim"}],"output":{"name":"patverbatim"}}],[11,"fold_pat_wild","","",295,{"inputs":[{"name":"self"},{"name":"patwild"}],"output":{"name":"patwild"}}],[11,"fold_path","","",295,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"path"}}],[11,"fold_path_arguments","","",295,{"inputs":[{"name":"self"},{"name":"patharguments"}],"output":{"name":"patharguments"}}],[11,"fold_path_segment","","",295,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"pathsegment"}}],[11,"fold_predicate_eq","","",295,{"inputs":[{"name":"self"},{"name":"predicateeq"}],"output":{"name":"predicateeq"}}],[11,"fold_predicate_lifetime","","",295,{"inputs":[{"name":"self"},{"name":"predicatelifetime"}],"output":{"name":"predicatelifetime"}}],[11,"fold_predicate_type","","",295,{"inputs":[{"name":"self"},{"name":"predicatetype"}],"output":{"name":"predicatetype"}}],[11,"fold_qself","","",295,{"inputs":[{"name":"self"},{"name":"qself"}],"output":{"name":"qself"}}],[11,"fold_range_limits","","",295,{"inputs":[{"name":"self"},{"name":"rangelimits"}],"output":{"name":"rangelimits"}}],[11,"fold_return_type","","",295,{"inputs":[{"name":"self"},{"name":"returntype"}],"output":{"name":"returntype"}}],[11,"fold_span","","",295,{"inputs":[{"name":"self"},{"name":"span"}],"output":{"name":"span"}}],[11,"fold_stmt","","",295,{"inputs":[{"name":"self"},{"name":"stmt"}],"output":{"name":"stmt"}}],[11,"fold_trait_bound","","",295,{"inputs":[{"name":"self"},{"name":"traitbound"}],"output":{"name":"traitbound"}}],[11,"fold_trait_bound_modifier","","",295,{"inputs":[{"name":"self"},{"name":"traitboundmodifier"}],"output":{"name":"traitboundmodifier"}}],[11,"fold_trait_item","","",295,{"inputs":[{"name":"self"},{"name":"traititem"}],"output":{"name":"traititem"}}],[11,"fold_trait_item_const","","",295,{"inputs":[{"name":"self"},{"name":"traititemconst"}],"output":{"name":"traititemconst"}}],[11,"fold_trait_item_macro","","",295,{"inputs":[{"name":"self"},{"name":"traititemmacro"}],"output":{"name":"traititemmacro"}}],[11,"fold_trait_item_method","","",295,{"inputs":[{"name":"self"},{"name":"traititemmethod"}],"output":{"name":"traititemmethod"}}],[11,"fold_trait_item_type","","",295,{"inputs":[{"name":"self"},{"name":"traititemtype"}],"output":{"name":"traititemtype"}}],[11,"fold_trait_item_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"traititemverbatim"}],"output":{"name":"traititemverbatim"}}],[11,"fold_type","","",295,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"type"}}],[11,"fold_type_array","","",295,{"inputs":[{"name":"self"},{"name":"typearray"}],"output":{"name":"typearray"}}],[11,"fold_type_bare_fn","","",295,{"inputs":[{"name":"self"},{"name":"typebarefn"}],"output":{"name":"typebarefn"}}],[11,"fold_type_group","","",295,{"inputs":[{"name":"self"},{"name":"typegroup"}],"output":{"name":"typegroup"}}],[11,"fold_type_impl_trait","","",295,{"inputs":[{"name":"self"},{"name":"typeimpltrait"}],"output":{"name":"typeimpltrait"}}],[11,"fold_type_infer","","",295,{"inputs":[{"name":"self"},{"name":"typeinfer"}],"output":{"name":"typeinfer"}}],[11,"fold_type_macro","","",295,{"inputs":[{"name":"self"},{"name":"typemacro"}],"output":{"name":"typemacro"}}],[11,"fold_type_never","","",295,{"inputs":[{"name":"self"},{"name":"typenever"}],"output":{"name":"typenever"}}],[11,"fold_type_param","","",295,{"inputs":[{"name":"self"},{"name":"typeparam"}],"output":{"name":"typeparam"}}],[11,"fold_type_param_bound","","",295,{"inputs":[{"name":"self"},{"name":"typeparambound"}],"output":{"name":"typeparambound"}}],[11,"fold_type_paren","","",295,{"inputs":[{"name":"self"},{"name":"typeparen"}],"output":{"name":"typeparen"}}],[11,"fold_type_path","","",295,{"inputs":[{"name":"self"},{"name":"typepath"}],"output":{"name":"typepath"}}],[11,"fold_type_ptr","","",295,{"inputs":[{"name":"self"},{"name":"typeptr"}],"output":{"name":"typeptr"}}],[11,"fold_type_reference","","",295,{"inputs":[{"name":"self"},{"name":"typereference"}],"output":{"name":"typereference"}}],[11,"fold_type_slice","","",295,{"inputs":[{"name":"self"},{"name":"typeslice"}],"output":{"name":"typeslice"}}],[11,"fold_type_trait_object","","",295,{"inputs":[{"name":"self"},{"name":"typetraitobject"}],"output":{"name":"typetraitobject"}}],[11,"fold_type_tuple","","",295,{"inputs":[{"name":"self"},{"name":"typetuple"}],"output":{"name":"typetuple"}}],[11,"fold_type_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"typeverbatim"}],"output":{"name":"typeverbatim"}}],[11,"fold_un_op","","",295,{"inputs":[{"name":"self"},{"name":"unop"}],"output":{"name":"unop"}}],[11,"fold_use_glob","","",295,{"inputs":[{"name":"self"},{"name":"useglob"}],"output":{"name":"useglob"}}],[11,"fold_use_list","","",295,{"inputs":[{"name":"self"},{"name":"uselist"}],"output":{"name":"uselist"}}],[11,"fold_use_path","","",295,{"inputs":[{"name":"self"},{"name":"usepath"}],"output":{"name":"usepath"}}],[11,"fold_use_tree","","",295,{"inputs":[{"name":"self"},{"name":"usetree"}],"output":{"name":"usetree"}}],[11,"fold_variant","","",295,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"variant"}}],[11,"fold_vis_crate","","",295,{"inputs":[{"name":"self"},{"name":"viscrate"}],"output":{"name":"viscrate"}}],[11,"fold_vis_public","","",295,{"inputs":[{"name":"self"},{"name":"vispublic"}],"output":{"name":"vispublic"}}],[11,"fold_vis_restricted","","",295,{"inputs":[{"name":"self"},{"name":"visrestricted"}],"output":{"name":"visrestricted"}}],[11,"fold_visibility","","",295,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"visibility"}}],[11,"fold_where_clause","","",295,{"inputs":[{"name":"self"},{"name":"whereclause"}],"output":{"name":"whereclause"}}],[11,"fold_where_predicate","","",295,{"inputs":[{"name":"self"},{"name":"wherepredicate"}],"output":{"name":"wherepredicate"}}],[11,"fmt","syn::synom","",296,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",296,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",296,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"named","syn","Define a parser function with the signature expected by syn parser combinators.",null,null],[14,"call","","Invoke the given parser function with zero or more arguments.",null,null],[14,"map","","Transform the result of a parser by applying a function or closure.",null,null],[14,"not","","Invert the result of a parser by parsing successfully if the given parser fails to parse and vice versa.",null,null],[14,"cond","","Execute a parser only if a condition is met, otherwise return None.",null,null],[14,"cond_reduce","","Execute a parser only if a condition is met, otherwise fail to parse.",null,null],[14,"many0","","Parse zero or more values using the given parser.",null,null],[14,"switch","","Pattern-match the result of a parser to select which other parser to run.",null,null],[14,"value","","Produce the given value without parsing anything.",null,null],[14,"reject","","Unconditionally fail to parse anything.",null,null],[14,"tuple","","Run a series of parsers and produce all of the results in a tuple.",null,null],[14,"alt","","Run a series of parsers, returning the result of the first one which succeeds.",null,null],[14,"do_parse","","Run a series of parsers, optionally naming each intermediate result, followed by a step to combine the intermediate results.",null,null],[14,"input_end","","Parse nothing and succeed only if the end of the enclosing block has been reached.",null,null],[14,"option","","Turn a failed parse into `None` and a successful parse into `Some`.",null,null],[14,"epsilon","","Parses nothing and always succeeds.",null,null],[14,"syn","","Parse any type that implements the `Synom` trait.",null,null],[14,"parens","","Parse inside of `(` `)` parentheses.",null,null],[14,"brackets","","Parse inside of `[` `]` square brackets.",null,null],[14,"braces","","Parse inside of `{` `}` curly braces.",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type representation of a given token.",null,null],[14,"punct","","Parse a single Rust punctuation token.",null,null],[14,"keyword","","Parse a single Rust keyword token.",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the [`quote!`] macro but uses type inference to figure out a return type for those tokens.",null,null],[11,"fold_abi","syn::fold","",295,{"inputs":[{"name":"self"},{"name":"abi"}],"output":{"name":"abi"}}],[11,"fold_angle_bracketed_generic_arguments","","",295,{"inputs":[{"name":"self"},{"name":"anglebracketedgenericarguments"}],"output":{"name":"anglebracketedgenericarguments"}}],[11,"fold_arg_captured","","",295,{"inputs":[{"name":"self"},{"name":"argcaptured"}],"output":{"name":"argcaptured"}}],[11,"fold_arg_self","","",295,{"inputs":[{"name":"self"},{"name":"argself"}],"output":{"name":"argself"}}],[11,"fold_arg_self_ref","","",295,{"inputs":[{"name":"self"},{"name":"argselfref"}],"output":{"name":"argselfref"}}],[11,"fold_arm","","",295,{"inputs":[{"name":"self"},{"name":"arm"}],"output":{"name":"arm"}}],[11,"fold_attr_style","","",295,{"inputs":[{"name":"self"},{"name":"attrstyle"}],"output":{"name":"attrstyle"}}],[11,"fold_attribute","","",295,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"fold_bare_fn_arg","","",295,{"inputs":[{"name":"self"},{"name":"barefnarg"}],"output":{"name":"barefnarg"}}],[11,"fold_bare_fn_arg_name","","",295,{"inputs":[{"name":"self"},{"name":"barefnargname"}],"output":{"name":"barefnargname"}}],[11,"fold_bin_op","","",295,{"inputs":[{"name":"self"},{"name":"binop"}],"output":{"name":"binop"}}],[11,"fold_binding","","",295,{"inputs":[{"name":"self"},{"name":"binding"}],"output":{"name":"binding"}}],[11,"fold_block","","",295,{"inputs":[{"name":"self"},{"name":"block"}],"output":{"name":"block"}}],[11,"fold_bound_lifetimes","","",295,{"inputs":[{"name":"self"},{"name":"boundlifetimes"}],"output":{"name":"boundlifetimes"}}],[11,"fold_const_param","","",295,{"inputs":[{"name":"self"},{"name":"constparam"}],"output":{"name":"constparam"}}],[11,"fold_expr","","",295,{"inputs":[{"name":"self"},{"name":"expr"}],"output":{"name":"expr"}}],[11,"fold_expr_addr_of","","",295,{"inputs":[{"name":"self"},{"name":"expraddrof"}],"output":{"name":"expraddrof"}}],[11,"fold_expr_array","","",295,{"inputs":[{"name":"self"},{"name":"exprarray"}],"output":{"name":"exprarray"}}],[11,"fold_expr_assign","","",295,{"inputs":[{"name":"self"},{"name":"exprassign"}],"output":{"name":"exprassign"}}],[11,"fold_expr_assign_op","","",295,{"inputs":[{"name":"self"},{"name":"exprassignop"}],"output":{"name":"exprassignop"}}],[11,"fold_expr_binary","","",295,{"inputs":[{"name":"self"},{"name":"exprbinary"}],"output":{"name":"exprbinary"}}],[11,"fold_expr_block","","",295,{"inputs":[{"name":"self"},{"name":"exprblock"}],"output":{"name":"exprblock"}}],[11,"fold_expr_box","","",295,{"inputs":[{"name":"self"},{"name":"exprbox"}],"output":{"name":"exprbox"}}],[11,"fold_expr_break","","",295,{"inputs":[{"name":"self"},{"name":"exprbreak"}],"output":{"name":"exprbreak"}}],[11,"fold_expr_call","","",295,{"inputs":[{"name":"self"},{"name":"exprcall"}],"output":{"name":"exprcall"}}],[11,"fold_expr_cast","","",295,{"inputs":[{"name":"self"},{"name":"exprcast"}],"output":{"name":"exprcast"}}],[11,"fold_expr_catch","","",295,{"inputs":[{"name":"self"},{"name":"exprcatch"}],"output":{"name":"exprcatch"}}],[11,"fold_expr_closure","","",295,{"inputs":[{"name":"self"},{"name":"exprclosure"}],"output":{"name":"exprclosure"}}],[11,"fold_expr_continue","","",295,{"inputs":[{"name":"self"},{"name":"exprcontinue"}],"output":{"name":"exprcontinue"}}],[11,"fold_expr_field","","",295,{"inputs":[{"name":"self"},{"name":"exprfield"}],"output":{"name":"exprfield"}}],[11,"fold_expr_for_loop","","",295,{"inputs":[{"name":"self"},{"name":"exprforloop"}],"output":{"name":"exprforloop"}}],[11,"fold_expr_group","","",295,{"inputs":[{"name":"self"},{"name":"exprgroup"}],"output":{"name":"exprgroup"}}],[11,"fold_expr_if","","",295,{"inputs":[{"name":"self"},{"name":"exprif"}],"output":{"name":"exprif"}}],[11,"fold_expr_if_let","","",295,{"inputs":[{"name":"self"},{"name":"expriflet"}],"output":{"name":"expriflet"}}],[11,"fold_expr_in_place","","",295,{"inputs":[{"name":"self"},{"name":"exprinplace"}],"output":{"name":"exprinplace"}}],[11,"fold_expr_index","","",295,{"inputs":[{"name":"self"},{"name":"exprindex"}],"output":{"name":"exprindex"}}],[11,"fold_expr_lit","","",295,{"inputs":[{"name":"self"},{"name":"exprlit"}],"output":{"name":"exprlit"}}],[11,"fold_expr_loop","","",295,{"inputs":[{"name":"self"},{"name":"exprloop"}],"output":{"name":"exprloop"}}],[11,"fold_expr_macro","","",295,{"inputs":[{"name":"self"},{"name":"exprmacro"}],"output":{"name":"exprmacro"}}],[11,"fold_expr_match","","",295,{"inputs":[{"name":"self"},{"name":"exprmatch"}],"output":{"name":"exprmatch"}}],[11,"fold_expr_method_call","","",295,{"inputs":[{"name":"self"},{"name":"exprmethodcall"}],"output":{"name":"exprmethodcall"}}],[11,"fold_expr_paren","","",295,{"inputs":[{"name":"self"},{"name":"exprparen"}],"output":{"name":"exprparen"}}],[11,"fold_expr_path","","",295,{"inputs":[{"name":"self"},{"name":"exprpath"}],"output":{"name":"exprpath"}}],[11,"fold_expr_range","","",295,{"inputs":[{"name":"self"},{"name":"exprrange"}],"output":{"name":"exprrange"}}],[11,"fold_expr_repeat","","",295,{"inputs":[{"name":"self"},{"name":"exprrepeat"}],"output":{"name":"exprrepeat"}}],[11,"fold_expr_return","","",295,{"inputs":[{"name":"self"},{"name":"exprreturn"}],"output":{"name":"exprreturn"}}],[11,"fold_expr_struct","","",295,{"inputs":[{"name":"self"},{"name":"exprstruct"}],"output":{"name":"exprstruct"}}],[11,"fold_expr_try","","",295,{"inputs":[{"name":"self"},{"name":"exprtry"}],"output":{"name":"exprtry"}}],[11,"fold_expr_tuple","","",295,{"inputs":[{"name":"self"},{"name":"exprtuple"}],"output":{"name":"exprtuple"}}],[11,"fold_expr_type","","",295,{"inputs":[{"name":"self"},{"name":"exprtype"}],"output":{"name":"exprtype"}}],[11,"fold_expr_unary","","",295,{"inputs":[{"name":"self"},{"name":"exprunary"}],"output":{"name":"exprunary"}}],[11,"fold_expr_unsafe","","",295,{"inputs":[{"name":"self"},{"name":"exprunsafe"}],"output":{"name":"exprunsafe"}}],[11,"fold_expr_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"exprverbatim"}],"output":{"name":"exprverbatim"}}],[11,"fold_expr_while","","",295,{"inputs":[{"name":"self"},{"name":"exprwhile"}],"output":{"name":"exprwhile"}}],[11,"fold_expr_while_let","","",295,{"inputs":[{"name":"self"},{"name":"exprwhilelet"}],"output":{"name":"exprwhilelet"}}],[11,"fold_expr_yield","","",295,{"inputs":[{"name":"self"},{"name":"expryield"}],"output":{"name":"expryield"}}],[11,"fold_field","","",295,{"inputs":[{"name":"self"},{"name":"field"}],"output":{"name":"field"}}],[11,"fold_field_pat","","",295,{"inputs":[{"name":"self"},{"name":"fieldpat"}],"output":{"name":"fieldpat"}}],[11,"fold_field_value","","",295,{"inputs":[{"name":"self"},{"name":"fieldvalue"}],"output":{"name":"fieldvalue"}}],[11,"fold_fields","","",295,{"inputs":[{"name":"self"},{"name":"fields"}],"output":{"name":"fields"}}],[11,"fold_fields_named","","",295,{"inputs":[{"name":"self"},{"name":"fieldsnamed"}],"output":{"name":"fieldsnamed"}}],[11,"fold_fields_unnamed","","",295,{"inputs":[{"name":"self"},{"name":"fieldsunnamed"}],"output":{"name":"fieldsunnamed"}}],[11,"fold_file","","",295,{"inputs":[{"name":"self"},{"name":"file"}],"output":{"name":"file"}}],[11,"fold_fn_arg","","",295,{"inputs":[{"name":"self"},{"name":"fnarg"}],"output":{"name":"fnarg"}}],[11,"fold_fn_decl","","",295,{"inputs":[{"name":"self"},{"name":"fndecl"}],"output":{"name":"fndecl"}}],[11,"fold_foreign_item","","",295,{"inputs":[{"name":"self"},{"name":"foreignitem"}],"output":{"name":"foreignitem"}}],[11,"fold_foreign_item_fn","","",295,{"inputs":[{"name":"self"},{"name":"foreignitemfn"}],"output":{"name":"foreignitemfn"}}],[11,"fold_foreign_item_static","","",295,{"inputs":[{"name":"self"},{"name":"foreignitemstatic"}],"output":{"name":"foreignitemstatic"}}],[11,"fold_foreign_item_type","","",295,{"inputs":[{"name":"self"},{"name":"foreignitemtype"}],"output":{"name":"foreignitemtype"}}],[11,"fold_foreign_item_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"foreignitemverbatim"}],"output":{"name":"foreignitemverbatim"}}],[11,"fold_generic_argument","","",295,{"inputs":[{"name":"self"},{"name":"genericargument"}],"output":{"name":"genericargument"}}],[11,"fold_generic_method_argument","","",295,{"inputs":[{"name":"self"},{"name":"genericmethodargument"}],"output":{"name":"genericmethodargument"}}],[11,"fold_generic_param","","",295,{"inputs":[{"name":"self"},{"name":"genericparam"}],"output":{"name":"genericparam"}}],[11,"fold_generics","","",295,{"inputs":[{"name":"self"},{"name":"generics"}],"output":{"name":"generics"}}],[11,"fold_ident","","",295,{"inputs":[{"name":"self"},{"name":"ident"}],"output":{"name":"ident"}}],[11,"fold_impl_item","","",295,{"inputs":[{"name":"self"},{"name":"implitem"}],"output":{"name":"implitem"}}],[11,"fold_impl_item_const","","",295,{"inputs":[{"name":"self"},{"name":"implitemconst"}],"output":{"name":"implitemconst"}}],[11,"fold_impl_item_macro","","",295,{"inputs":[{"name":"self"},{"name":"implitemmacro"}],"output":{"name":"implitemmacro"}}],[11,"fold_impl_item_method","","",295,{"inputs":[{"name":"self"},{"name":"implitemmethod"}],"output":{"name":"implitemmethod"}}],[11,"fold_impl_item_type","","",295,{"inputs":[{"name":"self"},{"name":"implitemtype"}],"output":{"name":"implitemtype"}}],[11,"fold_impl_item_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"implitemverbatim"}],"output":{"name":"implitemverbatim"}}],[11,"fold_index","","",295,{"inputs":[{"name":"self"},{"name":"index"}],"output":{"name":"index"}}],[11,"fold_item","","",295,{"inputs":[{"name":"self"},{"name":"item"}],"output":{"name":"item"}}],[11,"fold_item_const","","",295,{"inputs":[{"name":"self"},{"name":"itemconst"}],"output":{"name":"itemconst"}}],[11,"fold_item_enum","","",295,{"inputs":[{"name":"self"},{"name":"itemenum"}],"output":{"name":"itemenum"}}],[11,"fold_item_extern_crate","","",295,{"inputs":[{"name":"self"},{"name":"itemexterncrate"}],"output":{"name":"itemexterncrate"}}],[11,"fold_item_fn","","",295,{"inputs":[{"name":"self"},{"name":"itemfn"}],"output":{"name":"itemfn"}}],[11,"fold_item_foreign_mod","","",295,{"inputs":[{"name":"self"},{"name":"itemforeignmod"}],"output":{"name":"itemforeignmod"}}],[11,"fold_item_impl","","",295,{"inputs":[{"name":"self"},{"name":"itemimpl"}],"output":{"name":"itemimpl"}}],[11,"fold_item_macro","","",295,{"inputs":[{"name":"self"},{"name":"itemmacro"}],"output":{"name":"itemmacro"}}],[11,"fold_item_macro2","","",295,{"inputs":[{"name":"self"},{"name":"itemmacro2"}],"output":{"name":"itemmacro2"}}],[11,"fold_item_mod","","",295,{"inputs":[{"name":"self"},{"name":"itemmod"}],"output":{"name":"itemmod"}}],[11,"fold_item_static","","",295,{"inputs":[{"name":"self"},{"name":"itemstatic"}],"output":{"name":"itemstatic"}}],[11,"fold_item_struct","","",295,{"inputs":[{"name":"self"},{"name":"itemstruct"}],"output":{"name":"itemstruct"}}],[11,"fold_item_trait","","",295,{"inputs":[{"name":"self"},{"name":"itemtrait"}],"output":{"name":"itemtrait"}}],[11,"fold_item_type","","",295,{"inputs":[{"name":"self"},{"name":"itemtype"}],"output":{"name":"itemtype"}}],[11,"fold_item_union","","",295,{"inputs":[{"name":"self"},{"name":"itemunion"}],"output":{"name":"itemunion"}}],[11,"fold_item_use","","",295,{"inputs":[{"name":"self"},{"name":"itemuse"}],"output":{"name":"itemuse"}}],[11,"fold_item_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"itemverbatim"}],"output":{"name":"itemverbatim"}}],[11,"fold_label","","",295,{"inputs":[{"name":"self"},{"name":"label"}],"output":{"name":"label"}}],[11,"fold_lifetime","","",295,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"lifetime"}}],[11,"fold_lifetime_def","","",295,{"inputs":[{"name":"self"},{"name":"lifetimedef"}],"output":{"name":"lifetimedef"}}],[11,"fold_lit","","",295,{"inputs":[{"name":"self"},{"name":"lit"}],"output":{"name":"lit"}}],[11,"fold_lit_bool","","",295,{"inputs":[{"name":"self"},{"name":"litbool"}],"output":{"name":"litbool"}}],[11,"fold_lit_byte","","",295,{"inputs":[{"name":"self"},{"name":"litbyte"}],"output":{"name":"litbyte"}}],[11,"fold_lit_byte_str","","",295,{"inputs":[{"name":"self"},{"name":"litbytestr"}],"output":{"name":"litbytestr"}}],[11,"fold_lit_char","","",295,{"inputs":[{"name":"self"},{"name":"litchar"}],"output":{"name":"litchar"}}],[11,"fold_lit_float","","",295,{"inputs":[{"name":"self"},{"name":"litfloat"}],"output":{"name":"litfloat"}}],[11,"fold_lit_int","","",295,{"inputs":[{"name":"self"},{"name":"litint"}],"output":{"name":"litint"}}],[11,"fold_lit_str","","",295,{"inputs":[{"name":"self"},{"name":"litstr"}],"output":{"name":"litstr"}}],[11,"fold_lit_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"litverbatim"}],"output":{"name":"litverbatim"}}],[11,"fold_local","","",295,{"inputs":[{"name":"self"},{"name":"local"}],"output":{"name":"local"}}],[11,"fold_macro","","",295,{"inputs":[{"name":"self"},{"name":"macro"}],"output":{"name":"macro"}}],[11,"fold_macro_delimiter","","",295,{"inputs":[{"name":"self"},{"name":"macrodelimiter"}],"output":{"name":"macrodelimiter"}}],[11,"fold_member","","",295,{"inputs":[{"name":"self"},{"name":"member"}],"output":{"name":"member"}}],[11,"fold_meta","","",295,{"inputs":[{"name":"self"},{"name":"meta"}],"output":{"name":"meta"}}],[11,"fold_meta_list","","",295,{"inputs":[{"name":"self"},{"name":"metalist"}],"output":{"name":"metalist"}}],[11,"fold_meta_name_value","","",295,{"inputs":[{"name":"self"},{"name":"metanamevalue"}],"output":{"name":"metanamevalue"}}],[11,"fold_method_sig","","",295,{"inputs":[{"name":"self"},{"name":"methodsig"}],"output":{"name":"methodsig"}}],[11,"fold_method_turbofish","","",295,{"inputs":[{"name":"self"},{"name":"methodturbofish"}],"output":{"name":"methodturbofish"}}],[11,"fold_nested_meta","","",295,{"inputs":[{"name":"self"},{"name":"nestedmeta"}],"output":{"name":"nestedmeta"}}],[11,"fold_parenthesized_generic_arguments","","",295,{"inputs":[{"name":"self"},{"name":"parenthesizedgenericarguments"}],"output":{"name":"parenthesizedgenericarguments"}}],[11,"fold_pat","","",295,{"inputs":[{"name":"self"},{"name":"pat"}],"output":{"name":"pat"}}],[11,"fold_pat_box","","",295,{"inputs":[{"name":"self"},{"name":"patbox"}],"output":{"name":"patbox"}}],[11,"fold_pat_ident","","",295,{"inputs":[{"name":"self"},{"name":"patident"}],"output":{"name":"patident"}}],[11,"fold_pat_lit","","",295,{"inputs":[{"name":"self"},{"name":"patlit"}],"output":{"name":"patlit"}}],[11,"fold_pat_macro","","",295,{"inputs":[{"name":"self"},{"name":"patmacro"}],"output":{"name":"patmacro"}}],[11,"fold_pat_path","","",295,{"inputs":[{"name":"self"},{"name":"patpath"}],"output":{"name":"patpath"}}],[11,"fold_pat_range","","",295,{"inputs":[{"name":"self"},{"name":"patrange"}],"output":{"name":"patrange"}}],[11,"fold_pat_ref","","",295,{"inputs":[{"name":"self"},{"name":"patref"}],"output":{"name":"patref"}}],[11,"fold_pat_slice","","",295,{"inputs":[{"name":"self"},{"name":"patslice"}],"output":{"name":"patslice"}}],[11,"fold_pat_struct","","",295,{"inputs":[{"name":"self"},{"name":"patstruct"}],"output":{"name":"patstruct"}}],[11,"fold_pat_tuple","","",295,{"inputs":[{"name":"self"},{"name":"pattuple"}],"output":{"name":"pattuple"}}],[11,"fold_pat_tuple_struct","","",295,{"inputs":[{"name":"self"},{"name":"pattuplestruct"}],"output":{"name":"pattuplestruct"}}],[11,"fold_pat_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"patverbatim"}],"output":{"name":"patverbatim"}}],[11,"fold_pat_wild","","",295,{"inputs":[{"name":"self"},{"name":"patwild"}],"output":{"name":"patwild"}}],[11,"fold_path","","",295,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"name":"path"}}],[11,"fold_path_arguments","","",295,{"inputs":[{"name":"self"},{"name":"patharguments"}],"output":{"name":"patharguments"}}],[11,"fold_path_segment","","",295,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"pathsegment"}}],[11,"fold_predicate_eq","","",295,{"inputs":[{"name":"self"},{"name":"predicateeq"}],"output":{"name":"predicateeq"}}],[11,"fold_predicate_lifetime","","",295,{"inputs":[{"name":"self"},{"name":"predicatelifetime"}],"output":{"name":"predicatelifetime"}}],[11,"fold_predicate_type","","",295,{"inputs":[{"name":"self"},{"name":"predicatetype"}],"output":{"name":"predicatetype"}}],[11,"fold_qself","","",295,{"inputs":[{"name":"self"},{"name":"qself"}],"output":{"name":"qself"}}],[11,"fold_range_limits","","",295,{"inputs":[{"name":"self"},{"name":"rangelimits"}],"output":{"name":"rangelimits"}}],[11,"fold_return_type","","",295,{"inputs":[{"name":"self"},{"name":"returntype"}],"output":{"name":"returntype"}}],[11,"fold_span","","",295,{"inputs":[{"name":"self"},{"name":"span"}],"output":{"name":"span"}}],[11,"fold_stmt","","",295,{"inputs":[{"name":"self"},{"name":"stmt"}],"output":{"name":"stmt"}}],[11,"fold_trait_bound","","",295,{"inputs":[{"name":"self"},{"name":"traitbound"}],"output":{"name":"traitbound"}}],[11,"fold_trait_bound_modifier","","",295,{"inputs":[{"name":"self"},{"name":"traitboundmodifier"}],"output":{"name":"traitboundmodifier"}}],[11,"fold_trait_item","","",295,{"inputs":[{"name":"self"},{"name":"traititem"}],"output":{"name":"traititem"}}],[11,"fold_trait_item_const","","",295,{"inputs":[{"name":"self"},{"name":"traititemconst"}],"output":{"name":"traititemconst"}}],[11,"fold_trait_item_macro","","",295,{"inputs":[{"name":"self"},{"name":"traititemmacro"}],"output":{"name":"traititemmacro"}}],[11,"fold_trait_item_method","","",295,{"inputs":[{"name":"self"},{"name":"traititemmethod"}],"output":{"name":"traititemmethod"}}],[11,"fold_trait_item_type","","",295,{"inputs":[{"name":"self"},{"name":"traititemtype"}],"output":{"name":"traititemtype"}}],[11,"fold_trait_item_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"traititemverbatim"}],"output":{"name":"traititemverbatim"}}],[11,"fold_type","","",295,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"type"}}],[11,"fold_type_array","","",295,{"inputs":[{"name":"self"},{"name":"typearray"}],"output":{"name":"typearray"}}],[11,"fold_type_bare_fn","","",295,{"inputs":[{"name":"self"},{"name":"typebarefn"}],"output":{"name":"typebarefn"}}],[11,"fold_type_group","","",295,{"inputs":[{"name":"self"},{"name":"typegroup"}],"output":{"name":"typegroup"}}],[11,"fold_type_impl_trait","","",295,{"inputs":[{"name":"self"},{"name":"typeimpltrait"}],"output":{"name":"typeimpltrait"}}],[11,"fold_type_infer","","",295,{"inputs":[{"name":"self"},{"name":"typeinfer"}],"output":{"name":"typeinfer"}}],[11,"fold_type_macro","","",295,{"inputs":[{"name":"self"},{"name":"typemacro"}],"output":{"name":"typemacro"}}],[11,"fold_type_never","","",295,{"inputs":[{"name":"self"},{"name":"typenever"}],"output":{"name":"typenever"}}],[11,"fold_type_param","","",295,{"inputs":[{"name":"self"},{"name":"typeparam"}],"output":{"name":"typeparam"}}],[11,"fold_type_param_bound","","",295,{"inputs":[{"name":"self"},{"name":"typeparambound"}],"output":{"name":"typeparambound"}}],[11,"fold_type_paren","","",295,{"inputs":[{"name":"self"},{"name":"typeparen"}],"output":{"name":"typeparen"}}],[11,"fold_type_path","","",295,{"inputs":[{"name":"self"},{"name":"typepath"}],"output":{"name":"typepath"}}],[11,"fold_type_ptr","","",295,{"inputs":[{"name":"self"},{"name":"typeptr"}],"output":{"name":"typeptr"}}],[11,"fold_type_reference","","",295,{"inputs":[{"name":"self"},{"name":"typereference"}],"output":{"name":"typereference"}}],[11,"fold_type_slice","","",295,{"inputs":[{"name":"self"},{"name":"typeslice"}],"output":{"name":"typeslice"}}],[11,"fold_type_trait_object","","",295,{"inputs":[{"name":"self"},{"name":"typetraitobject"}],"output":{"name":"typetraitobject"}}],[11,"fold_type_tuple","","",295,{"inputs":[{"name":"self"},{"name":"typetuple"}],"output":{"name":"typetuple"}}],[11,"fold_type_verbatim","","",295,{"inputs":[{"name":"self"},{"name":"typeverbatim"}],"output":{"name":"typeverbatim"}}],[11,"fold_un_op","","",295,{"inputs":[{"name":"self"},{"name":"unop"}],"output":{"name":"unop"}}],[11,"fold_use_glob","","",295,{"inputs":[{"name":"self"},{"name":"useglob"}],"output":{"name":"useglob"}}],[11,"fold_use_list","","",295,{"inputs":[{"name":"self"},{"name":"uselist"}],"output":{"name":"uselist"}}],[11,"fold_use_path","","",295,{"inputs":[{"name":"self"},{"name":"usepath"}],"output":{"name":"usepath"}}],[11,"fold_use_tree","","",295,{"inputs":[{"name":"self"},{"name":"usetree"}],"output":{"name":"usetree"}}],[11,"fold_variant","","",295,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"variant"}}],[11,"fold_vis_crate","","",295,{"inputs":[{"name":"self"},{"name":"viscrate"}],"output":{"name":"viscrate"}}],[11,"fold_vis_public","","",295,{"inputs":[{"name":"self"},{"name":"vispublic"}],"output":{"name":"vispublic"}}],[11,"fold_vis_restricted","","",295,{"inputs":[{"name":"self"},{"name":"visrestricted"}],"output":{"name":"visrestricted"}}],[11,"fold_visibility","","",295,{"inputs":[{"name":"self"},{"name":"visibility"}],"output":{"name":"visibility"}}],[11,"fold_where_clause","","",295,{"inputs":[{"name":"self"},{"name":"whereclause"}],"output":{"name":"whereclause"}}],[11,"fold_where_predicate","","",295,{"inputs":[{"name":"self"},{"name":"wherepredicate"}],"output":{"name":"wherepredicate"}}]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprAddrOf"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprCatch"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIfLet"],[3,"ExprInPlace"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprVerbatim"],[3,"ExprWhile"],[3,"ExprWhileLet"],[3,"ExprYield"],[3,"Index"],[3,"Arm"],[3,"Block"],[3,"FieldPat"],[3,"FieldValue"],[3,"Label"],[3,"Local"],[3,"MethodTurbofish"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatPath"],[3,"PatRange"],[3,"PatRef"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatVerbatim"],[3,"PatWild"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Ident"],[3,"ArgCaptured"],[3,"ArgSelf"],[3,"ArgSelfRef"],[3,"FnDecl"],[3,"ForeignItemFn"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemVerbatim"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemVerbatim"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"ItemVerbatim"],[3,"MethodSig"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemVerbatim"],[3,"UseGlob"],[3,"UseList"],[3,"UsePath"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"LitByte"],[3,"LitByteStr"],[3,"LitChar"],[3,"LitFloat"],[3,"LitInt"],[3,"LitStr"],[3,"LitVerbatim"],[3,"Macro"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[3,"PathTokens"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericMethodArgument"],[4,"Pat"],[4,"RangeLimits"],[4,"Stmt"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"Rocket"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Underscore"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"As"],[3,"Auto"],[3,"Box"],[3,"Break"],[3,"CapSelf"],[3,"Catch"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Self_"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Type"],[3,"Union"],[3,"Unsafe"],[3,"Use"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"TokenBuffer"],[3,"Cursor"],[8,"Synom"],[8,"Parser"],[4,"Pair"],[3,"Punctuated"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[8,"Spanned"],[8,"Fold"],[3,"ParseError"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}]],"paths":[[8,"UnicodeXID"]]};
initSearch(searchIndex);
